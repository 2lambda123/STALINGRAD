#!/bin/bash

dir="${1:-test-runs/last/}"

for file in $(find $dir -name "*.fail" -not -empty -print | sort); do
    if [ -z "`grep 'Variable not found' $file`" -a \
	-z "`grep 'Trying to normalize a non-definition' $file`" -a \
	-z "`grep 'Subprocess' $file | grep 'terminated with signal'`" ]; then
	printf -- '----- %s:\n\n' $file
	awk 1 $file # Like cat $file, but forces trailing newline if absent from $file
	echo
    fi
done

n_tests=$(find $dir -name "*.fail" | wc -l)
n_fails=$(find $dir -name "*.fail" -not -empty -print | wc -l)
n_crash=$(find $dir -name "*.time" -exec head -1 '{}' \; \
    | grep "Command exited with non-zero status" | wc -l)

n_unbound_var=$(find $dir -name "*.fail" | xargs grep "Variable not found" | wc -l)
n_wrong_defn=$(find $dir -name "*.fail" | xargs grep "Trying to normalize a non-definition" | wc -l)
n_too_hard=$(find $dir -name "*.fail" | xargs grep "Subprocess" | grep "terminated with signal" | wc -l)

echo ${n_tests} tests, ${n_fails} total failures, ${n_crash} crashes.
echo ${n_too_hard} out of resources, ${n_wrong_defn} bad definitions, ${n_unbound_var} unbound variables:

find $dir -name "*.fail" | xargs grep "Variable not found" | cut -f 4 -d ' ' | sort | uniq -c | sort -g
