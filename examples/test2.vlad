(include "j")

(define (derivative-using-*j f)
 (let ((f-*j (*j f))) (lambda (x) (cdr ((cdr (f-*j x)) 1)))))

;;; nonconformance

((derivative-using-*j
  (derivative-using-*j
   (let ((f-j* (lambda (x x-acute) (cons (exp x) (* (exp x) x-acute)))))
    (lambda (x) (cdr (f-j* x 1))))))
 4)
