(include "j")

(define (derivative-using-j* f)
 (let ((f-j* (j* f))) (lambda (x) (cdr (f-j* x 1)))))

(define (derivative-using-*j f)
 (let ((f-*j (*j f))) (lambda (x) (cdr ((cdr (f-*j x)) 1)))))

(define (bug x)
 (letrec ((g (lambda (y) x))
	  (f (lambda (y) (g 0))))
  (f 0)))

(*j bug)

(bug 4)

((derivative-using-j* bug) 4)

((derivative-using-*j bug) 4)
