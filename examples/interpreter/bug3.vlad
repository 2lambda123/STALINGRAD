(define (cdr (cons x y)) y)

(define (derivative-using-*j f)
 (let ((f-reverse (*j f)))
  (lambda (x) (cdr (unsensitize ((cdr (f-reverse (*j x))) (sensitize 1)))))))

(define (bug x) (letrec ((f (lambda (y) x))) (f 1)))

(*j bug)

(unsensitize ((cdr ((*j bug) (*j 4))) (sensitize 1)))

((derivative-using-*j bug) 4) ===> 1
