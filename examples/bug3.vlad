(define (derivative-using-reverse-j f)
 (let ((f-reverse (reverse-j f)))
  (lambda (x) (cdr ((cdr (f-reverse (reverse-j x))) 1)))))

(define (bug x) (letrec ((f (lambda (y) x))) (f 1)))

(reverse-j bug)

((cdr ((reverse-j bug) (reverse-j 4))) 1)

((derivative-using-reverse-j bug) 4)
