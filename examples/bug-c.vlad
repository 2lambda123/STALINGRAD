(include "j")

(define (derivative-using-*j f)
 (let ((f-*j (*j f))) (lambda (x) (cdr ((cdr (f-*j x)) 1)))))

((derivative-using-*j
  (lambda (d)
   ((letrec ((g (lambda (b) (lambda (c) b)))) (lambda (a) ((g 1) 1))) d)))
 4)

((derivative-using-*j
  (lambda (d)
   ((letrec ((g (lambda (b) (lambda (c) b)))) (lambda (a) ((g a) 1))) d)))
 4)

((derivative-using-*j
  (lambda (d)
   ((letrec ((g (lambda (b) (lambda (c) b)))
	     (h (lambda (p) (+ (p 1) (p 1)))))
     (lambda (a) (h (g a)))) d)))
 4)
