(define (abs x) (if (negative? x) (- 0 x) x))

(define (sqr x) (* x x))

(define (derivative-using-j* f)
 (let ((f-forward (j* f))) (lambda (x) (tangent (f-forward (bundle x 1))))))

(define (root f x epsilon)
 (let ((x-prime (- x (/ (f x) ((derivative-using-j* f) x)))))
  (if (<= (abs (- x x-prime)) epsilon) x (root f x-prime epsilon))))

(root (lambda (x) (- (sqr x) 4)) 5 1e-5)
