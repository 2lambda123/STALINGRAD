((#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= BUNDLE G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE J* TANGENT) #F ABS #(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE) #F DERIVATIVE-USING-J* #(APPLICATION #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (* + - / <= ABS DERIVATIVE-USING-J* G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE))) #(LAMBDA-EXPRESSION (BUNDLE G000000061 J* TANGENT) #(5 8 12 14) F #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) (BUNDLE F G000000061 J* TANGENT))) (* + - / <= ABS BUNDLE G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE J* TANGENT))) #(LAMBDA-EXPRESSION (- G000000062 G000000063 IF-PROCEDURE NEGATIVE?) #(2 9 10 11 13) (ALPHA X 2) #(APPLICATION #(LAMBDA-EXPRESSION (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1) (ANF 4)) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1)) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 7) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 8) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 9) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 8) 10) #(VARIABLE-ACCESS-EXPRESSION G000000063 2) (G000000063 (ANF 8))) (G000000063 (ANF 8)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 9) (IF-PROCEDURE (ANF 7))) (G000000063 IF-PROCEDURE (ANF 7)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 8)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 7)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 4) (ANF 5)))) #(LAMBDA-EXPRESSION ((ALPHA X 2)) #(-1) (ALPHA (IGNORE) 3) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 0)) (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1) (ANF 4)))) #(LAMBDA-EXPRESSION (- G000000062 (ALPHA X 2)) #(0 1 -1) (ALPHA (IGNORE) 2) #(APPLICATION #(LAMBDA-EXPRESSION (-) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2)) (- G000000062 (ALPHA X 2)))) (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 4) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) -1) (NEGATIVE? (ALPHA X 2))) (- G000000062 G000000063 IF-PROCEDURE NEGATIVE? (ALPHA X 2)))) (* + - / <= BUNDLE G000000059 G000000060 G000000061 G000000062 G000000063 IF-PROCEDURE J* NEGATIVE? TANGENT)) #(LAMBDA-EXPRESSION (* + - / <= BUNDLE G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE J* TANGENT) #F ABS #(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE) #F DERIVATIVE-USING-J* #(APPLICATION #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (* + - / <= ABS DERIVATIVE-USING-J* G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE))) #(LAMBDA-EXPRESSION (BUNDLE G000000061 J* TANGENT) #(5 8 12 14) F #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) (BUNDLE F G000000061 J* TANGENT))) (* + - / <= ABS BUNDLE G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE J* TANGENT))) #(LAMBDA-EXPRESSION (- G000000062 G000000063 IF-PROCEDURE NEGATIVE?) #(2 9 10 11 13) (ALPHA X 2) #(APPLICATION #(LAMBDA-EXPRESSION (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1) (ANF 4)) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1)) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 7) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 8) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 9) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 8) 10) #(VARIABLE-ACCESS-EXPRESSION G000000063 2) (G000000063 (ANF 8))) (G000000063 (ANF 8)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 9) (IF-PROCEDURE (ANF 7))) (G000000063 IF-PROCEDURE (ANF 7)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 8)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 7)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 4) (ANF 5)))) #(LAMBDA-EXPRESSION ((ALPHA X 2)) #(-1) (ALPHA (IGNORE) 3) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 0)) (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1) (ANF 4)))) #(LAMBDA-EXPRESSION (- G000000062 (ALPHA X 2)) #(0 1 -1) (ALPHA (IGNORE) 2) #(APPLICATION #(LAMBDA-EXPRESSION (-) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2)) (- G000000062 (ALPHA X 2)))) (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 4) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) -1) (NEGATIVE? (ALPHA X 2))) (- G000000062 G000000063 IF-PROCEDURE NEGATIVE? (ALPHA X 2)))) #(LAMBDA-EXPRESSION (BUNDLE G000000061 J* TANGENT) #(5 8 12 14) F #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) (BUNDLE F G000000061 J* TANGENT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE) #F DERIVATIVE-USING-J* #(APPLICATION #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (* + - / <= ABS DERIVATIVE-USING-J* G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE))) #(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE) #F DERIVATIVE-USING-J* #(APPLICATION #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (* + - / <= ABS DERIVATIVE-USING-J* G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE))) #(LAMBDA-EXPRESSION (BUNDLE G000000061 J* TANGENT) #(5 8 12 14) F #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) (BUNDLE F G000000061 J* TANGENT))) (* + - / <= ABS BUNDLE G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE J* TANGENT)) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(APPLICATION #(LAMBDA-EXPRESSION (DERIVATIVE-USING-J* G000000059) #F NR-SQRT #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT))) #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE) #(0 1 2 3 4 15 7 8 10 11) X #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (* + - / <= ABS DERIVATIVE-USING-J* G000000059 G000000060 G000000061 G000000063 IF-PROCEDURE)) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(LAMBDA-EXPRESSION (G000000059) #F (ANF 42) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION DERIVATIVE-USING-J* 16) #(VARIABLE-ACCESS-EXPRESSION NR-SQRT 17) (DERIVATIVE-USING-J* NR-SQRT)) (DERIVATIVE-USING-J* G000000059 NR-SQRT)) #(VARIABLE-ACCESS-EXPRESSION F -1) #(VARIABLE-ACCESS-EXPRESSION J* 2) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000061 TANGENT) #F F-FORWARD #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION J* 2) #(VARIABLE-ACCESS-EXPRESSION F -1) (F J*)) (BUNDLE F G000000061 J* TANGENT)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) (BUNDLE F-FORWARD G000000061 TANGENT)) #(LAMBDA-EXPRESSION () #F (ANF 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD G000000061 TANGENT) #(0 4 1 3) (ALPHA X 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1)))) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 5) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) (G000000059 (ANF 42))) #(LAMBDA-EXPRESSION () #F (ANF 43) #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) (G000000059 (ANF 42))) #(VARIABLE-ACCESS-EXPRESSION (ANF 42) 18) #(VARIABLE-ACCESS-EXPRESSION G000000059 6) #(VARIABLE-ACCESS-EXPRESSION G000000061 2) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE F-FORWARD TANGENT) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 1) -1) #(VARIABLE-ACCESS-EXPRESSION G000000061 2)) (BUNDLE F-FORWARD G000000061 TANGENT (ALPHA X 1))) #(APPLICATION #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) (BUNDLE F-FORWARD TANGENT (ANF 12))) #(LAMBDA-EXPRESSION (F-FORWARD TANGENT) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) (BUNDLE (ANF 12))) #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 4) #(APPLICATION #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) (F-FORWARD TANGENT (ANF 13))) #(LAMBDA-EXPRESSION (TANGENT) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) (F-FORWARD (ANF 13))) #(VARIABLE-ACCESS-EXPRESSION F-FORWARD 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000061) 8) #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000061) 8) ((FORWARD G000000061) (FORWARD LOOP))) #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 40)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 40)) 12)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 40)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 40)) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000061) 8) ((FORWARD G000000061) (FORWARD LOOP))) ((FORWARD G000000061) (FORWARD LOOP))) #(LETREC-EXPRESSION ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD X)) #(0 1 2 3 4 5 6 8 9 -1) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000061) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD X)) #(0 1 2 3 4 5 6 7 8 9 -1) ((FORWARD LOOP)) ((FORWARD Y)) (#(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 18)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 19)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) ((FORWARD *) (FORWARD (ANF 18)))) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 18))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 40)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 40)) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000061) 8) ((FORWARD G000000061) (FORWARD LOOP))) ((FORWARD G000000061) (FORWARD LOOP)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) #(LAMBDA-EXPRESSION ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 18)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 19)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) ((FORWARD *) (FORWARD (ANF 18)))) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 18))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 18)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 19)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) ((FORWARD *) (FORWARD (ANF 18)))) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 18))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 19)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) ((FORWARD *) (FORWARD (ANF 18)))) ((FORWARD *) (FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 18)))) #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y)) #F (FORWARD (ANF 19)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) ((FORWARD *) (FORWARD (ANF 18)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD *) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 18)) 11) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) #(VARIABLE-ACCESS-EXPRESSION PRIMAL 5) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) (* + BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* + BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) (* + BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* + BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (* + BUNDLE CAR CDR PRIMAL TANGENT (FORWARD X))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) (* + BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* + BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) (* + BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) #(VARIABLE-ACCESS-EXPRESSION TANGENT 6) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) (* + BUNDLE CAR CDR (ANF 1) (ANF 2))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8)) #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 8) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CAR (CONSVAR X1 X2))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) (* + BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 10) (CDR (CONSVAR X1 X2))) #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* + BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 9) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(LAMBDA-EXPRESSION (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* + BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1))) #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 13) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12)) #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION X2 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) (* + BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* + BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) (* (ANF 10))) #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 16) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) (* + BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14)) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 14) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) (* + BUNDLE X1 (ANF 11) (ANF 12) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* + BUNDLE X1 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 18) (* (ANF 12))) #(APPLICATION #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) (* + BUNDLE X1 (ANF 11) (ANF 13) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* + BUNDLE (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 11) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15)) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) (* + BUNDLE (ANF 11) (ANF 13) (ANF 14))) #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) (* (ANF 14))) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) (+ BUNDLE (ANF 11) (ANF 13) (ANF 15))) #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21)) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) (+ BUNDLE (ANF 11) (ANF 16))) #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 22) (+ (ANF 16))) #(VARIABLE-ACCESS-EXPRESSION + 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) (BUNDLE (ANF 11) (ANF 17))) #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23)) #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 17) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 23) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) (BUNDLE (ANF 18))) #(LAMBDA-EXPRESSION () #F (ANF 19) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) (BUNDLE (ANF 18))) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 25) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD X) (FORWARD Y) (FORWARD (ANF 19)))) #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 20)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) 10)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 19)) 12) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 20)))) #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 21)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) ((FORWARD -) (FORWARD (ANF 20)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 20)) 13) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (- BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (- BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (- BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (- BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (- BUNDLE CAR CDR PRIMAL TANGENT (FORWARD X))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (- BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (- BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (- BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (- BUNDLE CAR CDR (ANF 1) (ANF 2))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (- BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (- BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(LAMBDA-EXPRESSION (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (- BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1))) #(LAMBDA-EXPRESSION (- BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (- BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) (- BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (- BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (- (ANF 10))) #(VARIABLE-ACCESS-EXPRESSION - 0) #(APPLICATION #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (- BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (- BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) (- BUNDLE (ANF 11) (ANF 12))) #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (- (ANF 12))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13))) #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14))) #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1)) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)))) #(LAMBDA-EXPRESSION ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 22)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22))))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21))) #F (FORWARD (ANF 23)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD +) 2) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 22)) 15) ((FORWARD +) (FORWARD (ANF 22)))) ((FORWARD +) (FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 22)))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (+ BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (+ BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (+ BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (+ BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (+ BUNDLE CAR CDR PRIMAL TANGENT (FORWARD X))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (+ BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (+ BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (+ BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (+ BUNDLE CAR CDR (ANF 1) (ANF 2))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CAR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 9) (CDR (CONSVAR X1 X2))) (+ BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 8) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 12) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (+ BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1))) #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION X2 11)) (+ BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 15) (+ (ANF 10))) (+ BUNDLE (ANF 10) (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 14)) (+ BUNDLE (ANF 11) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (+ BUNDLE (ANF 11)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 16) #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 18)) (BUNDLE (ANF 11) (ANF 13)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) (+ BUNDLE (ANF 11) (ANF 12))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 17) (+ (ANF 12))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 21)) (FORWARD (ANF 23)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 24)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 21)) 14) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 23)) 16) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) ((FORWARD -) (FORWARD /) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 24)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 25)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) ((FORWARD /) (FORWARD (ANF 24)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD /) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 24)) 17) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 8) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 9)) (* - / BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 7) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* - / BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 8) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 9)) (* - / BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 7) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* - / BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (* - / BUNDLE CAR CDR PRIMAL TANGENT (FORWARD X))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 8) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 9)) (* - / BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 7) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (* - / BUNDLE CAR CDR TANGENT (ANF 1) (FORWARD X))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 8) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 9)) (* - / BUNDLE CAR CDR (ANF 1) (ANF 2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 8) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 9)) (* - / BUNDLE CAR CDR (ANF 1) (ANF 2))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR) #F (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CAR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CAR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 11) (CDR (CONSVAR X1 X2))) (* - / BUNDLE CAR CDR X1 (CONSVAR X1 X2) (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) 10) (CDR (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (CONSVAR X1 X2) (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(LAMBDA-EXPRESSION (* - / BUNDLE CAR CDR X1 X2) #F (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 4) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CAR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CAR CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) #(LAMBDA-EXPRESSION (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 5) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) 14) (CDR (CONSVAR (PERTURBATION X1) (PERTURBATION X2)))) (* - / BUNDLE CDR X1 X2 (CONSVAR (PERTURBATION X1) (PERTURBATION X2)) (PERTURBATION X1))) #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1)) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 10) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) (* - / BUNDLE X1 X2 (ANF 10) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (PERTURBATION X1) (PERTURBATION X2)) #F (ANF 11) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 10) 17) (/ (ANF 10))) #(VARIABLE-ACCESS-EXPRESSION / 2) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X1) 15)) (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X1) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 12) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 12) 19) (* (ANF 12))) (* - / BUNDLE X1 X2 (ANF 11) (ANF 12) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* - / BUNDLE X1 X2 (ANF 11) (PERTURBATION X2)) #F (ANF 13) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 16)) (* - / BUNDLE X1 X2 (ANF 11) (ANF 13) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 21) (* (ANF 14))) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 14))) #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11) (ANF 13)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15)))) #(APPLICATION #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 13) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 22)) (* - / BUNDLE X2 (ANF 11) (ANF 13) (ANF 15))) #(LAMBDA-EXPRESSION (* - / BUNDLE X2 (ANF 11)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE X2 (ANF 11)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 23) (- (ANF 16))) (* - / BUNDLE X2 (ANF 11) (ANF 16))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(APPLICATION #(LAMBDA-EXPRESSION (* / BUNDLE (ANF 11) (ANF 17)) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 13) #(VARIABLE-ACCESS-EXPRESSION X2 13)) (* / BUNDLE X2 (ANF 11) (ANF 17))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11) (ANF 17)) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 25) (* (ANF 18))) (* / BUNDLE (ANF 11) (ANF 17) (ANF 18))) #(APPLICATION #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) (/ BUNDLE (ANF 11) (ANF 17) (ANF 19))) #(LAMBDA-EXPRESSION (/ BUNDLE (ANF 11)) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 24) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 26)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) (/ BUNDLE (ANF 11) (ANF 20))) #(LAMBDA-EXPRESSION (BUNDLE (ANF 11)) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) (/ (ANF 20))) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 27) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) (BUNDLE (ANF 11) (ANF 21))) #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 11) 18) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28)) #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 28) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) (BUNDLE (ANF 22))) #(LAMBDA-EXPRESSION () #F (ANF 23) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) (BUNDLE (ANF 22))) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 29) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 30) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 25)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD (ANF 26)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 25)) 18) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD (ANF 26)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y)) #F (FORWARD Y-PRIME) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) ((FORWARD -) (FORWARD (ANF 26)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 26)) 19) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 28)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 20) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) ((FORWARD -) (FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 28)))) #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 29)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) ((FORWARD -) (FORWARD (ANF 28)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 28)) 21) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) ((FORWARD <=) (FORWARD ABS) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 29)))) #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 30)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) ((FORWARD ABS) (FORWARD (ANF 29)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD ABS) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 29)) 22) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) -1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD NEGATIVE?) 4) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD NEGATIVE?) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) -1) ((FORWARD NEGATIVE?) (FORWARD (ALPHA X 2)))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2))) #F (FORWARD (ANF 1)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))) #F (FORWARD (ANF 4)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)) (FORWARD (ANF 4))))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))) #(0 1 -1) (FORWARD (ALPHA (IGNORE) 2)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))))) ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2))) #F (FORWARD (ANF 1)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))) #F (FORWARD (ANF 4)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)) (FORWARD (ANF 4))))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))) #(0 1 -1) (FORWARD (ALPHA (IGNORE) 2)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))))) ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD NEGATIVE?) 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) -1) ((FORWARD NEGATIVE?) (FORWARD (ALPHA X 2)))) ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD NEGATIVE?) (FORWARD (ALPHA X 2)))) #(LAMBDA-EXPRESSION (BUNDLE G000000026 NEGATIVE?) #F X #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000026) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) (BUNDLE G000000026 (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 2) #(VARIABLE-ACCESS-EXPRESSION X 4) (NEGATIVE? X)) (BUNDLE G000000026 NEGATIVE? X))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000026 NEGATIVE?) #F X #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000026) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) (BUNDLE G000000026 (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 2) #(VARIABLE-ACCESS-EXPRESSION X 4) (NEGATIVE? X)) (BUNDLE G000000026 NEGATIVE? X))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (BUNDLE G000000026 NEGATIVE? PRIMAL (FORWARD X))) #(VARIABLE-ACCESS-EXPRESSION X 4) #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 2) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 2) #(VARIABLE-ACCESS-EXPRESSION X 4) (NEGATIVE? X)) #(LAMBDA-EXPRESSION (BUNDLE G000000026) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) (BUNDLE G000000026 (ANF 2)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000026) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) (BUNDLE G000000026 (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 2) #(VARIABLE-ACCESS-EXPRESSION X 4) (NEGATIVE? X)) (BUNDLE G000000026 NEGATIVE? X)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) (BUNDLE G000000026 (ANF 2))) #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 3) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 5) #(VARIABLE-ACCESS-EXPRESSION G000000026 1)) #(VARIABLE-ACCESS-EXPRESSION G000000026 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) (BUNDLE (ANF 3))) #(LAMBDA-EXPRESSION () #F (ANF 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) (BUNDLE (ANF 3))) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 7) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))) #F (FORWARD (ANF 4)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)) (FORWARD (ANF 4))))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))) #(0 1 -1) (FORWARD (ALPHA (IGNORE) 2)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))))) ((FORWARD -) (FORWARD G000000062) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)))) #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1))) #F (FORWARD (ANF 4)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)) (FORWARD (ANF 4))))) #(LAMBDA-EXPRESSION ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))) #(0 1 -1) (FORWARD (ALPHA (IGNORE) 2)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4))) #F (FORWARD (ANF 5)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5))))) #(LAMBDA-EXPRESSION ((FORWARD (ALPHA X 2))) #(-1) (FORWARD (ALPHA (IGNORE) 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ALPHA X 2)) (FORWARD (ANF 1)) (FORWARD (ANF 4)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1))) #F (FORWARD (ANF 6)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 4)) 6) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 5)) 7)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 4)) (FORWARD (ANF 5)))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 1)) (FORWARD (ANF 6)))) #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 7)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 1)) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 6)) 8) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 8)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 7)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 7)) 9) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (BUNDLE CAR CDR IF-PROCEDURE (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (BUNDLE CAR CDR IF-PROCEDURE TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE TANGENT (FORWARD X)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (BUNDLE CAR CDR IF-PROCEDURE (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (BUNDLE CAR CDR IF-PROCEDURE TANGENT (ANF 1) (FORWARD X)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 4) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (BUNDLE CAR CDR IF-PROCEDURE PRIMAL TANGENT (FORWARD X))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (BUNDLE CAR CDR IF-PROCEDURE (ANF 1) (ANF 2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (TANGENT (FORWARD X))) (BUNDLE CAR CDR IF-PROCEDURE TANGENT (ANF 1) (FORWARD X))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (ANF 1)) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (BUNDLE CAR CDR IF-PROCEDURE (ANF 1) (ANF 2)))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE) #F (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 7)) (BUNDLE CAR CDR IF-PROCEDURE (ANF 1) (ANF 2))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X1 (CONSVAR X2 X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CAR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CAR (CONSVAR X1 (CONSVAR X2 X3)))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F (CONSVAR X2 X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 (CONSVAR X2 X3)) 9) (CDR (CONSVAR X1 (CONSVAR X2 X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CAR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #F X3 #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X2 X3) 11) (CDR (CONSVAR X2 X3))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 (CONSVAR X2 X3) (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) 8) (CDR (CONSVAR (CONSVAR X1 (CONSVAR X2 X3)) (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #F (PERTURBATION X1) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CAR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(LAMBDA-EXPRESSION (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3) #F (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) 14) (CDR (CONSVAR (PERTURBATION X1) (CONSVAR (PERTURBATION X2) (PERTURBATION X3))))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CAR CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(LAMBDA-EXPRESSION (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3))) #F (PERTURBATION X2) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 1) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CAR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) (BUNDLE CDR IF-PROCEDURE X1 X2 X3 (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) (PERTURBATION X2))) #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2)) #F (PERTURBATION X3) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR (PERTURBATION X2) (PERTURBATION X3)) 16) (CDR (CONSVAR (PERTURBATION X2) (PERTURBATION X3)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) (BUNDLE IF-PROCEDURE X1 X2 X3 (PERTURBATION X2) (PERTURBATION X3))) #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 14) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X2 12) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X2) 17)) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 19) (BUNDLE (ANF 14))) (BUNDLE IF-PROCEDURE X1 X3 (ANF 14) (PERTURBATION X3))) #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 X3 (PERTURBATION X3)) #F (ANF 15) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3)))) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18) #(VARIABLE-ACCESS-EXPRESSION X3 13) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE IF-PROCEDURE X1 (ANF 15)) #F (ANF 16) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X3 13) #(VARIABLE-ACCESS-EXPRESSION (PERTURBATION X3) 18)) (BUNDLE IF-PROCEDURE X1 X3 (ANF 15) (PERTURBATION X3))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1 (ANF 15)) #F (ANF 17) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 16) 21) (BUNDLE (ANF 16))) (BUNDLE IF-PROCEDURE X1 (ANF 15) (ANF 16))) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) (IF-PROCEDURE X1 (ANF 15) (ANF 17))) #(LAMBDA-EXPRESSION (IF-PROCEDURE X1) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 17) 22)) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(APPLICATION #(LAMBDA-EXPRESSION (IF-PROCEDURE) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 10) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 23)) (IF-PROCEDURE X1 (ANF 18))) #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 20) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 25)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 24) (IF-PROCEDURE (ANF 19))) (IF-PROCEDURE (ANF 19))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) ((FORWARD G000000063) (FORWARD (ANF 8)))) #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 9)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) ((FORWARD G000000063) (FORWARD (ANF 8)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 8)) 10) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 2) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2) #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2)) #(LAMBDA-EXPRESSION (-) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2)))) #(APPLICATION #(LAMBDA-EXPRESSION (-) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2)) (- G000000062 (ALPHA X 2))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD -)) #F (FORWARD (ANF 2)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000062) 1) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ALPHA X 2)) 2)) ((FORWARD -) (FORWARD G000000062) (FORWARD (ALPHA X 2)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 9)) 11) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2))) #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) ((FORWARD -) (FORWARD (ANF 2)))) #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 3)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD -) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) ((FORWARD -) (FORWARD (ANF 2)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 2)) 3) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 3)) 4) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) ((FORWARD <=) (FORWARD G000000060) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 30)))) #(LAMBDA-EXPRESSION ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 31)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 30)) 23) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000060) 7) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) ((FORWARD <=) (FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 31)))) #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME)) #F (FORWARD (ANF 32)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) ((FORWARD <=) (FORWARD (ANF 31)))) #(VARIABLE-ACCESS-EXPRESSION (FORWARD <=) 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 31)) 24) #(LAMBDA-EXPRESSION (<= BUNDLE CAR CDR G000000034) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE CDR G000000034 (CONSVAR X1 X2)) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034 X1) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000034) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 11) (BUNDLE (ANF 6))) (BUNDLE (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 10) #(VARIABLE-ACCESS-EXPRESSION G000000034 4)) (BUNDLE G000000034 (ANF 5)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 9) (<= (ANF 4))) (<= BUNDLE G000000034 (ANF 4)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 7) #(VARIABLE-ACCESS-EXPRESSION X2 8)) (<= BUNDLE G000000034 X1 X2))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CDR (CONSVAR X1 X2))) (<= BUNDLE CDR G000000034 X1 (CONSVAR X1 X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CAR (CONSVAR X1 X2))) (<= BUNDLE CAR CDR G000000034 (CONSVAR X1 X2)))) #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE CAR CDR G000000034) #F (CONSVAR X1 X2) #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE CDR G000000034 (CONSVAR X1 X2)) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034 X1) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000034) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 11) (BUNDLE (ANF 6))) (BUNDLE (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 10) #(VARIABLE-ACCESS-EXPRESSION G000000034 4)) (BUNDLE G000000034 (ANF 5)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 9) (<= (ANF 4))) (<= BUNDLE G000000034 (ANF 4)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 7) #(VARIABLE-ACCESS-EXPRESSION X2 8)) (<= BUNDLE G000000034 X1 X2))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CDR (CONSVAR X1 X2))) (<= BUNDLE CDR G000000034 X1 (CONSVAR X1 X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CAR (CONSVAR X1 X2))) (<= BUNDLE CAR CDR G000000034 (CONSVAR X1 X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION PRIMAL 5) #(VARIABLE-ACCESS-EXPRESSION (FORWARD X) -1) (PRIMAL (FORWARD X))) (<= BUNDLE CAR CDR G000000034 PRIMAL (FORWARD X)))) (() #T #F 32 31 9 8 7 6 5 30 29 28 26 25 24 23 22 21 20 17 15 11 10 -3 19 18 40 -1 14 13 12 43 3 16 42 2 0 1 4 -1.5 1e-05 X3 Y-PRIME PERTURBATION X2 X1 CONSVAR Y LOOP RECURSIVE-CLOSURE UP IGNORE REAL TAGGED-PAIR ANF G000000026 G000000034 PRIMAL CDR CAR FORWARD F-FORWARD NR-SQRT DERIVATIVE-USING-J* F X ALPHA NEGATIVE? G000000062 ABS TANGENT J* IF-PROCEDURE G000000063 G000000061 G000000060 G000000059 BUNDLE <= / - + * NONRECURSIVE-CLOSURE ABSTRACT-ENVIRONMENT-BINDING ABSTRACT-EXPRESSION-BINDING (EXPRESSION #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE CDR G000000034 (CONSVAR X1 X2)) #F X1 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034 X1) #F X2 #(APPLICATION #(LAMBDA-EXPRESSION (<= BUNDLE G000000034) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE G000000034) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (BUNDLE) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 7) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION BUNDLE 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 11) (BUNDLE (ANF 6))) (BUNDLE (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 10) #(VARIABLE-ACCESS-EXPRESSION G000000034 4)) (BUNDLE G000000034 (ANF 5)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 9) (<= (ANF 4))) (<= BUNDLE G000000034 (ANF 4)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION X1 7) #(VARIABLE-ACCESS-EXPRESSION X2 8)) (<= BUNDLE G000000034 X1 X2))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CDR 3) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CDR (CONSVAR X1 X2))) (<= BUNDLE CDR G000000034 X1 (CONSVAR X1 X2)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION CAR 2) #(VARIABLE-ACCESS-EXPRESSION (CONSVAR X1 X2) 6) (CAR (CONSVAR X1 X2))) (<= BUNDLE CAR CDR G000000034 (CONSVAR X1 X2)))) (EXPRESSION 446) (EXPRESSION 445) (EXPRESSION 444) (EXPRESSION 443) (EXPRESSION #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32))) #F (FORWARD (ANF 33)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33))) #F (FORWARD (ANF 35)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32))) #F (FORWARD (ANF 36)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063) (FORWARD IF-PROCEDURE)) #F (FORWARD (ANF 37)) #(APPLICATION #(LAMBDA-EXPRESSION ((FORWARD G000000063)) #F (FORWARD (ANF 38)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 39)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 39)) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 38)) 30) #(VARIABLE-ACCESS-EXPRESSION (FORWARD G000000063) 8) ((FORWARD G000000063) (FORWARD (ANF 38)))) ((FORWARD G000000063) (FORWARD (ANF 38))))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD IF-PROCEDURE) 9) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 37)) 29) ((FORWARD IF-PROCEDURE) (FORWARD (ANF 37)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 37))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 32)) 25) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 36)) 28)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 36))))) #(CONS-EXPRESSION (FORWARD) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 33)) 26) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 35)) 27)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD (ANF 32)) (FORWARD (ANF 33)) (FORWARD (ANF 35))))) #(LAMBDA-EXPRESSION ((FORWARD LOOP) (FORWARD Y-PRIME)) #(0 20) (FORWARD (ALPHA (IGNORE) 1)) #(APPLICATION #(LAMBDA-EXPRESSION () #F (FORWARD (ANF 34)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 34)) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (FORWARD LOOP) 0) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y-PRIME) 1) ((FORWARD LOOP) (FORWARD Y-PRIME))) ((FORWARD LOOP) (FORWARD Y-PRIME)))) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y-PRIME) (FORWARD (ANF 32)) (FORWARD (ANF 33))))) #(LAMBDA-EXPRESSION ((FORWARD Y)) #(-1) (FORWARD (IGNORE)) #(VARIABLE-ACCESS-EXPRESSION (FORWARD Y) 0)) ((FORWARD G000000063) (FORWARD IF-PROCEDURE) (FORWARD LOOP) (FORWARD Y) (FORWARD Y-PRIME) (FORWARD (ANF 32))))) (EXPRESSION 442) (EXPRESSION 440) (EXPRESSION 439) (EXPRESSION 438) (EXPRESSION 441) (EXPRESSION 437) (EXPRESSION 434) (EXPRESSION 433) (EXPRESSION 435) (EXPRESSION 432) (EXPRESSION 430) (EXPRESSION 326) (EXPRESSION 429) (EXPRESSION 431) (EXPRESSION 425) (EXPRESSION 424) (EXPRESSION 423) (EXPRESSION 428) (EXPRESSION 421) (EXPRESSION 420) (EXPRESSION 419) (EXPRESSION 418) (EXPRESSION 417) (EXPRESSION 416) (EXPRESSION 415) (EXPRESSION 427) (EXPRESSION 414) (EXPRESSION 276) (EXPRESSION 411) (EXPRESSION 410) (EXPRESSION 409) (EXPRESSION 412) (EXPRESSION 407) (EXPRESSION 406) (EXPRESSION 405) (EXPRESSION 408) (EXPRESSION 404) (EXPRESSION 403) (EXPRESSION 401) (EXPRESSION 400) (EXPRESSION 402) (EXPRESSION 398) (EXPRESSION 397) (EXPRESSION 396) (EXPRESSION 395) (EXPRESSION 399) (EXPRESSION 394) (EXPRESSION 392) (EXPRESSION 393) (EXPRESSION 391) (EXPRESSION 389) (EXPRESSION 390) (EXPRESSION 388) (EXPRESSION 386) (EXPRESSION 385) (EXPRESSION 387) (EXPRESSION 384) (EXPRESSION 382) (EXPRESSION 383) (EXPRESSION 381) (EXPRESSION 379) (EXPRESSION 378) (EXPRESSION 380) (EXPRESSION 377) (EXPRESSION 375) (EXPRESSION 376) (EXPRESSION 374) (EXPRESSION 373) (EXPRESSION 371) (EXPRESSION 370) (EXPRESSION 372) (EXPRESSION 368) (EXPRESSION 367) (EXPRESSION 366) (EXPRESSION 369) (EXPRESSION 364) (EXPRESSION 363) (EXPRESSION 362) (EXPRESSION 361) (EXPRESSION 365) (EXPRESSION 360) (EXPRESSION 359) (EXPRESSION 357) (EXPRESSION 356) (EXPRESSION 355) (EXPRESSION 358) (EXPRESSION 353) (EXPRESSION 354) (EXPRESSION 352) (EXPRESSION 351) (EXPRESSION 349) (EXPRESSION 348) (EXPRESSION 347) (EXPRESSION 346) (EXPRESSION 413) (EXPRESSION 345) (EXPRESSION 343) (EXPRESSION 342) (EXPRESSION 341) (EXPRESSION 344) (EXPRESSION 340) (EXPRESSION 339) (EXPRESSION 337) (EXPRESSION 336) (EXPRESSION 335) (EXPRESSION 334) (EXPRESSION 338) (EXPRESSION 332) (EXPRESSION 331) (EXPRESSION 330) (EXPRESSION 333) (EXPRESSION 329) (EXPRESSION 326) (EXPRESSION 325) (EXPRESSION 327) (EXPRESSION 324) (EXPRESSION 322) (EXPRESSION 321) (EXPRESSION 323) (EXPRESSION 320) (EXPRESSION 319) (EXPRESSION 317) (EXPRESSION 316) (EXPRESSION 315) (EXPRESSION 314) (EXPRESSION 318) (EXPRESSION 312) (EXPRESSION 328) (EXPRESSION 310) (EXPRESSION 309) (EXPRESSION 308) (EXPRESSION 307) (EXPRESSION 306) (EXPRESSION 305) (EXPRESSION 304) (EXPRESSION 436) (EXPRESSION 303) (EXPRESSION 301) (EXPRESSION 300) (EXPRESSION 302) (EXPRESSION 299) (EXPRESSION 297) (EXPRESSION 296) (EXPRESSION 298) (EXPRESSION 295) (EXPRESSION 293) (EXPRESSION 292) (EXPRESSION 294) (EXPRESSION 291) (EXPRESSION 289) (EXPRESSION 288) (EXPRESSION 290) (EXPRESSION 287) (EXPRESSION 284) (EXPRESSION 283) (EXPRESSION 285) (EXPRESSION 282) (EXPRESSION 280) (EXPRESSION 279) (EXPRESSION 281) (EXPRESSION 278) (EXPRESSION 276) (EXPRESSION 275) (EXPRESSION 277) (EXPRESSION 274) (EXPRESSION 272) (EXPRESSION 273) (EXPRESSION 271) (EXPRESSION 270) (EXPRESSION 268) (EXPRESSION 267) (EXPRESSION 269) (EXPRESSION 265) (EXPRESSION 264) (EXPRESSION 266) (EXPRESSION 262) (EXPRESSION 261) (EXPRESSION 263) (EXPRESSION 260) (EXPRESSION 259) (EXPRESSION 258) (EXPRESSION 257) (EXPRESSION 256) (EXPRESSION 255) (EXPRESSION 254) (EXPRESSION 253) (EXPRESSION 252) (EXPRESSION 250) (EXPRESSION 249) (EXPRESSION 251) (EXPRESSION 248) (EXPRESSION 247) (EXPRESSION 246) (EXPRESSION 245) (EXPRESSION 244) (EXPRESSION 243) (EXPRESSION 242) (EXPRESSION 241) (EXPRESSION 240) (EXPRESSION 239) (EXPRESSION 238) (EXPRESSION 237) (EXPRESSION 236) (EXPRESSION 235) (EXPRESSION 234) (EXPRESSION 233) (EXPRESSION 232) (EXPRESSION 231) (EXPRESSION 230) (EXPRESSION 229) (EXPRESSION 227) (EXPRESSION 226) (EXPRESSION 225) (EXPRESSION 224) (EXPRESSION 286) (EXPRESSION 223) (EXPRESSION 221) (EXPRESSION 220) (EXPRESSION 219) (EXPRESSION 222) (EXPRESSION 218) (EXPRESSION 216) (EXPRESSION 215) (EXPRESSION 214) (EXPRESSION 213) (EXPRESSION 211) (EXPRESSION 210) (EXPRESSION 212) (EXPRESSION 208) (EXPRESSION 209) (EXPRESSION 206) (EXPRESSION 207) (EXPRESSION 204) (EXPRESSION 205) (EXPRESSION 202) (EXPRESSION 203) (EXPRESSION 200) (EXPRESSION 201) (EXPRESSION 198) (EXPRESSION 199) (EXPRESSION 196) (EXPRESSION 197) (EXPRESSION 194) (EXPRESSION 195) (EXPRESSION 192) (EXPRESSION 193) (EXPRESSION 190) (EXPRESSION 217) (EXPRESSION 188) (EXPRESSION 187) (EXPRESSION 186) (EXPRESSION 185) (EXPRESSION 189) (EXPRESSION 184) (EXPRESSION 182) (EXPRESSION 123) (EXPRESSION 181) (EXPRESSION 179) (EXPRESSION 180) (EXPRESSION 178) (EXPRESSION 176) (EXPRESSION 177) (EXPRESSION 177) (EXPRESSION 175) (EXPRESSION 173) (EXPRESSION 174) (EXPRESSION 172) (EXPRESSION 170) (EXPRESSION 169) (EXPRESSION 171) (EXPRESSION 168) (EXPRESSION 167) (EXPRESSION 166) (EXPRESSION 165) (EXPRESSION 164) (EXPRESSION 163) (EXPRESSION 162) (EXPRESSION 161) (EXPRESSION 160) (EXPRESSION 159) (EXPRESSION 158) (EXPRESSION 157) (EXPRESSION 156) (EXPRESSION 155) (EXPRESSION 154) (EXPRESSION 153) (EXPRESSION 152) (EXPRESSION 426) (EXPRESSION 151) (EXPRESSION 150) (EXPRESSION 149) (EXPRESSION 147) (EXPRESSION 146) (EXPRESSION 145) (EXPRESSION 144) (EXPRESSION 183) (EXPRESSION 143) (EXPRESSION 141) (EXPRESSION 140) (EXPRESSION 142) (EXPRESSION 139) (EXPRESSION 136) (EXPRESSION 135) (EXPRESSION 137) (EXPRESSION 134) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 132) (EXPRESSION 131) (EXPRESSION 130) (EXPRESSION 133) (EXPRESSION 129) (EXPRESSION 127) (EXPRESSION 126) (EXPRESSION 128) (EXPRESSION 125) (EXPRESSION 123) (EXPRESSION 122) (EXPRESSION 124) (EXPRESSION 121) (EXPRESSION 119) (EXPRESSION 118) (EXPRESSION 120) (EXPRESSION 117) (EXPRESSION 115) (EXPRESSION 114) (EXPRESSION 116) (EXPRESSION 113) (EXPRESSION 111) (EXPRESSION 112) (EXPRESSION 110) (EXPRESSION 108) (EXPRESSION 107) (EXPRESSION 109) (EXPRESSION 106) (EXPRESSION 104) (EXPRESSION 103) (EXPRESSION 102) (EXPRESSION 105) (EXPRESSION 101) (EXPRESSION 99) (EXPRESSION 98) (EXPRESSION 97) (EXPRESSION 100) (EXPRESSION 96) (EXPRESSION 94) (EXPRESSION 95) (EXPRESSION 93) (EXPRESSION 91) (EXPRESSION 90) (EXPRESSION 92) (EXPRESSION 89) (EXPRESSION 87) (EXPRESSION 88) (EXPRESSION 86) (EXPRESSION 84) (EXPRESSION 83) (EXPRESSION 85) (EXPRESSION 82) (EXPRESSION 80) (EXPRESSION 79) (EXPRESSION 81) (EXPRESSION 78) (EXPRESSION 76) (EXPRESSION 75) (EXPRESSION 74) (EXPRESSION 77) (EXPRESSION 73) (EXPRESSION 71) (EXPRESSION 70) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 69) (EXPRESSION 72) (EXPRESSION 68) (EXPRESSION 66) (EXPRESSION 65) (EXPRESSION 67) (EXPRESSION 64) (EXPRESSION 63) (EXPRESSION 61) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 422) (EXPRESSION 60) (EXPRESSION 59) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 58) (EXPRESSION 57) (EXPRESSION 56) (EXPRESSION 55) (EXPRESSION 138) (EXPRESSION 54) (EXPRESSION 53) (EXPRESSION 51) (EXPRESSION 50) (EXPRESSION 49) (EXPRESSION 47) (EXPRESSION #(VARIABLE-ACCESS-EXPRESSION (FORWARD (ANF 40)) 12)) (EXPRESSION 46) (EXPRESSION 45) (EXPRESSION 52) (EXPRESSION 44) (EXPRESSION 43) (EXPRESSION 42) (EXPRESSION 41) (EXPRESSION 40) (EXPRESSION #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 15) #(VARIABLE-ACCESS-EXPRESSION (ANF 15) 7)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION TANGENT 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 14) 6) (TANGENT (ANF 14))) (TANGENT (ANF 14)))) (EXPRESSION 39) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 37) (EXPRESSION 36) (EXPRESSION 35) (EXPRESSION 38) (EXPRESSION 34) (EXPRESSION 33) (EXPRESSION 31) (EXPRESSION 30) (EXPRESSION 29) (EXPRESSION 28) (EXPRESSION 27) (EXPRESSION 26) (EXPRESSION 25) (EXPRESSION #(VARIABLE-ACCESS-EXPRESSION (ANF 43) 19)) (EXPRESSION 24) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 426) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 426) (EXPRESSION 307) (EXPRESSION 426) (EXPRESSION 422) (EXPRESSION 418) (EXPRESSION 422) (EXPRESSION 21) (EXPRESSION 22) (EXPRESSION 20) (EXPRESSION 19) (EXPRESSION 17) (EXPRESSION 16) (EXPRESSION 15) (EXPRESSION 14) (EXPRESSION 23) (EXPRESSION 12) (EXPRESSION 32) (EXPRESSION 48) (EXPRESSION 311) (EXPRESSION 313) (EXPRESSION 350) (EXPRESSION 447) (EXPRESSION 228) (EXPRESSION 148) (EXPRESSION 191) (EXPRESSION 62) (EXPRESSION 11) (EXPRESSION 10) (EXPRESSION 9) (EXPRESSION 13) (EXPRESSION 7) (EXPRESSION #(LETREC-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 8 9 -1) (* + - / <= ABS G000000060 G000000061 G000000063 IF-PROCEDURE X) #(0 1 2 3 4 5 6 7 8 9 -1) (LOOP) (Y) (#(APPLICATION #(LAMBDA-EXPRESSION (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 18) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y) #F (ANF 19) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 20) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 21) #(APPLICATION #(LAMBDA-EXPRESSION (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 22) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)) #F (ANF 23) #(APPLICATION #(LAMBDA-EXPRESSION (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 24) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 25) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F (ANF 26) #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y) #F Y-PRIME #(APPLICATION #(LAMBDA-EXPRESSION (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 28) #(APPLICATION #(LAMBDA-EXPRESSION (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 29) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 30) #(APPLICATION #(LAMBDA-EXPRESSION (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 31) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y Y-PRIME) #F (ANF 32) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32)) #F (ANF 33) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32) (ANF 33)) #F (ANF 35) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 32)) #F (ANF 36) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 37) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 38) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 39) #(VARIABLE-ACCESS-EXPRESSION (ANF 39) 31)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 38) 30) #(VARIABLE-ACCESS-EXPRESSION G000000063 8) (G000000063 (ANF 38))) (G000000063 (ANF 38)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 37) 29) (IF-PROCEDURE (ANF 37))) (G000000063 IF-PROCEDURE (ANF 37)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 32) 25) #(VARIABLE-ACCESS-EXPRESSION (ANF 36) 28)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 36)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 33) 26) #(VARIABLE-ACCESS-EXPRESSION (ANF 35) 27)) (G000000063 IF-PROCEDURE (ANF 32) (ANF 33) (ANF 35)))) #(LAMBDA-EXPRESSION (LOOP Y-PRIME) #(0 20) (ALPHA (IGNORE) 1) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 34) #(VARIABLE-ACCESS-EXPRESSION (ANF 34) 2)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 1) (LOOP Y-PRIME)) (LOOP Y-PRIME))) (G000000063 IF-PROCEDURE LOOP Y-PRIME (ANF 32) (ANF 33)))) #(LAMBDA-EXPRESSION (Y) #(-1) (IGNORE) #(VARIABLE-ACCESS-EXPRESSION Y 0)) (G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 32)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION <= 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 31) 24) (<= (ANF 31))) (<= G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 31)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 30) 23) #(VARIABLE-ACCESS-EXPRESSION G000000060 7)) (<= G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 30)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION ABS 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 29) 22) (ABS (ANF 29))) (<= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 29)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 28) 21) (- (ANF 28))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME (ANF 28)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y-PRIME 20)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y Y-PRIME))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 26) 19) (- (ANF 26))) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 26)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION (ANF 25) 18)) (- <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 25)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION / 4) #(VARIABLE-ACCESS-EXPRESSION (ANF 24) 17) (/ (ANF 24))) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 24)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 21) 14) #(VARIABLE-ACCESS-EXPRESSION (ANF 23) 16)) (- / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 23)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION + 2) #(VARIABLE-ACCESS-EXPRESSION (ANF 22) 15) (+ (ANF 22))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21) (ANF 22)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 21)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 20) 13) (- (ANF 20))) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP Y (ANF 20)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 19) 12) #(VARIABLE-ACCESS-EXPRESSION X 10)) (+ - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 19)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION * 1) #(VARIABLE-ACCESS-EXPRESSION (ANF 18) 11) (* (ANF 18))) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y (ANF 18)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION Y -1) #(VARIABLE-ACCESS-EXPRESSION Y -1)) (* + - / <= ABS G000000060 G000000063 IF-PROCEDURE LOOP X Y))) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 40) #(VARIABLE-ACCESS-EXPRESSION (ANF 40) 12)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION LOOP 0) #(VARIABLE-ACCESS-EXPRESSION G000000061 8) (G000000061 LOOP)) (G000000061 LOOP)))) (EXPRESSION 6) (EXPRESSION 8) (EXPRESSION 4) (EXPRESSION 18) (EXPRESSION 3) (EXPRESSION #(APPLICATION #(LAMBDA-EXPRESSION (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2)) #F (ANF 1) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)) #F (ANF 4) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1) (ANF 4)) #F (ANF 5) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE (ANF 1)) #F (ANF 6) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063 IF-PROCEDURE) #F (ANF 7) #(APPLICATION #(LAMBDA-EXPRESSION (G000000063) #F (ANF 8) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 9) #(VARIABLE-ACCESS-EXPRESSION (ANF 9) 11)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION (ANF 8) 10) #(VARIABLE-ACCESS-EXPRESSION G000000063 2) (G000000063 (ANF 8))) (G000000063 (ANF 8)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION IF-PROCEDURE 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 7) 9) (IF-PROCEDURE (ANF 7))) (G000000063 IF-PROCEDURE (ANF 7)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 1) 5) #(VARIABLE-ACCESS-EXPRESSION (ANF 6) 8)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 6)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION (ANF 4) 6) #(VARIABLE-ACCESS-EXPRESSION (ANF 5) 7)) (G000000063 IF-PROCEDURE (ANF 1) (ANF 4) (ANF 5)))) #(LAMBDA-EXPRESSION ((ALPHA X 2)) #(-1) (ALPHA (IGNORE) 3) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 0)) (G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1) (ANF 4)))) #(LAMBDA-EXPRESSION (- G000000062 (ALPHA X 2)) #(0 1 -1) (ALPHA (IGNORE) 2) #(APPLICATION #(LAMBDA-EXPRESSION (-) #F (ANF 2) #(APPLICATION #(LAMBDA-EXPRESSION () #F (ANF 3) #(VARIABLE-ACCESS-EXPRESSION (ANF 3) 4)) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION - 0) #(VARIABLE-ACCESS-EXPRESSION (ANF 2) 3) (- (ANF 2))) (- (ANF 2)))) #(CONS-EXPRESSION () #(VARIABLE-ACCESS-EXPRESSION G000000062 1) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) 2)) (- G000000062 (ALPHA X 2)))) (- G000000062 G000000063 IF-PROCEDURE (ALPHA X 2) (ANF 1)))) #(APPLICATION #(VARIABLE-ACCESS-EXPRESSION NEGATIVE? 4) #(VARIABLE-ACCESS-EXPRESSION (ALPHA X 2) -1) (NEGATIVE? (ALPHA X 2))) (- G000000062 G000000063 IF-PROCEDURE NEGATIVE? (ALPHA X 2)))) (EXPRESSION 2) (EXPRESSION 5) (EXPRESSION 1) (EXPRESSION 0) (PRIMITIVE-PROCEDURE PRIMAL) (PRIMITIVE-PROCEDURE CDR) (PRIMITIVE-PROCEDURE CAR) (PRIMITIVE-PROCEDURE TANGENT) (PRIMITIVE-PROCEDURE NEGATIVE?) (PRIMITIVE-PROCEDURE J*) (PRIMITIVE-PROCEDURE IF-PROCEDURE) (PRIMITIVE-PROCEDURE BUNDLE) (PRIMITIVE-PROCEDURE <=) (PRIMITIVE-PROCEDURE /) (PRIMITIVE-PROCEDURE -) (PRIMITIVE-PROCEDURE +) (PRIMITIVE-PROCEDURE *) (PAIR 12009 0) (PAIR 12010 606) (PAIR 12011 607) (PAIR 12012 608) (PAIR 12013 609) (PAIR 12014 610) (PAIR 12015 611) (PAIR 12016 612) (PAIR 12017 613) (PAIR 12018 614) (PAIR 12019 615) (PAIR 12020 616) (PAIR 12021 617) (PAIR 12022 618) (PAIR 12024 0) (PAIR 12025 619) (PAIR 12026 621) (PAIR 12027 622) (PAIR 12028 623) (PAIR 12029 624) (PAIR 12030 625) (PAIR 12031 626) (PAIR 12032 627) (PAIR 12033 628) (PAIR 12034 629) (PAIR 12035 630) (PAIR 12036 631) (PAIR 12037 632) (PAIR 12038 633) (PAIR 12039 634) (PAIR 12040 635) (PAIR 12041 636) (PAIR 12042 637) (PAIR 12043 638) (PAIR 12044 639) (PAIR 12045 640) (PAIR 12046 641) (PAIR 12047 642) (PAIR 53 0) (PAIR 53 0) (PAIR 12048 0) (PAIR 12050 0) (PAIR 14434 647) (PAIR 37 0) (PAIR 603 0) (PAIR 12053 648) (PAIR 17251 651) (PAIR 13219 652) (PAIR 53 0) (PAIR 53 0) (PAIR 12054 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12055 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12057 0) (PAIR 12059 0) (PAIR 12060 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12061 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12062 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12064 0) (PAIR 12066 668) (PAIR 53 0) (PAIR 53 0) (PAIR 12067 682) (PAIR 12069 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12070 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12072 0) (PAIR 12074 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12075 0) (PAIR 12077 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12078 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12079 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12081 0) (PAIR 12083 0) (PAIR 12084 697) (PAIR 53 0) (PAIR 53 0) (PAIR 12085 716) (PAIR 53 0) (PAIR 37 0) (PAIR 12086 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12088 0) (PAIR 12090 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12091 0) (PAIR 12093 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12094 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12095 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12097 0) (PAIR 12099 0) (PAIR 12100 730) (PAIR 53 0) (PAIR 53 0) (PAIR 12101 749) (PAIR 12102 653) (PAIR 13012 753) (PAIR 2 754) (PAIR 1 755) (PAIR 53 756) (PAIR 12104 0) (PAIR 12105 643) (PAIR 12106 759) (PAIR 12107 760) (PAIR 12108 761) (PAIR 12109 762) (PAIR 12110 763) (PAIR 12111 764) (PAIR 12112 765) (PAIR 12113 766) (PAIR 53 3123) (PAIR 12115 0) (PAIR 53 3127) (PAIR 12117 0) (PAIR 37 0) (PAIR 603 0) (PAIR 12119 0) (PAIR 17175 774) (PAIR 53 775) (PAIR 12120 0) (PAIR 17373 777) (PAIR 16362 778) (PAIR 15916 779) (PAIR 53 780) (PAIR 16342 781) (PAIR 53 3142) (PAIR 12122 0) (PAIR 37 0) (PAIR 603 0) (PAIR 12124 0) (PAIR 17175 787) (PAIR 53 788) (PAIR 12125 0) (PAIR 17247 790) (PAIR 17469 791) (PAIR 17373 792) (PAIR 15916 793) (PAIR 53 794) (PAIR 17251 795) (PAIR 17446 796) (PAIR 12126 0) (PAIR 17026 0) (PAIR 17149 799) (PAIR 2 800) (PAIR 1 801) (PAIR 53 802) (PAIR 12127 769) (PAIR 53 804) (PAIR 37 0) (PAIR 603 0) (PAIR 12129 0) (PAIR 17175 808) (PAIR 53 809) (PAIR 12130 0) (PAIR 17247 811) (PAIR 17373 812) (PAIR 16342 813) (PAIR 15916 814) (PAIR 53 815) (PAIR 17251 816) (PAIR 17446 817) (PAIR 12132 0) (PAIR 12133 767) (PAIR 12134 820) (PAIR 12135 821) (PAIR 12136 822) (PAIR 12137 823) (PAIR 12138 824) (PAIR 12139 825) (PAIR 12140 826) (PAIR 12141 827) (PAIR 12142 828) (PAIR 12143 829) (PAIR 12144 830) (PAIR 15914 3458) (PAIR 15916 3460) (PAIR 12145 0) (PAIR 17247 834) (PAIR 17373 835) (PAIR 16342 836) (PAIR 15916 837) (PAIR 53 838) (PAIR 17251 839) (PAIR 17446 840) (PAIR 12147 0) (PAIR 12148 831) (PAIR 12149 843) (PAIR 12150 844) (PAIR 12151 845) (PAIR 12152 846) (PAIR 12153 847) (PAIR 12154 848) (PAIR 12155 849) (PAIR 12156 850) (PAIR 12157 851) (PAIR 12158 852) (PAIR 12160 0) (PAIR 12161 853) (PAIR 12162 855) (PAIR 12163 856) (PAIR 12164 857) (PAIR 12165 858) (PAIR 12166 859) (PAIR 12167 860) (PAIR 12168 861) (PAIR 12169 862) (PAIR 12170 863) (PAIR 12171 864) (PAIR 12172 865) (PAIR 12173 866) (PAIR 12174 867) (PAIR 12175 868) (PAIR 12176 869) (PAIR 12177 870) (PAIR 12178 871) (PAIR 12179 872) (PAIR 12180 873) (PAIR 12181 874) (PAIR 12182 875) (PAIR 12183 876) (PAIR 12184 877) (PAIR 12185 878) (PAIR 12186 879) (PAIR 12187 880) (PAIR 12188 881) (PAIR 12189 882) (PAIR 12190 883) (PAIR 12191 884) (PAIR 12192 885) (PAIR 17252 4507) (PAIR 53 887) (PAIR 12194 0) (PAIR 12195 886) (PAIR 12196 890) (PAIR 12197 891) (PAIR 12198 892) (PAIR 12199 893) (PAIR 12200 894) (PAIR 12201 895) (PAIR 12202 896) (PAIR 12203 897) (PAIR 12204 898) (PAIR 12205 899) (PAIR 12207 0) (PAIR 12208 900) (PAIR 12209 902) (PAIR 12210 903) (PAIR 12211 904) (PAIR 12212 905) (PAIR 12213 906) (PAIR 12214 907) (PAIR 12215 908) (PAIR 12216 909) (PAIR 12217 910) (PAIR 12218 911) (PAIR 12219 912) (PAIR 12220 913) (PAIR 12221 914) (PAIR 12222 915) (PAIR 12223 916) (PAIR 12224 917) (PAIR 12225 918) (PAIR 12226 919) (PAIR 12227 920) (PAIR 12228 921) (PAIR 12229 922) (PAIR 12231 0) (PAIR 12232 923) (PAIR 12233 925) (PAIR 12235 0) (PAIR 12236 926) (PAIR 12237 928) (PAIR 12238 929) (PAIR 12239 930) (PAIR 12240 931) (PAIR 12241 932) (PAIR 12242 933) (PAIR 12243 934) (PAIR 12244 935) (PAIR 12245 936) (PAIR 12246 937) (PAIR 12248 0) (PAIR 12249 938) (PAIR 12250 940) (PAIR 12252 0) (PAIR 12253 941) (PAIR 12254 943) (PAIR 12255 944) (PAIR 12256 945) (PAIR 12257 946) (PAIR 12258 947) (PAIR 12259 948) (PAIR 12260 949) (PAIR 12261 950) (PAIR 12262 951) (PAIR 12263 952) (PAIR 12264 953) (PAIR 12265 954) (PAIR 12266 955) (PAIR 12267 956) (PAIR 12268 957) (PAIR 12269 958) (PAIR 12270 959) (PAIR 12271 960) (PAIR 12272 961) (PAIR 12294 0) (PAIR 14434 963) (PAIR 37 0) (PAIR 603 0) (PAIR 12274 964) (PAIR 53 2148) (PAIR 53 2151) (PAIR 12275 0) (PAIR 17473 970) (PAIR 17474 0) (PAIR 17476 0) (PAIR 12277 967) (PAIR 13219 974) (PAIR 12316 0) (PAIR 0 0) (PAIR 53 977) (PAIR 2 0) (PAIR 1 979) (PAIR 53 980) (PAIR 12278 0) (PAIR 12320 982) (PAIR 12321 0) (PAIR 12323 0) (PAIR 12280 983) (PAIR 12332 0) (PAIR 12338 987) (PAIR 12339 988) (PAIR 12282 0) (PAIR 12283 986) (PAIR 12343 0) (PAIR 12345 0) (PAIR 12285 0) (PAIR 0 0) (PAIR 53 995) (PAIR 2 0) (PAIR 1 997) (PAIR 53 998) (PAIR 12286 994) (PAIR 12355 0) (PAIR 12361 1001) (PAIR 12362 1002) (PAIR 12288 0) (PAIR 12365 0) (PAIR 12370 1005) (PAIR 12376 1006) (PAIR 12289 1000) (PAIR 12290 975) (PAIR 0 0) (PAIR 53 1010) (PAIR 2 0) (PAIR 1 1012) (PAIR 53 1013) (PAIR 12291 1009) (PAIR 2 1015) (PAIR 1 1016) (PAIR 53 1017) (PAIR 53 0) (PAIR 53 0) (PAIR 12292 0) (PAIR 12294 0) (PAIR 14434 1022) (PAIR 37 0) (PAIR 603 0) (PAIR 12297 1023) (PAIR 0 0) (PAIR 53 1027) (PAIR 2 0) (PAIR 1 1029) (PAIR 53 1030) (PAIR 12298 0) (PAIR 17473 1032) (PAIR 17474 0) (PAIR 17476 0) (PAIR 12300 1026) (PAIR 13219 1036) (PAIR 53 0) (PAIR 53 0) (PAIR 12301 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12302 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12304 0) (PAIR 12306 0) (PAIR 12307 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12308 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12309 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12311 0) (PAIR 12313 1052) (PAIR 53 0) (PAIR 53 0) (PAIR 12314 1066) (PAIR 12316 0) (PAIR 0 0) (PAIR 53 1071) (PAIR 2 0) (PAIR 1 1073) (PAIR 53 1074) (PAIR 12317 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12318 0) (PAIR 12320 1076) (PAIR 53 0) (PAIR 37 0) (PAIR 12321 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12323 0) (PAIR 12325 1080) (PAIR 53 0) (PAIR 53 0) (PAIR 12326 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12327 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12329 0) (PAIR 12331 0) (PAIR 12332 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12333 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12334 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12336 0) (PAIR 12338 1106) (PAIR 53 0) (PAIR 53 0) (PAIR 12339 1120) (PAIR 12341 0) (PAIR 12342 1091) (PAIR 53 0) (PAIR 37 0) (PAIR 12343 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12345 0) (PAIR 12347 0) (PAIR 0 0) (PAIR 53 1137) (PAIR 2 0) (PAIR 1 1139) (PAIR 53 1140) (PAIR 12348 1136) (PAIR 53 0) (PAIR 53 0) (PAIR 12349 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12350 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12352 0) (PAIR 12354 0) (PAIR 12355 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12356 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12357 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12359 0) (PAIR 12361 1157) (PAIR 53 0) (PAIR 53 0) (PAIR 12362 1171) (PAIR 12364 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 1177) (PAIR 12365 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12366 0) (PAIR 12368 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 1185) (PAIR 12369 0) (PAIR 12370 1179) (PAIR 53 0) (PAIR 53 0) (PAIR 12371 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12372 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12374 0) (PAIR 12376 1188) (PAIR 12377 1142) (PAIR 12378 1037) (PAIR 0 0) (PAIR 53 1205) (PAIR 2 0) (PAIR 1 1207) (PAIR 53 1208) (PAIR 12379 1204) (PAIR 2 1210) (PAIR 1 1211) (PAIR 53 1212) (PAIR 12381 5055) (PAIR 12382 962) (PAIR 12384 0) (PAIR 12385 1215) (PAIR 12386 1217) (PAIR 17373 0) (PAIR 14526 1219) (PAIR 16342 1220) (PAIR 14531 1221) (PAIR 16362 1222) (PAIR 53 1223) (PAIR 17469 0) (PAIR 17373 1225) (PAIR 14533 1226) (PAIR 14536 1227) (PAIR 14539 1228) (PAIR 14555 1229) (PAIR 14556 1230) (PAIR 53 1231) (PAIR 12387 0) (PAIR 17026 0) (PAIR 17149 1234) (PAIR 2 1235) (PAIR 1 1236) (PAIR 53 1237) (PAIR 12388 0) (PAIR 53 1239) (PAIR 53 0) (PAIR 12389 0) (PAIR 12391 0) (PAIR 12392 1218) (PAIR 12393 1244) (PAIR 12394 1245) (PAIR 12395 1246) (PAIR 12396 1247) (PAIR 12397 1248) (PAIR 12398 1249) (PAIR 12399 1250) (PAIR 12400 1251) (PAIR 12401 1252) (PAIR 12402 1253) (PAIR 12403 1254) (PAIR 12404 1255) (PAIR 12405 1256) (PAIR 12406 1257) (PAIR 12407 1258) (PAIR 12408 1259) (PAIR 12409 1260) (PAIR 12410 1261) (PAIR 12411 1262) (PAIR 12412 1263) (PAIR 12413 1264) (PAIR 12414 1265) (PAIR 12415 1266) (PAIR 12416 1267) (PAIR 12417 1268) (PAIR 12418 1269) (PAIR 12419 1270) (PAIR 12420 1271) (PAIR 12421 1272) (PAIR 12422 1273) (PAIR 12423 1274) (PAIR 12424 1275) (PAIR 12425 1276) (PAIR 12426 1277) (PAIR 12427 1278) (PAIR 12428 1279) (PAIR 12429 1280) (PAIR 12430 1281) (PAIR 12431 1282) (PAIR 12432 1283) (PAIR 12433 1284) (PAIR 12434 1285) (PAIR 12435 1286) (PAIR 12436 1287) (PAIR 17247 0) (PAIR 17251 1289) (PAIR 17236 1290) (PAIR 53 1291) (PAIR 17247 0) (PAIR 17251 1293) (PAIR 17191 1294) (PAIR 53 1295) (PAIR 12437 0) (PAIR 12439 0) (PAIR 12440 1288) (PAIR 12442 0) (PAIR 17247 0) (PAIR 17251 1301) (PAIR 17236 1302) (PAIR 53 1303) (PAIR 17247 0) (PAIR 17251 1305) (PAIR 17191 1306) (PAIR 53 1307) (PAIR 12443 0) (PAIR 596 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 12445 6598) (PAIR 12446 1299) (PAIR 12447 1318) (PAIR 12448 1319) (PAIR 12449 1320) (PAIR 12450 1321) (PAIR 12451 1322) (PAIR 12452 1323) (PAIR 12453 1324) (PAIR 12454 1325) (PAIR 12455 1326) (PAIR 12456 1327) (PAIR 12457 1328) (PAIR 12458 1329) (PAIR 12459 1330) (PAIR 12460 1331) (PAIR 12461 1332) (PAIR 12462 1333) (PAIR 12463 1334) (PAIR 12464 1335) (PAIR 12465 1336) (PAIR 12466 1337) (PAIR 12467 1338) (PAIR 15358 0) (PAIR 15340 0) (PAIR 17243 8570) (PAIR 15347 0) (PAIR 17534 0) (PAIR 12469 0) (PAIR 16111 1345) (PAIR 16112 1346) (PAIR 12470 1340) (PAIR 17469 1348) (PAIR 17251 1349) (PAIR 53 1350) (PAIR 12472 0) (PAIR 12473 1339) (PAIR 12474 1353) (PAIR 12475 1354) (PAIR 12476 1355) (PAIR 12477 1356) (PAIR 12478 1357) (PAIR 12479 1358) (PAIR 12480 1359) (PAIR 12481 1360) (PAIR 12482 1361) (PAIR 17247 8759) (PAIR 17251 1363) (PAIR 53 0) (PAIR 53 0) (PAIR 12483 1364) (PAIR 53 1367) (PAIR 12485 0) (PAIR 12486 1362) (PAIR 12487 1370) (PAIR 12488 1371) (PAIR 12489 1372) (PAIR 12490 1373) (PAIR 12491 1374) (PAIR 12493 0) (PAIR 12494 1375) (PAIR 12495 1377) (PAIR 12496 1378) (PAIR 12497 1379) (PAIR 12498 1380) (PAIR 12499 1381) (PAIR 12500 1382) (PAIR 12501 1383) (PAIR 12502 1384) (PAIR 12503 1385) (PAIR 12504 1386) (PAIR 12505 1387) (PAIR 12506 1388) (PAIR 12507 1389) (PAIR 12508 1390) (PAIR 12509 1391) (PAIR 12510 1392) (PAIR 12511 1393) (PAIR 12512 1394) (PAIR 12513 1395) (PAIR 12514 1396) (PAIR 12515 1397) (PAIR 12516 1398) (PAIR 12517 1399) (PAIR 12518 1400) (PAIR 12519 1401) (PAIR 12520 1402) (PAIR 12521 1403) (PAIR 15899 0) (PAIR 15881 0) (PAIR 17243 8570) (PAIR 15888 0) (PAIR 17534 0) (PAIR 12523 0) (PAIR 16111 1410) (PAIR 16112 1411) (PAIR 12524 1405) (PAIR 17469 1413) (PAIR 17251 1414) (PAIR 53 1415) (PAIR 12526 0) (PAIR 12527 1404) (PAIR 12528 1418) (PAIR 12529 1419) (PAIR 12530 1420) (PAIR 12531 1421) (PAIR 12532 1422) (PAIR 12533 1423) (PAIR 12534 1424) (PAIR 12535 1425) (PAIR 12536 1426) (PAIR 17247 8759) (PAIR 17251 1428) (PAIR 53 0) (PAIR 53 0) (PAIR 12537 1429) (PAIR 53 1432) (PAIR 12539 0) (PAIR 12540 1427) (PAIR 12541 1435) (PAIR 12542 1436) (PAIR 12543 1437) (PAIR 12544 1438) (PAIR 12545 1439) (PAIR 12546 1440) (PAIR 12547 1441) (PAIR 12548 1442) (PAIR 12549 1443) (PAIR 12550 1444) (PAIR 12551 1445) (PAIR 12552 1446) (PAIR 12553 1447) (PAIR 12554 1448) (PAIR 12555 1449) (PAIR 12556 1450) (PAIR 12557 1451) (PAIR 12558 1452) (PAIR 12559 1453) (PAIR 12560 1454) (PAIR 12561 1455) (PAIR 12562 1456) (PAIR 12563 1457) (PAIR 12564 1458) (PAIR 12565 1459) (PAIR 12566 1460) (PAIR 12567 1461) (PAIR 12568 1462) (PAIR 12569 1463) (PAIR 12570 1464) (PAIR 12571 1465) (PAIR 12572 1466) (PAIR 12573 1467) (PAIR 12574 1468) (PAIR 12575 1469) (PAIR 12576 1470) (PAIR 12577 1471) (PAIR 12578 1472) (PAIR 12579 1473) (PAIR 12580 1474) (PAIR 12581 1475) (PAIR 12582 1476) (PAIR 12583 1477) (PAIR 12584 1478) (PAIR 12585 1479) (PAIR 12586 1480) (PAIR 12587 1481) (PAIR 12588 1482) (PAIR 12589 1483) (PAIR 12590 1484) (PAIR 12591 1485) (PAIR 12592 1486) (PAIR 12593 1487) (PAIR 12594 1488) (PAIR 12595 1489) (PAIR 12596 1490) (PAIR 12597 1491) (PAIR 12598 1492) (PAIR 12599 1493) (PAIR 12600 1494) (PAIR 12601 1495) (PAIR 12602 1496) (PAIR 12603 1497) (PAIR 12604 1498) (PAIR 12605 1499) (PAIR 12606 1500) (PAIR 12607 1501) (PAIR 12608 1502) (PAIR 12609 1503) (PAIR 12610 1504) (PAIR 12611 1505) (PAIR 12612 1506) (PAIR 12613 1507) (PAIR 12614 1508) (PAIR 12615 1509) (PAIR 12616 1510) (PAIR 12617 1511) (PAIR 12618 1512) (PAIR 12619 1513) (PAIR 12620 1514) (PAIR 12621 1515) (PAIR 12622 1516) (PAIR 12623 1517) (PAIR 12624 1518) (PAIR 12625 1519) (PAIR 12626 1520) (PAIR 12627 1521) (PAIR 12628 1522) (PAIR 12629 1523) (PAIR 12630 1524) (PAIR 12631 1525) (PAIR 12632 1526) (PAIR 12633 1527) (PAIR 12634 1528) (PAIR 12635 1529) (PAIR 12636 1530) (PAIR 12637 1531) (PAIR 12638 1532) (PAIR 12639 1533) (PAIR 12640 1534) (PAIR 12641 1535) (PAIR 12642 1536) (PAIR 12643 1537) (PAIR 12644 1538) (PAIR 12645 1539) (PAIR 12646 1540) (PAIR 12647 1541) (PAIR 12648 1542) (PAIR 12649 1543) (PAIR 12650 1544) (PAIR 12651 1545) (PAIR 12652 1546) (PAIR 12653 1547) (PAIR 12654 1548) (PAIR 12655 1549) (PAIR 12656 1550) (PAIR 12657 1551) (PAIR 12658 1552) (PAIR 12659 1553) (PAIR 12660 1554) (PAIR 12661 1555) (PAIR 12662 1556) (PAIR 12663 1557) (PAIR 12664 1558) (PAIR 12665 1559) (PAIR 12666 1560) (PAIR 12667 1561) (PAIR 12668 1562) (PAIR 12669 1563) (PAIR 12670 1564) (PAIR 12671 1565) (PAIR 12672 1566) (PAIR 12673 1567) (PAIR 12674 1568) (PAIR 12675 1569) (PAIR 12676 1570) (PAIR 12677 1571) (PAIR 12678 1572) (PAIR 12679 1573) (PAIR 12680 1574) (PAIR 12681 1575) (PAIR 12682 1576) (PAIR 12683 1577) (PAIR 12684 1578) (PAIR 12685 1579) (PAIR 12686 1580) (PAIR 12687 1581) (PAIR 12688 1582) (PAIR 12689 1583) (PAIR 12690 1584) (PAIR 12691 1585) (PAIR 1586 0) (PAIR 12693 0) (PAIR 12694 0) (PAIR 45 0) (PAIR 46 1590) (PAIR 47 1591) (PAIR 57 0) (PAIR 59 1593) (PAIR 60 1594) (PAIR 78 1595) (PAIR 79 1596) (PAIR 12696 0) (PAIR 12698 0) (PAIR 12699 1589) (PAIR 12701 0) (PAIR 12702 1600) (PAIR 12704 0) (PAIR 12705 1602) (PAIR 12707 0) (PAIR 12708 1604) (PAIR 3 0) (PAIR 55 1607) (PAIR 1608 0) (PAIR 61 1609) (PAIR 4928 0) (PAIR 4931 1611) (PAIR 11009 1612) (PAIR 11880 1613) (PAIR 11883 1614) (PAIR 12710 0) (PAIR 12712 0) (PAIR 12713 1606) (PAIR 12715 0) (PAIR 12716 1618) (PAIR 12718 0) (PAIR 12719 1620) (PAIR 12721 0) (PAIR 12722 1622) (PAIR 61 0) (PAIR 12723 0) (PAIR 12725 0) (PAIR 12726 1624) (PAIR 4 0) (PAIR 55 1629) (PAIR 1630 0) (PAIR 61 1631) (PAIR 4928 0) (PAIR 4931 1633) (PAIR 11009 1634) (PAIR 11880 1635) (PAIR 11883 1636) (PAIR 11895 1637) (PAIR 12728 0) (PAIR 12730 0) (PAIR 12731 1628) (PAIR 12733 0) (PAIR 12734 1641) (PAIR 12736 0) (PAIR 12738 1644) (PAIR 12739 1643) (PAIR 12741 0) (PAIR 12742 1646) (PAIR 17247 8759) (PAIR 17251 1649) (PAIR 16159 1650) (PAIR 53 1651) (PAIR 12744 0) (PAIR 12745 1648) (PAIR 1669 0) (PAIR 61 1655) (PAIR 12746 0) (PAIR 12747 0) (PAIR 12748 1654) (PAIR 17247 8759) (PAIR 17251 1660) (PAIR 16159 1661) (PAIR 53 1662) (PAIR 12750 0) (PAIR 12751 1659) (PAIR 12753 0) (PAIR 12754 1665) (PAIR 33 0) (PAIR 55 1668) (PAIR 12755 0) (PAIR 12756 0) (PAIR 12757 1667) (PAIR 12759 0) (PAIR 12760 1672) (PAIR 12762 0) (PAIR 17252 4507) (PAIR 53 1676) (PAIR 12764 1675) (PAIR 12766 1678) (PAIR 12767 1674) (PAIR 16159 8685) (PAIR 53 1681) (PAIR 12769 0) (PAIR 12770 1680) (PAIR 1698 0) (PAIR 61 1685) (PAIR 11340 0) (PAIR 12772 0) (PAIR 12774 0) (PAIR 12775 1684) (PAIR 12777 0) (PAIR 12778 1690) (PAIR 12780 0) (PAIR 12781 1692) (PAIR 12783 0) (PAIR 12784 1694) (PAIR 36 0) (PAIR 55 1697) (PAIR 81 0) (PAIR 12786 0) (PAIR 12788 0) (PAIR 12789 1696) (PAIR 12790 0) (PAIR 12792 0) (PAIR 12793 1702) (PAIR 12795 0) (PAIR 12796 1705) (PAIR 12798 0) (PAIR 12799 1707) (PAIR 12801 0) (PAIR 12802 1709) (PAIR 12804 0) (PAIR 12805 1711) (PAIR 14109 4443) (PAIR 17252 1714) (PAIR 53 1715) (PAIR 12807 0) (PAIR 12808 1713) (PAIR 5 0) (PAIR 55 1719) (PAIR 1720 0) (PAIR 61 1721) (PAIR 12809 0) (PAIR 12810 0) (PAIR 12811 1718) (PAIR 14109 4443) (PAIR 17252 1726) (PAIR 53 1727) (PAIR 12813 0) (PAIR 12814 1725) (PAIR 13219 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12815 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12816 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12818 0) (PAIR 12820 0) (PAIR 12821 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12822 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12823 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12825 0) (PAIR 12827 1746) (PAIR 53 0) (PAIR 53 0) (PAIR 12828 1760) (PAIR 12830 0) (PAIR 0 0) (PAIR 53 1765) (PAIR 2 0) (PAIR 1 1767) (PAIR 53 1768) (PAIR 12831 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12832 0) (PAIR 12834 1770) (PAIR 53 0) (PAIR 37 0) (PAIR 12835 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12837 0) (PAIR 12839 1774) (PAIR 53 0) (PAIR 53 0) (PAIR 12840 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12841 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12843 0) (PAIR 12845 0) (PAIR 12846 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12847 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12848 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12850 0) (PAIR 12852 1800) (PAIR 53 0) (PAIR 53 0) (PAIR 12853 1814) (PAIR 12855 0) (PAIR 12856 1785) (PAIR 53 0) (PAIR 37 0) (PAIR 12857 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12859 0) (PAIR 12861 0) (PAIR 0 0) (PAIR 53 1831) (PAIR 2 0) (PAIR 1 1833) (PAIR 53 1834) (PAIR 12862 1830) (PAIR 53 0) (PAIR 53 0) (PAIR 12863 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12864 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12866 0) (PAIR 12868 0) (PAIR 12869 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12870 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12871 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12873 0) (PAIR 12875 1851) (PAIR 53 0) (PAIR 53 0) (PAIR 12876 1865) (PAIR 12878 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 1871) (PAIR 12879 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12880 0) (PAIR 12882 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 1879) (PAIR 12883 0) (PAIR 12884 1873) (PAIR 53 0) (PAIR 53 0) (PAIR 12885 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12886 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12888 0) (PAIR 12890 1882) (PAIR 12891 1836) (PAIR 12892 1731) (PAIR 53 0) (PAIR 53 0) (PAIR 12893 0) (PAIR 12895 1898) (PAIR 14434 1902) (PAIR 37 0) (PAIR 603 0) (PAIR 12898 1903) (PAIR 53 2148) (PAIR 53 2151) (PAIR 12899 0) (PAIR 17473 1909) (PAIR 17474 0) (PAIR 17476 0) (PAIR 12901 1906) (PAIR 0 0) (PAIR 53 1914) (PAIR 2 0) (PAIR 1 1916) (PAIR 53 1917) (PAIR 12902 1913) (PAIR 2 1919) (PAIR 1 1920) (PAIR 53 1921) (PAIR 12904 0) (PAIR 12905 1730) (PAIR 19 0) (PAIR 55 1925) (PAIR 12906 0) (PAIR 12907 0) (PAIR 12908 1924) (PAIR 14431 0) (PAIR 14434 1930) (PAIR 37 0) (PAIR 603 0) (PAIR 12910 1931) (PAIR 0 0) (PAIR 53 1935) (PAIR 2 0) (PAIR 1 1937) (PAIR 53 1938) (PAIR 12911 0) (PAIR 17473 1940) (PAIR 17474 0) (PAIR 17476 0) (PAIR 12913 1934) (PAIR 0 0) (PAIR 53 1945) (PAIR 2 0) (PAIR 1 1947) (PAIR 53 1948) (PAIR 12914 1944) (PAIR 13219 1950) (PAIR 0 0) (PAIR 53 1952) (PAIR 2 0) (PAIR 1 1954) (PAIR 53 1955) (PAIR 12915 0) (PAIR 14445 1957) (PAIR 14450 1958) (PAIR 14467 1959) (PAIR 14468 0) (PAIR 14470 0) (PAIR 12917 0) (PAIR 14473 1963) (PAIR 14502 1964) (PAIR 12918 1951) (PAIR 53 1966) (PAIR 12920 0) (PAIR 12921 1929) (PAIR 12923 0) (PAIR 12924 1969) (PAIR 13219 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12925 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12926 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12928 0) (PAIR 12930 0) (PAIR 12931 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12932 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12933 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12935 0) (PAIR 12937 1987) (PAIR 53 0) (PAIR 53 0) (PAIR 12938 2001) (PAIR 12940 0) (PAIR 0 0) (PAIR 53 2006) (PAIR 2 0) (PAIR 1 2008) (PAIR 53 2009) (PAIR 12941 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12942 0) (PAIR 12944 2011) (PAIR 53 0) (PAIR 37 0) (PAIR 12945 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12947 0) (PAIR 12949 2015) (PAIR 53 0) (PAIR 53 0) (PAIR 12950 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12951 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12953 0) (PAIR 12955 0) (PAIR 12956 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12957 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12958 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12960 0) (PAIR 12962 2041) (PAIR 53 0) (PAIR 53 0) (PAIR 12963 2055) (PAIR 12965 0) (PAIR 12966 2026) (PAIR 53 0) (PAIR 37 0) (PAIR 12967 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12969 0) (PAIR 12971 0) (PAIR 0 0) (PAIR 53 2072) (PAIR 2 0) (PAIR 1 2074) (PAIR 53 2075) (PAIR 12972 2071) (PAIR 53 0) (PAIR 53 0) (PAIR 12973 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12974 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12976 0) (PAIR 12978 0) (PAIR 12979 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12980 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12981 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12983 0) (PAIR 12985 2092) (PAIR 53 0) (PAIR 53 0) (PAIR 12986 2106) (PAIR 12988 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 2112) (PAIR 12989 0) (PAIR 53 0) (PAIR 53 0) (PAIR 12990 0) (PAIR 12992 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 2120) (PAIR 12993 0) (PAIR 12994 2114) (PAIR 53 0) (PAIR 53 0) (PAIR 12995 0) (PAIR 53 0) (PAIR 37 0) (PAIR 12996 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 12998 0) (PAIR 13000 2123) (PAIR 13001 2077) (PAIR 13002 1972) (PAIR 53 0) (PAIR 53 0) (PAIR 13003 0) (PAIR 13005 2139) (PAIR 14434 2143) (PAIR 37 0) (PAIR 603 0) (PAIR 13008 2144) (PAIR 0 0) (PAIR 53 2148) (PAIR 2 0) (PAIR 1 2150) (PAIR 53 2151) (PAIR 13009 0) (PAIR 17473 2153) (PAIR 17474 0) (PAIR 17476 0) (PAIR 13011 2147) (PAIR 0 0) (PAIR 53 2158) (PAIR 2 0) (PAIR 1 2160) (PAIR 53 2161) (PAIR 13012 2157) (PAIR 2 2163) (PAIR 1 2164) (PAIR 53 2165) (PAIR 13014 0) (PAIR 13015 1971) (PAIR 25 0) (PAIR 55 2169) (PAIR 73 0) (PAIR 13017 0) (PAIR 13019 0) (PAIR 13020 2168) (PAIR 16350 0) (PAIR 17373 2175) (PAIR 16234 2176) (PAIR 16236 2177) (PAIR 16361 2178) (PAIR 16239 2179) (PAIR 16362 2180) (PAIR 53 2181) (PAIR 17469 0) (PAIR 17373 2183) (PAIR 16241 2184) (PAIR 16244 2185) (PAIR 16247 2186) (PAIR 16263 2187) (PAIR 16264 2188) (PAIR 53 2189) (PAIR 13021 0) (PAIR 17026 0) (PAIR 17149 2192) (PAIR 2 2193) (PAIR 1 2194) (PAIR 53 2195) (PAIR 13022 0) (PAIR 13024 0) (PAIR 13025 2174) (PAIR 16350 0) (PAIR 16292 2200) (PAIR 16361 2201) (PAIR 16362 2202) (PAIR 17469 0) (PAIR 16303 2204) (PAIR 16319 2205) (PAIR 16320 2206) (PAIR 53 2207) (PAIR 13026 0) (PAIR 13028 0) (PAIR 13029 2199) (PAIR 13031 0) (PAIR 13033 0) (PAIR 13035 0) (PAIR 13037 2213) (PAIR 26 0) (PAIR 55 2216) (PAIR 46 0) (PAIR 73 2218) (PAIR 13039 0) (PAIR 17026 0) (PAIR 17149 2221) (PAIR 2 2222) (PAIR 1 2223) (PAIR 53 2224) (PAIR 599 0) (PAIR 13041 2215) (PAIR 13042 2211) (PAIR 53 0) (PAIR 53 0) (PAIR 13043 0) (PAIR 13045 0) (PAIR 14434 2232) (PAIR 37 0) (PAIR 603 0) (PAIR 13048 2233) (PAIR 17251 2236) (PAIR 13219 2237) (PAIR 53 0) (PAIR 53 0) (PAIR 13049 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13050 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13052 0) (PAIR 13054 0) (PAIR 13055 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13056 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13057 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13059 0) (PAIR 13061 2253) (PAIR 53 0) (PAIR 53 0) (PAIR 13062 2267) (PAIR 13064 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13065 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13067 0) (PAIR 13069 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13070 0) (PAIR 13072 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13073 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13074 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13076 0) (PAIR 13078 0) (PAIR 13079 2282) (PAIR 53 0) (PAIR 53 0) (PAIR 13080 2301) (PAIR 53 0) (PAIR 37 0) (PAIR 13081 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13083 0) (PAIR 13085 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13086 0) (PAIR 13088 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13089 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13090 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13092 0) (PAIR 13094 0) (PAIR 13095 2315) (PAIR 53 0) (PAIR 53 0) (PAIR 13096 2334) (PAIR 13097 2238) (PAIR 0 0) (PAIR 53 2339) (PAIR 2 0) (PAIR 1 2341) (PAIR 53 2342) (PAIR 13098 2338) (PAIR 2 2344) (PAIR 1 2345) (PAIR 53 2346) (PAIR 13100 0) (PAIR 13101 2228) (PAIR 53 0) (PAIR 53 0) (PAIR 13102 0) (PAIR 13104 0) (PAIR 14434 2353) (PAIR 37 0) (PAIR 603 0) (PAIR 13107 2354) (PAIR 17251 2357) (PAIR 13219 2358) (PAIR 53 0) (PAIR 53 0) (PAIR 13108 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13109 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13111 0) (PAIR 13113 0) (PAIR 13114 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13115 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13116 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13118 0) (PAIR 13120 2374) (PAIR 53 0) (PAIR 53 0) (PAIR 13121 2388) (PAIR 13123 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13124 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13126 0) (PAIR 13128 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13129 0) (PAIR 13131 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13132 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13133 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13135 0) (PAIR 13137 0) (PAIR 13138 2403) (PAIR 53 0) (PAIR 53 0) (PAIR 13139 2422) (PAIR 53 0) (PAIR 37 0) (PAIR 13140 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13142 0) (PAIR 13144 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13145 0) (PAIR 13147 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13148 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13149 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13151 0) (PAIR 13153 0) (PAIR 13154 2436) (PAIR 53 0) (PAIR 53 0) (PAIR 13155 2455) (PAIR 13156 2359) (PAIR 0 0) (PAIR 53 2460) (PAIR 2 0) (PAIR 1 2462) (PAIR 53 2463) (PAIR 13157 2459) (PAIR 2 2465) (PAIR 1 2466) (PAIR 53 2467) (PAIR 13159 0) (PAIR 13160 2349) (PAIR 13162 0) (PAIR 13164 0) (PAIR 13166 0) (PAIR 13168 2472) (PAIR 13170 0) (PAIR 13172 2474) (PAIR 20 0) (PAIR 55 2477) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 2480) (PAIR 2 0) (PAIR 1 2482) (PAIR 53 2483) (PAIR 13173 0) (PAIR 17506 2485) (PAIR 17508 0) (PAIR 17510 0) (PAIR 13175 2486) (PAIR 17520 0) (PAIR 17526 2490) (PAIR 17527 2491) (PAIR 13177 0) (PAIR 13178 2489) (PAIR 16435 0) (PAIR 17534 0) (PAIR 13180 0) (PAIR 0 0) (PAIR 53 2498) (PAIR 2 0) (PAIR 1 2500) (PAIR 53 2501) (PAIR 13181 2497) (PAIR 17545 0) (PAIR 17551 2504) (PAIR 17552 2505) (PAIR 13183 0) (PAIR 17555 0) (PAIR 17560 2508) (PAIR 17566 2509) (PAIR 13184 2503) (PAIR 13185 0) (PAIR 17469 2512) (PAIR 0 0) (PAIR 53 2514) (PAIR 2 0) (PAIR 1 2516) (PAIR 53 2517) (PAIR 13186 0) (PAIR 17473 2519) (PAIR 17474 0) (PAIR 17476 0) (PAIR 13188 2513) (PAIR 16446 2523) (PAIR 17026 0) (PAIR 17149 2525) (PAIR 2 2526) (PAIR 1 2527) (PAIR 53 2528) (PAIR 599 0) (PAIR 2870 0) (PAIR 46 2531) (PAIR 73 2532) (PAIR 13190 0) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 2536) (PAIR 2 0) (PAIR 1 2538) (PAIR 53 2539) (PAIR 13191 0) (PAIR 17506 2541) (PAIR 17508 0) (PAIR 17510 0) (PAIR 13193 2542) (PAIR 17520 0) (PAIR 17526 2546) (PAIR 17527 2547) (PAIR 13195 0) (PAIR 13196 2545) (PAIR 16435 0) (PAIR 17534 0) (PAIR 13198 0) (PAIR 0 0) (PAIR 53 2554) (PAIR 2 0) (PAIR 1 2556) (PAIR 53 2557) (PAIR 13199 2553) (PAIR 17545 0) (PAIR 17551 2560) (PAIR 17552 2561) (PAIR 13201 0) (PAIR 17555 0) (PAIR 17560 2564) (PAIR 17566 2565) (PAIR 13202 2559) (PAIR 13203 0) (PAIR 17469 2568) (PAIR 0 0) (PAIR 53 2570) (PAIR 2 0) (PAIR 1 2572) (PAIR 53 2573) (PAIR 13204 0) (PAIR 17473 2575) (PAIR 17474 0) (PAIR 17476 0) (PAIR 13206 2569) (PAIR 16446 2579) (PAIR 17026 0) (PAIR 17149 2581) (PAIR 2 2582) (PAIR 1 2583) (PAIR 53 2584) (PAIR 599 0) (PAIR 13208 2476) (PAIR 13209 2470) (PAIR 16350 0) (PAIR 16353 2589) (PAIR 16361 2590) (PAIR 16362 2591) (PAIR 600 0) (PAIR 13211 0) (PAIR 13212 2588) (PAIR 53 0) (PAIR 53 0) (PAIR 13213 0) (PAIR 13215 0) (PAIR 14434 2599) (PAIR 37 0) (PAIR 603 0) (PAIR 13218 2600) (PAIR 17251 2603) (PAIR 13219 2604) (PAIR 53 0) (PAIR 53 0) (PAIR 13220 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13221 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13223 0) (PAIR 13225 0) (PAIR 13226 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13227 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13228 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13230 0) (PAIR 13232 2620) (PAIR 53 0) (PAIR 53 0) (PAIR 13233 2634) (PAIR 13235 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13236 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13238 0) (PAIR 13240 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13241 0) (PAIR 13243 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13244 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13245 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13247 0) (PAIR 13249 0) (PAIR 13250 2649) (PAIR 53 0) (PAIR 53 0) (PAIR 13251 2668) (PAIR 53 0) (PAIR 37 0) (PAIR 13252 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13254 0) (PAIR 13256 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13257 0) (PAIR 13259 0) (PAIR 53 0) (PAIR 53 0) (PAIR 13260 0) (PAIR 53 0) (PAIR 37 0) (PAIR 13261 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 13263 0) (PAIR 13265 0) (PAIR 13266 2682) (PAIR 53 0) (PAIR 53 0) (PAIR 13267 2701) (PAIR 13268 2605) (PAIR 0 0) (PAIR 53 2706) (PAIR 2 0) (PAIR 1 2708) (PAIR 53 2709) (PAIR 13269 2705) (PAIR 2 2711) (PAIR 1 2712) (PAIR 53 2713) (PAIR 13271 0) (PAIR 13272 2595) (PAIR 13274 0) (PAIR 17446 0) (PAIR 13276 0) (PAIR 13278 0) (PAIR 17247 0) (PAIR 17251 2721) (PAIR 17446 2722) (PAIR 13280 2719) (PAIR 13282 0) (PAIR 17469 0) (PAIR 17247 2726) (PAIR 17251 2727) (PAIR 17446 2728) (PAIR 13284 2724) (PAIR 34 0) (PAIR 55 2731) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 2734) (PAIR 2 0) (PAIR 1 2736) (PAIR 53 2737) (PAIR 13285 0) (PAIR 17506 2739) (PAIR 17508 0) (PAIR 17510 0) (PAIR 13287 2740) (PAIR 17520 0) (PAIR 17526 2744) (PAIR 17527 2745) (PAIR 13289 0) (PAIR 13290 2743) (PAIR 16435 0) (PAIR 17534 0) (PAIR 13292 0) (PAIR 0 0) (PAIR 53 2752) (PAIR 2 0) (PAIR 1 2754) (PAIR 53 2755) (PAIR 13293 2751) (PAIR 17545 0) (PAIR 17551 2758) (PAIR 17552 2759) (PAIR 13295 0) (PAIR 17555 0) (PAIR 17560 2762) (PAIR 17566 2763) (PAIR 13296 2757) (PAIR 13297 0) (PAIR 17469 2766) (PAIR 0 0) (PAIR 53 2768) (PAIR 2 0) (PAIR 1 2770) (PAIR 53 2771) (PAIR 13298 0) (PAIR 17473 2773) (PAIR 17474 0) (PAIR 17476 0) (PAIR 13300 2767) (PAIR 16446 2777) (PAIR 17026 0) (PAIR 17149 2779) (PAIR 2 2780) (PAIR 1 2781) (PAIR 53 2782) (PAIR 599 0) (PAIR 600 0) (PAIR 2870 0) (PAIR 46 2786) (PAIR 73 2787) (PAIR 78 2788) (PAIR 13302 0) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 2792) (PAIR 2 0) (PAIR 1 2794) (PAIR 53 2795) (PAIR 13303 0) (PAIR 17506 2797) (PAIR 17508 0) (PAIR 17510 0) (PAIR 13305 2798) (PAIR 17520 0) (PAIR 17526 2802) (PAIR 17527 2803) (PAIR 13307 0) (PAIR 13308 2801) (PAIR 16435 0) (PAIR 17534 0) (PAIR 13310 0) (PAIR 0 0) (PAIR 53 2810) (PAIR 2 0) (PAIR 1 2812) (PAIR 53 2813) (PAIR 13311 2809) (PAIR 17545 0) (PAIR 17551 2816) (PAIR 17552 2817) (PAIR 13313 0) (PAIR 17555 0) (PAIR 17560 2820) (PAIR 17566 2821) (PAIR 13314 2815) (PAIR 13315 0) (PAIR 17469 2824) (PAIR 0 0) (PAIR 53 2826) (PAIR 2 0) (PAIR 1 2828) (PAIR 53 2829) (PAIR 13316 0) (PAIR 17473 2831) (PAIR 17474 0) (PAIR 17476 0) (PAIR 13318 2825) (PAIR 16446 2835) (PAIR 17026 0) (PAIR 17149 2837) (PAIR 2 2838) (PAIR 1 2839) (PAIR 53 2840) (PAIR 599 0) (PAIR 600 0) (PAIR 13320 2730) (PAIR 13321 2716) (PAIR 17485 0) (PAIR 0 2846) (PAIR 17571 0) (PAIR 17574 2848) (PAIR 17578 2849) (PAIR 53 2850) (PAIR 13322 0) (PAIR 13324 0) (PAIR 13325 2845) (PAIR 13327 0) (PAIR 13329 2855) (PAIR 13330 2854) (PAIR 13332 0) (PAIR 13334 2858) (PAIR 13336 2859) (PAIR 13338 2860) (PAIR 13339 2857) (PAIR 13341 0) (PAIR 13343 0) (PAIR 13345 0) (PAIR 13347 2864) (PAIR 13349 0) (PAIR 13351 2866) (PAIR 21 0) (PAIR 55 2869) (PAIR 13418 0) (PAIR 0 2871) (PAIR 17571 0) (PAIR 13653 2873) (PAIR 17578 2874) (PAIR 53 2875) (PAIR 17026 0) (PAIR 17149 2877) (PAIR 2 2878) (PAIR 1 2879) (PAIR 53 2880) (PAIR 599 0) (PAIR 600 0) (PAIR 4307 0) (PAIR 42 2884) (PAIR 46 2885) (PAIR 73 2886) (PAIR 78 2887) (PAIR 13353 0) (PAIR 13418 0) (PAIR 0 2890) (PAIR 17571 0) (PAIR 13653 2892) (PAIR 17578 2893) (PAIR 53 2894) (PAIR 17026 0) (PAIR 17149 2896) (PAIR 2 2897) (PAIR 1 2898) (PAIR 53 2899) (PAIR 599 0) (PAIR 600 0) (PAIR 13355 2868) (PAIR 13356 2862) (PAIR 53 3123) (PAIR 13358 0) (PAIR 53 3127) (PAIR 13360 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13362 0) (PAIR 17175 2911) (PAIR 53 2912) (PAIR 13363 0) (PAIR 17373 2914) (PAIR 16362 2915) (PAIR 15916 2916) (PAIR 53 2917) (PAIR 16342 2918) (PAIR 53 3142) (PAIR 13365 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13367 0) (PAIR 17175 2924) (PAIR 53 2925) (PAIR 13368 0) (PAIR 17247 2927) (PAIR 17469 2928) (PAIR 17373 2929) (PAIR 15916 2930) (PAIR 53 2931) (PAIR 17251 2932) (PAIR 17446 2933) (PAIR 13369 0) (PAIR 17026 0) (PAIR 17149 2936) (PAIR 2 2937) (PAIR 1 2938) (PAIR 53 2939) (PAIR 13370 2906) (PAIR 53 2941) (PAIR 37 0) (PAIR 603 0) (PAIR 13372 0) (PAIR 17175 2945) (PAIR 53 2946) (PAIR 13373 0) (PAIR 17247 2948) (PAIR 17373 2949) (PAIR 16342 2950) (PAIR 15916 2951) (PAIR 53 2952) (PAIR 17251 2953) (PAIR 17446 2954) (PAIR 13375 0) (PAIR 13376 2904) (PAIR 13378 0) (PAIR 13379 2957) (PAIR 13381 0) (PAIR 13383 0) (PAIR 13385 0) (PAIR 15757 4194) (PAIR 13387 2961) (PAIR 13389 0) (PAIR 0 3364) (PAIR 53 0) (PAIR 13390 0) (PAIR 0 2968) (PAIR 13392 2964) (PAIR 29 0) (PAIR 55 2971) (PAIR 13418 0) (PAIR 0 2973) (PAIR 17571 0) (PAIR 13653 2975) (PAIR 17578 2976) (PAIR 53 2977) (PAIR 17026 0) (PAIR 17149 2979) (PAIR 2 2980) (PAIR 1 2981) (PAIR 53 2982) (PAIR 599 0) (PAIR 4307 0) (PAIR 42 2985) (PAIR 46 2986) (PAIR 73 2987) (PAIR 78 2988) (PAIR 13394 0) (PAIR 13418 0) (PAIR 0 2991) (PAIR 17571 0) (PAIR 13653 2993) (PAIR 17578 2994) (PAIR 53 2995) (PAIR 17026 0) (PAIR 17149 2997) (PAIR 2 2998) (PAIR 1 2999) (PAIR 53 3000) (PAIR 599 0) (PAIR 600 0) (PAIR 13396 2970) (PAIR 13397 2959) (PAIR 53 3123) (PAIR 13399 0) (PAIR 53 3127) (PAIR 13401 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13403 0) (PAIR 17175 3012) (PAIR 53 3013) (PAIR 13404 0) (PAIR 17373 3015) (PAIR 16362 3016) (PAIR 15916 3017) (PAIR 53 3018) (PAIR 16342 3019) (PAIR 53 3142) (PAIR 13406 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13408 0) (PAIR 17175 3025) (PAIR 53 3026) (PAIR 13409 0) (PAIR 17247 3028) (PAIR 17469 3029) (PAIR 17373 3030) (PAIR 15916 3031) (PAIR 53 3032) (PAIR 17251 3033) (PAIR 17446 3034) (PAIR 13410 0) (PAIR 17026 0) (PAIR 17149 3037) (PAIR 2 3038) (PAIR 1 3039) (PAIR 53 3040) (PAIR 13411 3007) (PAIR 53 3042) (PAIR 37 0) (PAIR 603 0) (PAIR 13413 0) (PAIR 17175 3046) (PAIR 53 3047) (PAIR 13414 0) (PAIR 17247 3049) (PAIR 17373 3050) (PAIR 16342 3051) (PAIR 15916 3052) (PAIR 53 3053) (PAIR 17251 3054) (PAIR 17446 3055) (PAIR 13416 0) (PAIR 13417 3005) (PAIR 17479 0) (PAIR 0 3059) (PAIR 53 11354) (PAIR 13418 0) (PAIR 0 3062) (PAIR 13420 0) (PAIR 13421 3058) (PAIR 13423 0) (PAIR 13425 0) (PAIR 13427 0) (PAIR 15760 4196) (PAIR 13429 3067) (PAIR 13431 0) (PAIR 53 3369) (PAIR 15760 3072) (PAIR 13433 3070) (PAIR 13474 0) (PAIR 0 3075) (PAIR 53 3076) (PAIR 17571 0) (PAIR 13653 3078) (PAIR 17578 3079) (PAIR 53 3080) (PAIR 37 0) (PAIR 603 0) (PAIR 13435 0) (PAIR 13689 3084) (PAIR 53 3085) (PAIR 17026 0) (PAIR 17149 3087) (PAIR 2 3088) (PAIR 1 3089) (PAIR 53 3090) (PAIR 599 0) (PAIR 600 0) (PAIR 4310 0) (PAIR 42 3094) (PAIR 45 3095) (PAIR 46 3096) (PAIR 73 3097) (PAIR 78 3098) (PAIR 13437 0) (PAIR 13474 0) (PAIR 0 3101) (PAIR 53 3102) (PAIR 17571 0) (PAIR 13653 3104) (PAIR 17578 3105) (PAIR 53 3106) (PAIR 37 0) (PAIR 603 0) (PAIR 13439 0) (PAIR 13689 3110) (PAIR 53 3111) (PAIR 17026 0) (PAIR 17149 3113) (PAIR 2 3114) (PAIR 1 3115) (PAIR 53 3116) (PAIR 599 0) (PAIR 600 0) (PAIR 13441 3074) (PAIR 13442 3065) (PAIR 17380 0) (PAIR 17382 3122) (PAIR 53 3123) (PAIR 13444 0) (PAIR 17380 0) (PAIR 17382 3126) (PAIR 53 3127) (PAIR 13446 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13448 0) (PAIR 17175 3132) (PAIR 53 3133) (PAIR 13449 0) (PAIR 17373 3135) (PAIR 16362 3136) (PAIR 15916 3137) (PAIR 53 3138) (PAIR 16342 3139) (PAIR 17380 0) (PAIR 17382 3141) (PAIR 53 3142) (PAIR 13451 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13453 0) (PAIR 17175 3147) (PAIR 53 3148) (PAIR 13454 0) (PAIR 17247 3150) (PAIR 17469 3151) (PAIR 17373 3152) (PAIR 15916 3153) (PAIR 53 3154) (PAIR 17251 3155) (PAIR 17446 3156) (PAIR 13455 0) (PAIR 17026 0) (PAIR 17149 3159) (PAIR 2 3160) (PAIR 1 3161) (PAIR 53 3162) (PAIR 13456 3125) (PAIR 53 3164) (PAIR 37 0) (PAIR 603 0) (PAIR 13458 0) (PAIR 17175 3168) (PAIR 53 3169) (PAIR 13459 0) (PAIR 17247 3171) (PAIR 17373 3172) (PAIR 16342 3173) (PAIR 15916 3174) (PAIR 53 3175) (PAIR 17251 3176) (PAIR 17446 3177) (PAIR 13461 0) (PAIR 13462 3121) (PAIR 13464 0) (PAIR 13466 3181) (PAIR 13468 3182) (PAIR 13470 3183) (PAIR 13471 3180) (PAIR 0 0) (PAIR 13472 0) (PAIR 53 3187) (PAIR 0 3188) (PAIR 53 0) (PAIR 13473 0) (PAIR 0 3484) (PAIR 13474 0) (PAIR 0 3193) (PAIR 53 3194) (PAIR 13476 0) (PAIR 13477 3185) (PAIR 13479 0) (PAIR 13481 0) (PAIR 13483 0) (PAIR 15757 4194) (PAIR 15760 4196) (PAIR 13484 0) (PAIR 53 3203) (PAIR 13486 3199) (PAIR 13488 0) (PAIR 0 3364) (PAIR 53 0) (PAIR 13489 0) (PAIR 0 3209) (PAIR 53 3369) (PAIR 15760 3211) (PAIR 13490 0) (PAIR 53 3213) (PAIR 13492 3205) (PAIR 13510 0) (PAIR 53 3216) (PAIR 17571 0) (PAIR 13653 3218) (PAIR 17578 3219) (PAIR 53 3220) (PAIR 37 0) (PAIR 603 0) (PAIR 13494 0) (PAIR 13689 3224) (PAIR 53 3225) (PAIR 17026 0) (PAIR 17149 3227) (PAIR 2 3228) (PAIR 1 3229) (PAIR 53 3230) (PAIR 599 0) (PAIR 594 0) (PAIR 600 0) (PAIR 3312 0) (PAIR 42 3235) (PAIR 45 3236) (PAIR 46 3237) (PAIR 73 3238) (PAIR 59 3239) (PAIR 78 3240) (PAIR 13496 0) (PAIR 13510 0) (PAIR 53 3243) (PAIR 17571 0) (PAIR 13653 3245) (PAIR 17578 3246) (PAIR 53 3247) (PAIR 37 0) (PAIR 603 0) (PAIR 13498 0) (PAIR 13689 3251) (PAIR 53 3252) (PAIR 17026 0) (PAIR 17149 3254) (PAIR 2 3255) (PAIR 1 3256) (PAIR 53 3257) (PAIR 599 0) (PAIR 594 0) (PAIR 600 0) (PAIR 13500 3215) (PAIR 13501 3197) (PAIR 15914 3458) (PAIR 15916 3460) (PAIR 13502 0) (PAIR 17247 3266) (PAIR 17373 3267) (PAIR 16342 3268) (PAIR 15916 3269) (PAIR 53 3270) (PAIR 17251 3271) (PAIR 17446 3272) (PAIR 13504 0) (PAIR 13505 3263) (PAIR 53 3474) (PAIR 13506 0) (PAIR 0 3277) (PAIR 0 0) (PAIR 13507 0) (PAIR 53 3280) (PAIR 0 3281) (PAIR 53 0) (PAIR 13508 0) (PAIR 0 3484) (PAIR 13509 0) (PAIR 0 3286) (PAIR 53 3287) (PAIR 13510 0) (PAIR 53 3289) (PAIR 13512 0) (PAIR 13513 3275) (PAIR 13515 0) (PAIR 13517 0) (PAIR 13519 0) (PAIR 13521 3294) (PAIR 13523 0) (PAIR 15914 0) (PAIR 15916 0) (PAIR 17026 0) (PAIR 17149 3300) (PAIR 2 3301) (PAIR 1 3302) (PAIR 53 3303) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13525 3296) (PAIR 4307 0) (PAIR 4310 3310) (PAIR 47 3311) (PAIR 42 0) (PAIR 45 3313) (PAIR 46 3314) (PAIR 73 3315) (PAIR 59 3316) (PAIR 60 3317) (PAIR 78 3318) (PAIR 13527 0) (PAIR 13529 3309) (PAIR 13530 3292) (PAIR 15914 3458) (PAIR 15916 3460) (PAIR 13531 0) (PAIR 17247 3325) (PAIR 17373 3326) (PAIR 16342 3327) (PAIR 15916 3328) (PAIR 53 3329) (PAIR 17251 3330) (PAIR 17446 3331) (PAIR 13533 0) (PAIR 13534 3322) (PAIR 13536 0) (PAIR 13538 3335) (PAIR 13540 3336) (PAIR 13542 3337) (PAIR 13543 3334) (PAIR 17385 10431) (PAIR 53 0) (PAIR 13544 0) (PAIR 0 10435) (PAIR 13545 0) (PAIR 0 3344) (PAIR 53 3345) (PAIR 13547 0) (PAIR 13548 3339) (PAIR 13550 0) (PAIR 13552 0) (PAIR 13554 0) (PAIR 15757 4194) (PAIR 15760 4196) (PAIR 13555 0) (PAIR 53 3354) (PAIR 0 4202) (PAIR 53 3356) (PAIR 13556 0) (PAIR 2 3358) (PAIR 1 3359) (PAIR 53 3360) (PAIR 13558 3350) (PAIR 13560 0) (PAIR 17479 0) (PAIR 0 3364) (PAIR 53 0) (PAIR 13561 0) (PAIR 0 3367) (PAIR 0 0) (PAIR 53 3369) (PAIR 15760 3370) (PAIR 13562 0) (PAIR 53 3372) (PAIR 13587 0) (PAIR 0 3374) (PAIR 53 3375) (PAIR 13563 0) (PAIR 2 3377) (PAIR 1 3378) (PAIR 53 3379) (PAIR 13565 3362) (PAIR 13588 0) (PAIR 2 3382) (PAIR 1 3383) (PAIR 53 3384) (PAIR 17571 0) (PAIR 13653 3386) (PAIR 17578 3387) (PAIR 53 3388) (PAIR 37 0) (PAIR 603 0) (PAIR 13567 0) (PAIR 13689 3392) (PAIR 53 3393) (PAIR 17026 0) (PAIR 17149 3395) (PAIR 2 3396) (PAIR 1 3397) (PAIR 53 3398) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 3577 0) (PAIR 42 3404) (PAIR 45 3405) (PAIR 46 3406) (PAIR 73 3407) (PAIR 59 3408) (PAIR 60 3409) (PAIR 78 3410) (PAIR 13569 0) (PAIR 13588 0) (PAIR 2 3413) (PAIR 1 3414) (PAIR 53 3415) (PAIR 17571 0) (PAIR 13653 3417) (PAIR 17578 3418) (PAIR 53 3419) (PAIR 37 0) (PAIR 603 0) (PAIR 13571 0) (PAIR 13689 3423) (PAIR 53 3424) (PAIR 17026 0) (PAIR 17149 3426) (PAIR 2 3427) (PAIR 1 3428) (PAIR 53 3429) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13573 3381) (PAIR 13574 3348) (PAIR 17373 0) (PAIR 16362 3437) (PAIR 15916 3438) (PAIR 15917 3439) (PAIR 53 3440) (PAIR 16342 3441) (PAIR 17469 0) (PAIR 17373 3443) (PAIR 15916 3444) (PAIR 15917 3445) (PAIR 53 3446) (PAIR 17247 3447) (PAIR 17251 3448) (PAIR 17446 3449) (PAIR 13575 0) (PAIR 17026 0) (PAIR 17149 3452) (PAIR 2 3453) (PAIR 1 3454) (PAIR 53 3455) (PAIR 13576 0) (PAIR 53 3457) (PAIR 15914 3458) (PAIR 53 0) (PAIR 15916 3460) (PAIR 13577 0) (PAIR 17247 3462) (PAIR 17373 3463) (PAIR 16342 3464) (PAIR 15916 3465) (PAIR 53 3466) (PAIR 17251 3467) (PAIR 17446 3468) (PAIR 13579 0) (PAIR 13580 3436) (PAIR 17479 0) (PAIR 0 3472) (PAIR 17363 0) (PAIR 53 3474) (PAIR 13581 0) (PAIR 0 3476) (PAIR 0 0) (PAIR 13582 0) (PAIR 53 3479) (PAIR 0 3480) (PAIR 53 0) (PAIR 13583 0) (PAIR 17369 0) (PAIR 0 3484) (PAIR 13584 0) (PAIR 0 3486) (PAIR 53 3487) (PAIR 13585 0) (PAIR 53 3489) (PAIR 17385 10431) (PAIR 53 0) (PAIR 13586 0) (PAIR 0 10435) (PAIR 13587 0) (PAIR 0 3495) (PAIR 53 3496) (PAIR 13588 0) (PAIR 2 3498) (PAIR 1 3499) (PAIR 53 3500) (PAIR 17007 0) (PAIR 0 3502) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 3505) (PAIR 0 0) (PAIR 13589 0) (PAIR 0 3508) (PAIR 13590 0) (PAIR 0 3510) (PAIR 53 3511) (PAIR 13591 0) (PAIR 53 3513) (PAIR 17015 0) (PAIR 0 3515) (PAIR 53 3516) (PAIR 13592 0) (PAIR 2 3518) (PAIR 1 3519) (PAIR 53 3520) (PAIR 17380 0) (PAIR 17382 3522) (PAIR 53 3523) (PAIR 13594 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13596 0) (PAIR 17175 3528) (PAIR 53 3529) (PAIR 13597 0) (PAIR 17142 3531) (PAIR 17373 3532) (PAIR 53 3533) (PAIR 17026 0) (PAIR 17149 3535) (PAIR 2 3536) (PAIR 1 3537) (PAIR 53 3538) (PAIR 13598 0) (PAIR 17152 3540) (PAIR 53 3541) (PAIR 13599 0) (PAIR 594 0) (PAIR 13601 0) (PAIR 13602 3471) (PAIR 13604 0) (PAIR 13606 0) (PAIR 13608 0) (PAIR 15916 0) (PAIR 17149 0) (PAIR 2 3551) (PAIR 1 3552) (PAIR 53 3553) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13610 3548) (PAIR 13612 0) (PAIR 15916 0) (PAIR 17026 0) (PAIR 17149 3562) (PAIR 2 3563) (PAIR 1 3564) (PAIR 53 3565) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13614 3559) (PAIR 4307 0) (PAIR 4310 3572) (PAIR 47 3573) (PAIR 3574 0) (PAIR 4315 3575) (PAIR 47 3576) (PAIR 42 0) (PAIR 45 3578) (PAIR 46 3579) (PAIR 73 3580) (PAIR 59 3581) (PAIR 60 3582) (PAIR 78 3583) (PAIR 13616 0) (PAIR 13618 3571) (PAIR 13619 3546) (PAIR 13621 0) (PAIR 13622 3587) (PAIR 13624 0) (PAIR 13625 3589) (PAIR 13627 0) (PAIR 13629 0) (PAIR 13631 0) (PAIR 13633 3593) (PAIR 13635 0) (PAIR 17479 0) (PAIR 0 3597) (PAIR 53 0) (PAIR 13636 0) (PAIR 0 3600) (PAIR 0 0) (PAIR 53 3602) (PAIR 15760 3603) (PAIR 13637 0) (PAIR 53 3605) (PAIR 13871 0) (PAIR 0 3607) (PAIR 53 3608) (PAIR 13638 0) (PAIR 2 3610) (PAIR 1 3611) (PAIR 53 3612) (PAIR 17373 0) (PAIR 15917 3614) (PAIR 53 3615) (PAIR 17149 0) (PAIR 2 3617) (PAIR 1 3618) (PAIR 53 3619) (PAIR 13639 0) (PAIR 17152 3621) (PAIR 53 3622) (PAIR 13640 0) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13642 3595) (PAIR 13727 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13644 0) (PAIR 13689 3633) (PAIR 53 3634) (PAIR 17026 0) (PAIR 17149 3636) (PAIR 2 3637) (PAIR 1 3638) (PAIR 53 3639) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4326 0) (PAIR 45 3645) (PAIR 46 3646) (PAIR 73 3647) (PAIR 59 3648) (PAIR 60 3649) (PAIR 78 3650) (PAIR 13646 0) (PAIR 13727 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13648 0) (PAIR 13689 3656) (PAIR 53 3657) (PAIR 17026 0) (PAIR 17149 3659) (PAIR 2 3660) (PAIR 1 3661) (PAIR 53 3662) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13650 3629) (PAIR 13651 3591) (PAIR 17571 0) (PAIR 13653 3670) (PAIR 17578 3671) (PAIR 53 3672) (PAIR 13655 0) (PAIR 13656 3669) (PAIR 13658 0) (PAIR 13659 3675) (PAIR 13661 0) (PAIR 13663 0) (PAIR 13665 0) (PAIR 13667 3679) (PAIR 13669 0) (PAIR 13671 3681) (PAIR 13727 0) (PAIR 17380 0) (PAIR 17382 3685) (PAIR 53 3686) (PAIR 13673 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13675 0) (PAIR 17175 3691) (PAIR 53 3692) (PAIR 13676 0) (PAIR 17142 3694) (PAIR 17373 3695) (PAIR 53 3696) (PAIR 17026 0) (PAIR 17149 3698) (PAIR 2 3699) (PAIR 1 3700) (PAIR 53 3701) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4326 0) (PAIR 3771 3707) (PAIR 46 3708) (PAIR 73 3709) (PAIR 59 3710) (PAIR 60 3711) (PAIR 78 3712) (PAIR 13678 0) (PAIR 13727 0) (PAIR 17380 0) (PAIR 17382 3716) (PAIR 53 3717) (PAIR 13680 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13682 0) (PAIR 17175 3722) (PAIR 53 3723) (PAIR 13683 0) (PAIR 17142 3725) (PAIR 17373 3726) (PAIR 53 3727) (PAIR 17026 0) (PAIR 17149 3729) (PAIR 2 3730) (PAIR 1 3731) (PAIR 53 3732) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13685 3683) (PAIR 13686 3677) (PAIR 37 0) (PAIR 603 0) (PAIR 13688 0) (PAIR 17172 0) (PAIR 13689 3742) (PAIR 53 3744) (PAIR 13691 0) (PAIR 13692 3739) (PAIR 13694 0) (PAIR 15917 3898) (PAIR 53 3749) (PAIR 13696 3748) (PAIR 17142 0) (PAIR 17373 3752) (PAIR 15917 3753) (PAIR 53 3754) (PAIR 13698 3751) (PAIR 13700 3756) (PAIR 13701 3747) (PAIR 13703 0) (PAIR 13704 3758) (PAIR 13706 0) (PAIR 13708 0) (PAIR 13710 0) (PAIR 13712 3762) (PAIR 13714 0) (PAIR 1 4211) (PAIR 53 3766) (PAIR 13716 3764) (PAIR 42 0) (PAIR 45 3769) (PAIR 47 3770) (PAIR 17007 0) (PAIR 0 3772) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 3775) (PAIR 0 0) (PAIR 13717 0) (PAIR 0 3778) (PAIR 13718 0) (PAIR 0 3780) (PAIR 53 3781) (PAIR 13719 0) (PAIR 53 3783) (PAIR 17015 0) (PAIR 0 3785) (PAIR 53 3786) (PAIR 13720 0) (PAIR 2 3788) (PAIR 1 3789) (PAIR 53 3790) (PAIR 17380 0) (PAIR 17382 3792) (PAIR 53 3793) (PAIR 13722 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13724 0) (PAIR 17175 3798) (PAIR 53 3799) (PAIR 13725 0) (PAIR 17142 3801) (PAIR 17373 3802) (PAIR 53 3803) (PAIR 17026 0) (PAIR 17149 3805) (PAIR 2 3806) (PAIR 1 3807) (PAIR 53 3808) (PAIR 13726 0) (PAIR 17152 3810) (PAIR 53 3811) (PAIR 13727 0) (PAIR 17026 0) (PAIR 17149 3814) (PAIR 2 3815) (PAIR 1 3816) (PAIR 53 3817) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4326 0) (PAIR 46 3823) (PAIR 73 3824) (PAIR 59 3825) (PAIR 60 3826) (PAIR 78 3827) (PAIR 13729 0) (PAIR 17007 0) (PAIR 0 3830) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 3833) (PAIR 0 0) (PAIR 13730 0) (PAIR 0 3836) (PAIR 13731 0) (PAIR 0 3838) (PAIR 53 3839) (PAIR 13732 0) (PAIR 53 3841) (PAIR 17015 0) (PAIR 0 3843) (PAIR 53 3844) (PAIR 13733 0) (PAIR 2 3846) (PAIR 1 3847) (PAIR 53 3848) (PAIR 17380 0) (PAIR 17382 3850) (PAIR 53 3851) (PAIR 13735 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13737 0) (PAIR 17175 3856) (PAIR 53 3857) (PAIR 13738 0) (PAIR 17142 3859) (PAIR 17373 3860) (PAIR 53 3861) (PAIR 17026 0) (PAIR 17149 3863) (PAIR 2 3864) (PAIR 1 3865) (PAIR 53 3866) (PAIR 13739 0) (PAIR 17152 3868) (PAIR 53 3869) (PAIR 13740 0) (PAIR 17026 0) (PAIR 17149 3872) (PAIR 2 3873) (PAIR 1 3874) (PAIR 53 3875) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13742 3768) (PAIR 13743 3760) (PAIR 53 3910) (PAIR 13745 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13747 0) (PAIR 17175 3887) (PAIR 53 3888) (PAIR 13748 0) (PAIR 17142 3890) (PAIR 17373 3891) (PAIR 53 3892) (PAIR 13750 0) (PAIR 13751 3882) (PAIR 13753 0) (PAIR 13755 3896) (PAIR 17373 0) (PAIR 15917 3898) (PAIR 53 3899) (PAIR 17149 0) (PAIR 2 3901) (PAIR 1 3902) (PAIR 53 3903) (PAIR 13756 0) (PAIR 17152 3905) (PAIR 53 3906) (PAIR 13758 3897) (PAIR 17380 0) (PAIR 17382 3909) (PAIR 53 3910) (PAIR 13760 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13762 0) (PAIR 17175 3915) (PAIR 53 3916) (PAIR 13763 0) (PAIR 17142 3918) (PAIR 17373 3919) (PAIR 53 3920) (PAIR 17026 0) (PAIR 17149 3922) (PAIR 2 3923) (PAIR 1 3924) (PAIR 53 3925) (PAIR 13764 0) (PAIR 17152 3927) (PAIR 53 3928) (PAIR 17380 0) (PAIR 17382 3930) (PAIR 53 3931) (PAIR 13766 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13768 0) (PAIR 17175 3936) (PAIR 53 3937) (PAIR 13769 0) (PAIR 17142 3939) (PAIR 17373 3940) (PAIR 53 3941) (PAIR 17026 0) (PAIR 17149 3943) (PAIR 2 3944) (PAIR 1 3945) (PAIR 53 3946) (PAIR 13770 0) (PAIR 17152 3948) (PAIR 53 3949) (PAIR 13772 3908) (PAIR 13773 3895) (PAIR 17026 0) (PAIR 17149 3953) (PAIR 2 3954) (PAIR 1 3955) (PAIR 53 3956) (PAIR 13775 0) (PAIR 13776 3952) (PAIR 13778 0) (PAIR 13780 0) (PAIR 13782 0) (PAIR 13784 3961) (PAIR 13786 0) (PAIR 15917 0) (PAIR 53 3965) (PAIR 1 4211) (PAIR 53 3967) (PAIR 13787 0) (PAIR 53 3969) (PAIR 13789 3963) (PAIR 13835 0) (PAIR 17380 0) (PAIR 17382 3973) (PAIR 53 3974) (PAIR 13791 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13793 0) (PAIR 17175 3979) (PAIR 53 3980) (PAIR 13794 0) (PAIR 17142 3982) (PAIR 17373 3983) (PAIR 53 3984) (PAIR 17026 0) (PAIR 17149 3986) (PAIR 2 3987) (PAIR 1 3988) (PAIR 53 3989) (PAIR 13795 0) (PAIR 17152 3991) (PAIR 53 3992) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4326 0) (PAIR 4048 3998) (PAIR 73 3999) (PAIR 59 4000) (PAIR 60 4001) (PAIR 78 4002) (PAIR 13797 0) (PAIR 13835 0) (PAIR 17380 0) (PAIR 17382 4006) (PAIR 53 4007) (PAIR 13799 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13801 0) (PAIR 17175 4012) (PAIR 53 4013) (PAIR 13802 0) (PAIR 17142 4015) (PAIR 17373 4016) (PAIR 53 4017) (PAIR 17026 0) (PAIR 17149 4019) (PAIR 2 4020) (PAIR 1 4021) (PAIR 53 4022) (PAIR 13803 0) (PAIR 17152 4024) (PAIR 53 4025) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13805 3971) (PAIR 13806 3959) (PAIR 13808 0) (PAIR 13809 4032) (PAIR 13811 0) (PAIR 13812 4034) (PAIR 13814 0) (PAIR 13816 0) (PAIR 13818 0) (PAIR 13820 4038) (PAIR 13822 0) (PAIR 13824 4040) (PAIR 42 0) (PAIR 45 4043) (PAIR 47 4044) (PAIR 4045 0) (PAIR 46 4046) (PAIR 47 4047) (PAIR 17007 0) (PAIR 0 4049) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 4052) (PAIR 0 0) (PAIR 13825 0) (PAIR 0 4055) (PAIR 13826 0) (PAIR 0 4057) (PAIR 53 4058) (PAIR 13827 0) (PAIR 53 4060) (PAIR 17015 0) (PAIR 0 4062) (PAIR 53 4063) (PAIR 13828 0) (PAIR 2 4065) (PAIR 1 4066) (PAIR 53 4067) (PAIR 17380 0) (PAIR 17382 4069) (PAIR 53 4070) (PAIR 13830 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13832 0) (PAIR 17175 4075) (PAIR 53 4076) (PAIR 13833 0) (PAIR 17142 4078) (PAIR 17373 4079) (PAIR 53 4080) (PAIR 17026 0) (PAIR 17149 4082) (PAIR 2 4083) (PAIR 1 4084) (PAIR 53 4085) (PAIR 13834 0) (PAIR 17152 4087) (PAIR 53 4088) (PAIR 13835 0) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4326 0) (PAIR 73 4095) (PAIR 59 4096) (PAIR 60 4097) (PAIR 78 4098) (PAIR 13837 0) (PAIR 17007 0) (PAIR 0 4101) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 4104) (PAIR 0 0) (PAIR 13838 0) (PAIR 0 4107) (PAIR 13839 0) (PAIR 0 4109) (PAIR 53 4110) (PAIR 13840 0) (PAIR 53 4112) (PAIR 17015 0) (PAIR 0 4114) (PAIR 53 4115) (PAIR 13841 0) (PAIR 2 4117) (PAIR 1 4118) (PAIR 53 4119) (PAIR 17380 0) (PAIR 17382 4121) (PAIR 53 4122) (PAIR 13843 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13845 0) (PAIR 17175 4127) (PAIR 53 4128) (PAIR 13846 0) (PAIR 17142 4130) (PAIR 17373 4131) (PAIR 53 4132) (PAIR 17026 0) (PAIR 17149 4134) (PAIR 2 4135) (PAIR 1 4136) (PAIR 53 4137) (PAIR 13847 0) (PAIR 17152 4139) (PAIR 53 4140) (PAIR 13848 0) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13850 4042) (PAIR 13851 4036) (PAIR 53 4239) (PAIR 13853 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13855 0) (PAIR 17175 4153) (PAIR 53 4154) (PAIR 13856 0) (PAIR 17142 4156) (PAIR 17373 4157) (PAIR 53 4158) (PAIR 17026 0) (PAIR 17149 4160) (PAIR 2 4161) (PAIR 1 4162) (PAIR 53 4163) (PAIR 13857 0) (PAIR 17152 4165) (PAIR 53 4166) (PAIR 13859 0) (PAIR 13860 4148) (PAIR 13865 0) (PAIR 2 4170) (PAIR 1 4171) (PAIR 53 4172) (PAIR 15917 0) (PAIR 53 4174) (PAIR 1 0) (PAIR 53 4176) (PAIR 13861 0) (PAIR 53 4178) (PAIR 13862 0) (PAIR 13864 0) (PAIR 15761 0) (PAIR 53 4182) (PAIR 0 0) (PAIR 53 4184) (PAIR 13865 0) (PAIR 2 4186) (PAIR 1 4187) (PAIR 53 4188) (PAIR 13873 0) (PAIR 53 4190) (PAIR 13866 0) (PAIR 13868 4181) (PAIR 0 0) (PAIR 15757 4194) (PAIR 53 0) (PAIR 15760 4196) (PAIR 13869 0) (PAIR 53 4198) (PAIR 17385 0) (PAIR 13870 0) (PAIR 13871 0) (PAIR 0 4202) (PAIR 53 4203) (PAIR 13872 0) (PAIR 2 4205) (PAIR 1 4206) (PAIR 53 4207) (PAIR 15917 0) (PAIR 53 4209) (PAIR 2 0) (PAIR 1 4211) (PAIR 53 4212) (PAIR 13873 0) (PAIR 53 4214) (PAIR 13874 0) (PAIR 13876 4193) (PAIR 17007 0) (PAIR 0 4218) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 4221) (PAIR 0 0) (PAIR 13877 0) (PAIR 0 4224) (PAIR 13878 0) (PAIR 0 4226) (PAIR 53 4227) (PAIR 13879 0) (PAIR 53 4229) (PAIR 17015 0) (PAIR 0 4231) (PAIR 53 4232) (PAIR 13880 0) (PAIR 2 4234) (PAIR 1 4235) (PAIR 53 4236) (PAIR 17380 0) (PAIR 17382 4238) (PAIR 53 4239) (PAIR 13882 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13884 0) (PAIR 17175 4244) (PAIR 53 4245) (PAIR 13885 0) (PAIR 17142 4247) (PAIR 17373 4248) (PAIR 53 4249) (PAIR 17026 0) (PAIR 17149 4251) (PAIR 2 4252) (PAIR 1 4253) (PAIR 53 4254) (PAIR 13886 0) (PAIR 17152 4256) (PAIR 53 4257) (PAIR 13887 0) (PAIR 17007 0) (PAIR 0 4260) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 4263) (PAIR 0 0) (PAIR 13888 0) (PAIR 0 4266) (PAIR 13889 0) (PAIR 0 4268) (PAIR 53 4269) (PAIR 13890 0) (PAIR 53 4271) (PAIR 17015 0) (PAIR 0 4273) (PAIR 53 4274) (PAIR 13891 0) (PAIR 2 4276) (PAIR 1 4277) (PAIR 53 4278) (PAIR 17380 0) (PAIR 17382 4280) (PAIR 53 4281) (PAIR 13893 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13895 0) (PAIR 17175 4286) (PAIR 53 4287) (PAIR 13896 0) (PAIR 17142 4289) (PAIR 17373 4290) (PAIR 53 4291) (PAIR 17026 0) (PAIR 17149 4293) (PAIR 2 4294) (PAIR 1 4295) (PAIR 53 4296) (PAIR 13897 0) (PAIR 17152 4298) (PAIR 53 4299) (PAIR 13898 0) (PAIR 13900 4217) (PAIR 13901 4169) (PAIR 13903 0) (PAIR 13904 4303) (PAIR 42 0) (PAIR 44 4306) (PAIR 4307 0) (PAIR 45 0) (PAIR 44 4309) (PAIR 4310 4308) (PAIR 47 4311) (PAIR 4312 0) (PAIR 46 0) (PAIR 44 4314) (PAIR 4315 4313) (PAIR 47 4316) (PAIR 4317 0) (PAIR 42 0) (PAIR 45 4319) (PAIR 47 4320) (PAIR 4321 0) (PAIR 46 4322) (PAIR 47 4323) (PAIR 4324 4318) (PAIR 47 4325) (PAIR 73 0) (PAIR 59 4327) (PAIR 60 4328) (PAIR 78 4329) (PAIR 13906 0) (PAIR 13908 0) (PAIR 13909 4305) (PAIR 13911 0) (PAIR 13926 10932) (PAIR 1 10829) (PAIR 13912 0) (PAIR 53 4337) (PAIR 13914 0) (PAIR 13916 0) (PAIR 53 0) (PAIR 13926 4341) (PAIR 2 0) (PAIR 53 4343) (PAIR 1 4344) (PAIR 13917 0) (PAIR 53 4346) (PAIR 13919 4339) (PAIR 13921 0) (PAIR 17180 0) (PAIR 53 4350) (PAIR 13923 0) (PAIR 603 0) (PAIR 13925 0) (PAIR 13926 4351) (PAIR 17187 0) (PAIR 2 4356) (PAIR 53 4357) (PAIR 1 4358) (PAIR 13927 0) (PAIR 17190 4360) (PAIR 53 4361) (PAIR 13929 4348) (PAIR 36 0) (PAIR 55 4364) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 4412 0) (PAIR 73 4370) (PAIR 59 4371) (PAIR 60 4372) (PAIR 78 4373) (PAIR 13931 0) (PAIR 17380 0) (PAIR 17382 4376) (PAIR 53 4377) (PAIR 13933 0) (PAIR 37 0) (PAIR 603 0) (PAIR 13935 0) (PAIR 17175 4382) (PAIR 53 4383) (PAIR 13936 0) (PAIR 17178 4385) (PAIR 17180 4386) (PAIR 53 4387) (PAIR 17185 0) (PAIR 17187 4389) (PAIR 2 4390) (PAIR 53 4391) (PAIR 1 4392) (PAIR 13937 0) (PAIR 17190 4394) (PAIR 53 4395) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 13939 4363) (PAIR 13940 4333) (PAIR 13942 0) (PAIR 13943 4402) (PAIR 13945 0) (PAIR 13946 4404) (PAIR 13948 0) (PAIR 13950 0) (PAIR 13952 0) (PAIR 13954 4408) (PAIR 38 0) (PAIR 55 4411) (PAIR 11756 0) (PAIR 71 4413) (PAIR 73 4414) (PAIR 59 4415) (PAIR 60 4416) (PAIR 78 4417) (PAIR 13956 0) (PAIR 13958 4410) (PAIR 13959 4406) (PAIR 13960 0) (PAIR 13962 0) (PAIR 13983 0) (PAIR 17100 0) (PAIR 13963 0) (PAIR 13965 4423) (PAIR 13967 4427) (PAIR 13968 4421) (PAIR 13970 0) (PAIR 13971 4429) (PAIR 13973 0) (PAIR 13974 4431) (PAIR 6 0) (PAIR 55 4434) (PAIR 4435 0) (PAIR 61 4436) (PAIR 11789 0) (PAIR 13976 0) (PAIR 13978 0) (PAIR 13979 4433) (PAIR 17247 0) (PAIR 17251 4442) (PAIR 14109 4443) (PAIR 17252 4444) (PAIR 53 4445) (PAIR 13981 0) (PAIR 13982 4441) (PAIR 13983 0) (PAIR 13985 0) (PAIR 13987 4450) (PAIR 13988 4448) (PAIR 13990 0) (PAIR 13992 4453) (PAIR 13993 4452) (PAIR 13995 0) (PAIR 13996 4455) (PAIR 7 0) (PAIR 55 4458) (PAIR 4459 0) (PAIR 61 4460) (PAIR 11786 0) (PAIR 11789 4462) (PAIR 13998 0) (PAIR 14000 0) (PAIR 14001 4457) (PAIR 17252 4507) (PAIR 53 4467) (PAIR 14003 0) (PAIR 14004 4466) (PAIR 17252 4507) (PAIR 53 4471) (PAIR 14006 0) (PAIR 14007 4470) (PAIR 14009 0) (PAIR 14011 0) (PAIR 8 0) (PAIR 55 4477) (PAIR 4478 0) (PAIR 61 4479) (PAIR 4557 0) (PAIR 11786 4481) (PAIR 11789 4482) (PAIR 14013 0) (PAIR 14015 4476) (PAIR 14016 4474) (PAIR 17252 10616) (PAIR 53 4487) (PAIR 14018 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14019 0) (PAIR 17630 0) (PAIR 14021 0) (PAIR 17233 4494) (PAIR 17234 4495) (PAIR 53 4496) (PAIR 14022 0) (PAIR 14024 0) (PAIR 14025 4486) (PAIR 14027 0) (PAIR 14029 4501) (PAIR 14030 4500) (PAIR 14032 0) (PAIR 14034 4504) (PAIR 14035 4503) (PAIR 14109 0) (PAIR 17252 4507) (PAIR 53 4508) (PAIR 14037 0) (PAIR 14038 4506) (PAIR 14040 0) (PAIR 14042 0) (PAIR 14044 0) (PAIR 14046 4513) (PAIR 9 0) (PAIR 55 4516) (PAIR 4517 0) (PAIR 61 4518) (PAIR 4553 0) (PAIR 61 4520) (PAIR 4521 0) (PAIR 4557 4522) (PAIR 11786 4523) (PAIR 11789 4524) (PAIR 14048 0) (PAIR 14050 4515) (PAIR 14051 4511) (PAIR 14053 0) (PAIR 14055 0) (PAIR 17252 10616) (PAIR 53 4531) (PAIR 14057 0) (PAIR 14059 4530) (PAIR 14060 4528) (PAIR 14062 0) (PAIR 14064 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14065 0) (PAIR 17630 0) (PAIR 14067 0) (PAIR 17233 4542) (PAIR 17234 4543) (PAIR 53 4544) (PAIR 14069 4537) (PAIR 14070 4535) (PAIR 14072 0) (PAIR 14074 0) (PAIR 14076 0) (PAIR 14078 4549) (PAIR 39 0) (PAIR 55 4552) (PAIR 4553 0) (PAIR 61 4554) (PAIR 4808 0) (PAIR 61 4556) (PAIR 4557 0) (PAIR 10889 4558) (PAIR 11786 4559) (PAIR 11789 4560) (PAIR 14080 0) (PAIR 14082 4551) (PAIR 14083 4547) (PAIR 14085 0) (PAIR 14086 4564) (PAIR 1 0) (PAIR 14087 0) (PAIR 14089 0) (PAIR 14091 4569) (PAIR 14092 4566) (PAIR 14099 8381) (PAIR 1 4572) (PAIR 14093 0) (PAIR 14095 0) (PAIR 0 0) (PAIR 14099 0) (PAIR 1 4577) (PAIR 53 4578) (PAIR 14096 0) (PAIR 14098 4575) (PAIR 0 0) (PAIR 2 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14099 4583) (PAIR 1 4586) (PAIR 53 4587) (PAIR 14100 0) (PAIR 14102 4581) (PAIR 0 0) (PAIR 17479 0) (PAIR 0 4592) (PAIR 14136 0) (PAIR 53 4594) (PAIR 14103 0) (PAIR 0 4596) (PAIR 0 0) (PAIR 14104 0) (PAIR 53 4599) (PAIR 0 4600) (PAIR 53 0) (PAIR 14105 0) (PAIR 14142 0) (PAIR 0 4604) (PAIR 14106 0) (PAIR 0 4606) (PAIR 53 4607) (PAIR 14107 0) (PAIR 53 4609) (PAIR 14146 0) (PAIR 0 4611) (PAIR 53 4612) (PAIR 14108 0) (PAIR 2 4614) (PAIR 1 4615) (PAIR 53 4616) (PAIR 14109 0) (PAIR 53 4618) (PAIR 0 0) (PAIR 17479 0) (PAIR 0 4621) (PAIR 14136 0) (PAIR 53 4623) (PAIR 14110 0) (PAIR 0 4625) (PAIR 0 0) (PAIR 14111 0) (PAIR 53 4628) (PAIR 0 4629) (PAIR 53 0) (PAIR 14112 0) (PAIR 14142 0) (PAIR 0 4633) (PAIR 14113 0) (PAIR 0 4635) (PAIR 53 4636) (PAIR 14114 0) (PAIR 53 4638) (PAIR 14146 0) (PAIR 0 4640) (PAIR 53 4641) (PAIR 14115 0) (PAIR 2 4643) (PAIR 1 4644) (PAIR 53 4645) (PAIR 14116 0) (PAIR 53 4647) (PAIR 14118 4590) (PAIR 14119 4571) (PAIR 0 0) (PAIR 1 10630) (PAIR 14120 0) (PAIR 14122 0) (PAIR 14123 4650) (PAIR 39 0) (PAIR 55 4656) (PAIR 14124 0) (PAIR 14125 0) (PAIR 14126 4655) (PAIR 0 0) (PAIR 1 10630) (PAIR 14127 0) (PAIR 14129 0) (PAIR 14130 4660) (PAIR 14132 0) (PAIR 14133 4665) (PAIR 0 0) (PAIR 17479 0) (PAIR 0 4669) (PAIR 53 0) (PAIR 0 4671) (PAIR 14135 0) (PAIR 0 4673) (PAIR 14136 0) (PAIR 53 4675) (PAIR 14137 0) (PAIR 0 4677) (PAIR 0 0) (PAIR 14138 0) (PAIR 53 4680) (PAIR 0 4681) (PAIR 53 0) (PAIR 14139 0) (PAIR 0 0) (PAIR 53 0) (PAIR 14141 4685) (PAIR 14142 0) (PAIR 0 4688) (PAIR 14143 0) (PAIR 0 4690) (PAIR 53 4691) (PAIR 14144 0) (PAIR 53 4693) (PAIR 17385 10431) (PAIR 53 0) (PAIR 14145 0) (PAIR 0 10435) (PAIR 14146 0) (PAIR 0 4699) (PAIR 53 4700) (PAIR 14147 0) (PAIR 2 4702) (PAIR 1 4703) (PAIR 53 4704) (PAIR 14148 0) (PAIR 14150 0) (PAIR 14151 4667) (PAIR 33 0) (PAIR 55 4709) (PAIR 78 0) (PAIR 14153 0) (PAIR 14155 0) (PAIR 14156 4708) (PAIR 0 0) (PAIR 1 10630) (PAIR 14157 0) (PAIR 14159 0) (PAIR 14160 4714) (PAIR 0 0) (PAIR 1 10630) (PAIR 14161 0) (PAIR 14163 0) (PAIR 14164 4719) (PAIR 36 0) (PAIR 55 4725) (PAIR 56 0) (PAIR 78 4727) (PAIR 14166 0) (PAIR 14168 0) (PAIR 14169 4724) (PAIR 2 0) (PAIR 1 4732) (PAIR 14171 0) (PAIR 14172 4731) (PAIR 14174 0) (PAIR 14175 4735) (PAIR 16125 0) (PAIR 14177 0) (PAIR 14179 4739) (PAIR 16125 0) (PAIR 53 4741) (PAIR 14181 4740) (PAIR 17128 0) (PAIR 17130 4744) (PAIR 53 4745) (PAIR 14183 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14185 0) (PAIR 17139 4750) (PAIR 53 4751) (PAIR 14186 0) (PAIR 17142 4753) (PAIR 17373 4754) (PAIR 53 4755) (PAIR 17147 0) (PAIR 17149 4757) (PAIR 2 4758) (PAIR 1 4759) (PAIR 53 4760) (PAIR 14187 0) (PAIR 17152 4762) (PAIR 53 4763) (PAIR 17128 0) (PAIR 17130 4765) (PAIR 53 4766) (PAIR 14189 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14191 0) (PAIR 17139 4771) (PAIR 53 4772) (PAIR 14192 0) (PAIR 17142 4774) (PAIR 17373 4775) (PAIR 53 4776) (PAIR 17147 0) (PAIR 17149 4778) (PAIR 2 4779) (PAIR 1 4780) (PAIR 53 4781) (PAIR 14193 0) (PAIR 17152 4783) (PAIR 53 4784) (PAIR 14195 4743) (PAIR 14196 4737) (PAIR 0 0) (PAIR 1 10630) (PAIR 14197 0) (PAIR 14199 0) (PAIR 14200 4787) (PAIR 68 0) (PAIR 56 4793) (PAIR 78 4794) (PAIR 14202 0) (PAIR 14204 0) (PAIR 14205 4792) (PAIR 14207 0) (PAIR 14208 4798) (PAIR 14210 0) (PAIR 14212 0) (PAIR 14214 0) (PAIR 14216 4802) (PAIR 14218 0) (PAIR 14220 4804) (PAIR 38 0) (PAIR 55 4807) (PAIR 4808 0) (PAIR 61 4809) (PAIR 10899 0) (PAIR 11786 4811) (PAIR 11789 4812) (PAIR 11792 4813) (PAIR 11795 4814) (PAIR 14222 0) (PAIR 14224 4806) (PAIR 14225 4800) (PAIR 0 0) (PAIR 1 10630) (PAIR 14226 0) (PAIR 14228 0) (PAIR 14229 4818) (PAIR 14231 0) (PAIR 14232 4823) (PAIR 14234 0) (PAIR 14236 4826) (PAIR 14238 4827) (PAIR 14240 4828) (PAIR 14241 4825) (PAIR 14243 0) (PAIR 14245 4831) (PAIR 17252 8685) (PAIR 53 4833) (PAIR 14247 4832) (PAIR 14249 4835) (PAIR 14250 4830) (PAIR 14252 0) (PAIR 14253 4837) (PAIR 14255 0) (PAIR 14256 4839) (PAIR 14258 0) (PAIR 14260 0) (PAIR 14262 0) (PAIR 14264 4843) (PAIR 10 0) (PAIR 55 4846) (PAIR 4847 0) (PAIR 61 4848) (PAIR 4928 0) (PAIR 4931 4850) (PAIR 11009 4851) (PAIR 11880 4852) (PAIR 11883 4853) (PAIR 11889 4854) (PAIR 11895 4855) (PAIR 14266 0) (PAIR 14268 4845) (PAIR 14269 4841) (PAIR 14271 0) (PAIR 14272 4859) (PAIR 14273 0) (PAIR 14275 0) (PAIR 16155 0) (PAIR 53 4864) (PAIR 17621 0) (PAIR 14276 0) (PAIR 14278 4863) (PAIR 14280 4868) (PAIR 14281 4861) (PAIR 17247 8759) (PAIR 17251 4871) (PAIR 17252 4872) (PAIR 53 4873) (PAIR 14283 0) (PAIR 14284 4870) (PAIR 14286 0) (PAIR 14288 0) (PAIR 14290 0) (PAIR 14292 4878) (PAIR 14294 0) (PAIR 14296 4880) (PAIR 11 0) (PAIR 55 4883) (PAIR 4884 0) (PAIR 61 4885) (PAIR 4928 0) (PAIR 4931 4887) (PAIR 11009 4888) (PAIR 11880 4889) (PAIR 11883 4890) (PAIR 11889 4891) (PAIR 11892 4892) (PAIR 11895 4893) (PAIR 14298 0) (PAIR 14300 4882) (PAIR 14301 4876) (PAIR 14303 0) (PAIR 14304 4897) (PAIR 14306 0) (PAIR 14308 4900) (PAIR 14310 4901) (PAIR 14312 4902) (PAIR 14313 4899) (PAIR 17247 8759) (PAIR 17251 4905) (PAIR 16155 4906) (PAIR 53 4907) (PAIR 17621 0) (PAIR 14314 0) (PAIR 14316 0) (PAIR 14317 4904) (PAIR 14319 0) (PAIR 14321 0) (PAIR 14323 0) (PAIR 14343 0) (PAIR 53 4916) (PAIR 14325 4914) (PAIR 14327 0) (PAIR 14343 8685) (PAIR 53 4920) (PAIR 14329 4918) (PAIR 12 0) (PAIR 55 4923) (PAIR 4924 0) (PAIR 61 4925) (PAIR 43 0) (PAIR 61 4927) (PAIR 4928 0) (PAIR 48 0) (PAIR 61 4930) (PAIR 4931 4929) (PAIR 11009 4932) (PAIR 11880 4933) (PAIR 11883 4934) (PAIR 11889 4935) (PAIR 11892 4936) (PAIR 11895 4937) (PAIR 4966 4938) (PAIR 14331 0) (PAIR 14333 4922) (PAIR 14334 4912) (PAIR 14336 0) (PAIR 14337 4942) (PAIR 14339 0) (PAIR 14341 4945) (PAIR 14342 4944) (PAIR 17247 8759) (PAIR 17251 4948) (PAIR 53 0) (PAIR 53 0) (PAIR 14343 4949) (PAIR 53 4952) (PAIR 14345 0) (PAIR 14346 4947) (PAIR 43 0) (PAIR 61 4956) (PAIR 4988 0) (PAIR 11009 4958) (PAIR 11880 4959) (PAIR 11883 4960) (PAIR 11889 4961) (PAIR 11892 4962) (PAIR 11895 4963) (PAIR 81 0) (PAIR 61 4965) (PAIR 4966 4964) (PAIR 14348 0) (PAIR 14350 0) (PAIR 14351 4955) (PAIR 14353 0) (PAIR 14354 4970) (PAIR 14356 0) (PAIR 14358 4973) (PAIR 14359 4972) (PAIR 53 0) (PAIR 53 0) (PAIR 14360 0) (PAIR 17621 0) (PAIR 14361 0) (PAIR 14363 0) (PAIR 14364 4975) (PAIR 13 0) (PAIR 55 4983) (PAIR 4984 0) (PAIR 61 4985) (PAIR 48 0) (PAIR 61 4987) (PAIR 4988 0) (PAIR 11009 4989) (PAIR 11880 4990) (PAIR 11883 4991) (PAIR 11889 4992) (PAIR 11892 4993) (PAIR 11895 4994) (PAIR 8781 4995) (PAIR 14366 0) (PAIR 14368 0) (PAIR 14369 4982) (PAIR 14371 0) (PAIR 14372 4999) (PAIR 14374 0) (PAIR 14376 5002) (PAIR 14377 5001) (PAIR 14378 0) (PAIR 14380 0) (PAIR 14382 5006) (PAIR 14383 5004) (PAIR 53 0) (PAIR 53 0) (PAIR 14384 0) (PAIR 14386 0) (PAIR 14387 5008) (PAIR 16 0) (PAIR 55 5014) (PAIR 14388 0) (PAIR 14389 0) (PAIR 14390 5013) (PAIR 53 0) (PAIR 53 0) (PAIR 14391 0) (PAIR 14393 0) (PAIR 14394 5018) (PAIR 14396 0) (PAIR 14397 5023) (PAIR 53 0) (PAIR 53 0) (PAIR 14398 0) (PAIR 14400 0) (PAIR 14401 5025) (PAIR 17 0) (PAIR 55 5031) (PAIR 78 0) (PAIR 14403 0) (PAIR 14405 0) (PAIR 14406 5030) (PAIR 53 0) (PAIR 53 0) (PAIR 14407 0) (PAIR 14409 0) (PAIR 14410 5036) (PAIR 14411 0) (PAIR 14413 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14414 0) (PAIR 14416 5043) (PAIR 16342 0) (PAIR 15916 5048) (PAIR 15917 5049) (PAIR 53 5050) (PAIR 17247 5051) (PAIR 17251 5052) (PAIR 17446 5053) (PAIR 14418 5047) (PAIR 14431 0) (PAIR 14434 5056) (PAIR 37 0) (PAIR 603 0) (PAIR 14420 5057) (PAIR 0 0) (PAIR 53 5061) (PAIR 2 0) (PAIR 1 5063) (PAIR 53 5064) (PAIR 14421 0) (PAIR 17473 5066) (PAIR 17474 0) (PAIR 17476 0) (PAIR 14423 5060) (PAIR 0 0) (PAIR 53 5071) (PAIR 2 0) (PAIR 1 5073) (PAIR 53 5074) (PAIR 14424 5070) (PAIR 0 0) (PAIR 53 5077) (PAIR 2 0) (PAIR 1 5079) (PAIR 53 5080) (PAIR 14425 0) (PAIR 14445 5082) (PAIR 14450 5083) (PAIR 14467 5084) (PAIR 14468 0) (PAIR 14470 0) (PAIR 14427 0) (PAIR 14473 5088) (PAIR 14502 5089) (PAIR 14428 5076) (PAIR 14429 5091) (PAIR 2 5092) (PAIR 1 5093) (PAIR 53 5094) (PAIR 14431 0) (PAIR 14434 5096) (PAIR 37 0) (PAIR 603 0) (PAIR 14437 5097) (PAIR 0 0) (PAIR 53 5101) (PAIR 2 0) (PAIR 1 5103) (PAIR 53 5104) (PAIR 14438 0) (PAIR 17473 5106) (PAIR 17474 0) (PAIR 17476 0) (PAIR 14440 5100) (PAIR 0 0) (PAIR 53 5111) (PAIR 2 0) (PAIR 1 5113) (PAIR 53 5114) (PAIR 14441 5110) (PAIR 0 0) (PAIR 53 5117) (PAIR 2 0) (PAIR 1 5119) (PAIR 53 5120) (PAIR 14442 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14443 0) (PAIR 14445 5122) (PAIR 53 0) (PAIR 37 0) (PAIR 14446 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14448 0) (PAIR 14450 5126) (PAIR 53 0) (PAIR 53 0) (PAIR 14451 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14452 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14454 0) (PAIR 14456 0) (PAIR 14457 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14458 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14459 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14461 0) (PAIR 14463 5152) (PAIR 53 0) (PAIR 53 0) (PAIR 14464 5166) (PAIR 14466 0) (PAIR 14467 5137) (PAIR 53 0) (PAIR 37 0) (PAIR 14468 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14470 0) (PAIR 14472 0) (PAIR 0 0) (PAIR 53 5183) (PAIR 2 0) (PAIR 1 5185) (PAIR 53 5186) (PAIR 14473 5182) (PAIR 53 0) (PAIR 53 0) (PAIR 14474 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14475 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14477 0) (PAIR 14479 0) (PAIR 14480 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14481 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14482 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14484 0) (PAIR 14486 5203) (PAIR 53 0) (PAIR 53 0) (PAIR 14487 5217) (PAIR 14489 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 5223) (PAIR 14490 0) (PAIR 53 0) (PAIR 53 0) (PAIR 14491 0) (PAIR 14493 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 5231) (PAIR 14494 0) (PAIR 14495 5225) (PAIR 53 0) (PAIR 53 0) (PAIR 14496 0) (PAIR 53 0) (PAIR 37 0) (PAIR 14497 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 14499 0) (PAIR 14501 5234) (PAIR 14502 5188) (PAIR 14503 5116) (PAIR 14505 5250) (PAIR 2 5251) (PAIR 1 5252) (PAIR 53 5253) (PAIR 14507 5055) (PAIR 14508 5041) (PAIR 14510 0) (PAIR 14511 5256) (PAIR 14513 0) (PAIR 14515 0) (PAIR 18 0) (PAIR 55 5261) (PAIR 5840 0) (PAIR 78 5263) (PAIR 14517 0) (PAIR 14519 5260) (PAIR 14520 5258) (PAIR 53 0) (PAIR 53 0) (PAIR 14521 0) (PAIR 14523 0) (PAIR 14524 5267) (PAIR 16350 0) (PAIR 17373 5273) (PAIR 37 0) (PAIR 603 0) (PAIR 14526 5274) (PAIR 14528 5277) (PAIR 16361 5278) (PAIR 17380 0) (PAIR 17382 5280) (PAIR 53 5281) (PAIR 14530 0) (PAIR 14531 5279) (PAIR 16362 5284) (PAIR 53 5285) (PAIR 17469 0) (PAIR 17373 5287) (PAIR 37 0) (PAIR 603 0) (PAIR 14533 5288) (PAIR 0 0) (PAIR 53 5292) (PAIR 2 0) (PAIR 1 5294) (PAIR 53 5295) (PAIR 14534 0) (PAIR 17473 5297) (PAIR 17474 0) (PAIR 17476 0) (PAIR 14536 5291) (PAIR 17380 0) (PAIR 17382 5302) (PAIR 53 5303) (PAIR 14538 0) (PAIR 14539 5301) (PAIR 17493 0) (PAIR 17499 5307) (PAIR 17500 5308) (PAIR 14541 0) (PAIR 0 0) (PAIR 53 5311) (PAIR 2 0) (PAIR 1 5313) (PAIR 53 5314) (PAIR 14542 0) (PAIR 17506 5316) (PAIR 17508 0) (PAIR 17510 0) (PAIR 14544 5317) (PAIR 17520 0) (PAIR 17526 5321) (PAIR 17527 5322) (PAIR 14546 0) (PAIR 14547 5320) (PAIR 53 0) (PAIR 37 0) (PAIR 14548 0) (PAIR 17534 0) (PAIR 14550 0) (PAIR 0 0) (PAIR 53 5331) (PAIR 2 0) (PAIR 1 5333) (PAIR 53 5334) (PAIR 14551 5330) (PAIR 17545 0) (PAIR 17551 5337) (PAIR 17552 5338) (PAIR 14553 0) (PAIR 17555 0) (PAIR 17560 5341) (PAIR 17566 5342) (PAIR 14554 5336) (PAIR 14555 5306) (PAIR 0 0) (PAIR 53 5346) (PAIR 2 0) (PAIR 1 5348) (PAIR 53 5349) (PAIR 14556 5345) (PAIR 53 5351) (PAIR 14557 0) (PAIR 17026 0) (PAIR 17149 5354) (PAIR 2 5355) (PAIR 1 5356) (PAIR 53 5357) (PAIR 14558 0) (PAIR 53 5359) (PAIR 53 0) (PAIR 14559 0) (PAIR 14561 0) (PAIR 14562 5272) (PAIR 14564 0) (PAIR 14566 0) (PAIR 19 0) (PAIR 55 5367) (PAIR 5840 0) (PAIR 78 5369) (PAIR 80 5370) (PAIR 14568 0) (PAIR 14570 5366) (PAIR 14571 5364) (PAIR 53 0) (PAIR 53 0) (PAIR 14572 0) (PAIR 14574 0) (PAIR 14575 5374) (PAIR 53 0) (PAIR 53 0) (PAIR 14576 0) (PAIR 14578 0) (PAIR 14579 5379) (PAIR 14581 0) (PAIR 14583 0) (PAIR 25 0) (PAIR 55 5387) (PAIR 5454 0) (PAIR 5840 5389) (PAIR 78 5390) (PAIR 80 5391) (PAIR 14585 0) (PAIR 14587 5386) (PAIR 14588 5384) (PAIR 53 0) (PAIR 14590 0) (PAIR 14591 5395) (PAIR 53 0) (PAIR 53 0) (PAIR 14592 0) (PAIR 14594 0) (PAIR 14595 5398) (PAIR 14597 0) (PAIR 37 0) (PAIR 14599 0) (PAIR 14601 0) (PAIR 14603 5406) (PAIR 26 0) (PAIR 55 5409) (PAIR 5454 0) (PAIR 5840 5411) (PAIR 78 5412) (PAIR 80 5413) (PAIR 83 5414) (PAIR 14605 0) (PAIR 14607 5408) (PAIR 14608 5403) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14610 5419) (PAIR 17380 0) (PAIR 17382 5423) (PAIR 53 5424) (PAIR 14612 0) (PAIR 14613 5422) (PAIR 53 5427) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14615 5429) (PAIR 17380 0) (PAIR 17382 5433) (PAIR 53 5434) (PAIR 14617 0) (PAIR 14618 5432) (PAIR 53 5437) (PAIR 14619 0) (PAIR 14621 0) (PAIR 14622 5418) (PAIR 53 0) (PAIR 53 0) (PAIR 14623 0) (PAIR 14625 0) (PAIR 14626 5441) (PAIR 14628 0) (PAIR 14630 0) (PAIR 14632 0) (PAIR 14634 5448) (PAIR 14636 0) (PAIR 14638 5450) (PAIR 20 0) (PAIR 55 5453) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5456) (PAIR 53 5457) (PAIR 14640 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14642 0) (PAIR 17175 5462) (PAIR 53 5463) (PAIR 14643 0) (PAIR 17142 5465) (PAIR 17373 5466) (PAIR 53 5467) (PAIR 600 0) (PAIR 602 0) (PAIR 605 0) (PAIR 5840 0) (PAIR 45 5472) (PAIR 78 5473) (PAIR 80 5474) (PAIR 83 5475) (PAIR 14645 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5479) (PAIR 53 5480) (PAIR 14647 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14649 0) (PAIR 17175 5485) (PAIR 53 5486) (PAIR 14650 0) (PAIR 17142 5488) (PAIR 17373 5489) (PAIR 53 5490) (PAIR 600 0) (PAIR 602 0) (PAIR 605 0) (PAIR 14652 5452) (PAIR 14653 5446) (PAIR 53 0) (PAIR 14655 0) (PAIR 14656 5496) (PAIR 14658 0) (PAIR 14660 0) (PAIR 14662 0) (PAIR 14664 5501) (PAIR 14666 0) (PAIR 14668 5503) (PAIR 34 0) (PAIR 55 5506) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5509) (PAIR 53 5510) (PAIR 14670 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14672 0) (PAIR 17175 5515) (PAIR 53 5516) (PAIR 14673 0) (PAIR 17142 5518) (PAIR 17373 5519) (PAIR 53 5520) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 5840 0) (PAIR 45 5526) (PAIR 78 5527) (PAIR 80 5528) (PAIR 81 5529) (PAIR 83 5530) (PAIR 14675 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5534) (PAIR 53 5535) (PAIR 14677 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14679 0) (PAIR 17175 5540) (PAIR 53 5541) (PAIR 14680 0) (PAIR 17142 5543) (PAIR 17373 5544) (PAIR 53 5545) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14682 5505) (PAIR 14683 5499) (PAIR 53 0) (PAIR 53 0) (PAIR 14684 0) (PAIR 14686 0) (PAIR 14687 5552) (PAIR 14689 0) (PAIR 14691 0) (PAIR 14693 0) (PAIR 14695 5559) (PAIR 14697 0) (PAIR 14699 5561) (PAIR 21 0) (PAIR 55 5564) (PAIR 53 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5568) (PAIR 53 5569) (PAIR 14701 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14703 0) (PAIR 17175 5574) (PAIR 53 5575) (PAIR 14704 0) (PAIR 17142 5577) (PAIR 17373 5578) (PAIR 53 5579) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 5687 0) (PAIR 5840 5585) (PAIR 45 5586) (PAIR 78 5587) (PAIR 80 5588) (PAIR 81 5589) (PAIR 83 5590) (PAIR 14706 0) (PAIR 53 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5595) (PAIR 53 5596) (PAIR 14708 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14710 0) (PAIR 17175 5601) (PAIR 53 5602) (PAIR 14711 0) (PAIR 17142 5604) (PAIR 17373 5605) (PAIR 53 5606) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14713 5563) (PAIR 14714 5557) (PAIR 53 0) (PAIR 53 0) (PAIR 14715 0) (PAIR 14717 0) (PAIR 14718 5613) (PAIR 14720 0) (PAIR 14722 0) (PAIR 14724 0) (PAIR 14726 5620) (PAIR 14728 0) (PAIR 14730 5622) (PAIR 29 0) (PAIR 55 5625) (PAIR 53 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5629) (PAIR 53 5630) (PAIR 14732 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14734 0) (PAIR 17175 5635) (PAIR 53 5636) (PAIR 14735 0) (PAIR 17142 5638) (PAIR 17373 5639) (PAIR 53 5640) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 5687 0) (PAIR 5840 5646) (PAIR 45 5647) (PAIR 78 5648) (PAIR 80 5649) (PAIR 81 5650) (PAIR 83 5651) (PAIR 14737 0) (PAIR 53 0) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5656) (PAIR 53 5657) (PAIR 14739 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14741 0) (PAIR 17175 5662) (PAIR 53 5663) (PAIR 14742 0) (PAIR 17142 5665) (PAIR 17373 5666) (PAIR 53 5667) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14744 5624) (PAIR 14745 5618) (PAIR 53 0) (PAIR 53 0) (PAIR 14746 0) (PAIR 14748 0) (PAIR 14749 5674) (PAIR 14751 0) (PAIR 14753 0) (PAIR 14755 0) (PAIR 14757 5681) (PAIR 14759 0) (PAIR 14761 5683) (PAIR 30 0) (PAIR 55 5686) (PAIR 16736 0) (PAIR 53 5688) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5691) (PAIR 53 5692) (PAIR 14763 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14765 0) (PAIR 17175 5697) (PAIR 53 5698) (PAIR 14766 0) (PAIR 17142 5700) (PAIR 17373 5701) (PAIR 53 5702) (PAIR 17026 0) (PAIR 17149 5704) (PAIR 2 5705) (PAIR 1 5706) (PAIR 53 5707) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6473 0) (PAIR 5840 5713) (PAIR 45 5714) (PAIR 46 5715) (PAIR 78 5716) (PAIR 80 5717) (PAIR 81 5718) (PAIR 83 5719) (PAIR 14768 0) (PAIR 16736 0) (PAIR 53 5722) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5725) (PAIR 53 5726) (PAIR 14770 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14772 0) (PAIR 17175 5731) (PAIR 53 5732) (PAIR 14773 0) (PAIR 17142 5734) (PAIR 17373 5735) (PAIR 53 5736) (PAIR 17026 0) (PAIR 17149 5738) (PAIR 2 5739) (PAIR 1 5740) (PAIR 53 5741) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14775 5685) (PAIR 14776 5679) (PAIR 53 0) (PAIR 53 0) (PAIR 14777 0) (PAIR 14779 0) (PAIR 14780 5748) (PAIR 14782 0) (PAIR 14784 0) (PAIR 14786 0) (PAIR 14788 5755) (PAIR 14790 0) (PAIR 40 0) (PAIR 14792 5757) (PAIR 31 0) (PAIR 55 5761) (PAIR 16736 0) (PAIR 53 5763) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5766) (PAIR 53 5767) (PAIR 14794 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14796 0) (PAIR 17175 5772) (PAIR 53 5773) (PAIR 14797 0) (PAIR 17142 5775) (PAIR 17373 5776) (PAIR 53 5777) (PAIR 17026 0) (PAIR 17149 5779) (PAIR 2 5780) (PAIR 1 5781) (PAIR 53 5782) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 6473 0) (PAIR 5840 5787) (PAIR 45 5788) (PAIR 46 5789) (PAIR 78 5790) (PAIR 80 5791) (PAIR 81 5792) (PAIR 83 5793) (PAIR 14799 0) (PAIR 16736 0) (PAIR 53 5796) (PAIR 53 0) (PAIR 17380 0) (PAIR 17382 5799) (PAIR 53 5800) (PAIR 14801 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14803 0) (PAIR 17175 5805) (PAIR 53 5806) (PAIR 14804 0) (PAIR 17142 5808) (PAIR 17373 5809) (PAIR 53 5810) (PAIR 17026 0) (PAIR 17149 5812) (PAIR 2 5813) (PAIR 1 5814) (PAIR 53 5815) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14806 5760) (PAIR 14807 5753) (PAIR 53 0) (PAIR 53 0) (PAIR 14808 0) (PAIR 14810 0) (PAIR 14811 5822) (PAIR 14813 0) (PAIR 14814 5827) (PAIR 53 0) (PAIR 14816 0) (PAIR 14817 5829) (PAIR 14819 0) (PAIR 14821 0) (PAIR 14823 0) (PAIR 14825 5834) (PAIR 14827 0) (PAIR 14829 5836) (PAIR 22 0) (PAIR 55 5839) (PAIR 16736 0) (PAIR 53 5841) (PAIR 17026 0) (PAIR 17149 5843) (PAIR 2 5844) (PAIR 1 5845) (PAIR 53 5846) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6473 0) (PAIR 6476 5852) (PAIR 45 5853) (PAIR 46 5854) (PAIR 78 5855) (PAIR 80 5856) (PAIR 81 5857) (PAIR 83 5858) (PAIR 14831 0) (PAIR 16736 0) (PAIR 53 5861) (PAIR 16781 0) (PAIR 0 5863) (PAIR 53 5864) (PAIR 17380 0) (PAIR 17382 5866) (PAIR 53 5867) (PAIR 14833 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14835 0) (PAIR 17175 5872) (PAIR 53 5873) (PAIR 14836 0) (PAIR 17142 5875) (PAIR 17373 5876) (PAIR 53 5877) (PAIR 17026 0) (PAIR 17149 5879) (PAIR 2 5880) (PAIR 1 5881) (PAIR 53 5882) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14838 5838) (PAIR 14839 5832) (PAIR 53 0) (PAIR 53 0) (PAIR 14840 0) (PAIR 14842 0) (PAIR 14843 5889) (PAIR 14845 0) (PAIR 14847 0) (PAIR 14849 0) (PAIR 14851 5896) (PAIR 14853 0) (PAIR 14855 5898) (PAIR 23 0) (PAIR 55 5901) (PAIR 16736 0) (PAIR 53 5903) (PAIR 16781 0) (PAIR 0 5905) (PAIR 53 5906) (PAIR 17380 0) (PAIR 17382 5908) (PAIR 53 5909) (PAIR 14857 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14859 0) (PAIR 17175 5914) (PAIR 53 5915) (PAIR 14860 0) (PAIR 17142 5917) (PAIR 17373 5918) (PAIR 53 5919) (PAIR 17026 0) (PAIR 17149 5921) (PAIR 2 5922) (PAIR 1 5923) (PAIR 53 5924) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6473 0) (PAIR 6476 5930) (PAIR 45 5931) (PAIR 46 5932) (PAIR 78 5933) (PAIR 80 5934) (PAIR 81 5935) (PAIR 83 5936) (PAIR 14862 0) (PAIR 16736 0) (PAIR 53 5939) (PAIR 16781 0) (PAIR 0 5941) (PAIR 53 5942) (PAIR 17380 0) (PAIR 17382 5944) (PAIR 53 5945) (PAIR 14864 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14866 0) (PAIR 17175 5950) (PAIR 53 5951) (PAIR 14867 0) (PAIR 17142 5953) (PAIR 17373 5954) (PAIR 53 5955) (PAIR 17026 0) (PAIR 17149 5957) (PAIR 2 5958) (PAIR 1 5959) (PAIR 53 5960) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14869 5900) (PAIR 14870 5894) (PAIR 53 0) (PAIR 53 0) (PAIR 14871 0) (PAIR 14873 0) (PAIR 14874 5967) (PAIR 14876 0) (PAIR 14878 0) (PAIR 14880 0) (PAIR 14882 5974) (PAIR 14884 0) (PAIR 14886 5976) (PAIR 16781 0) (PAIR 0 5979) (PAIR 53 5980) (PAIR 17380 0) (PAIR 17382 5982) (PAIR 53 5983) (PAIR 14888 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14890 0) (PAIR 17175 5988) (PAIR 53 5989) (PAIR 14891 0) (PAIR 17142 5991) (PAIR 17373 5992) (PAIR 53 5993) (PAIR 17026 0) (PAIR 17149 5995) (PAIR 2 5996) (PAIR 1 5997) (PAIR 53 5998) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6476 0) (PAIR 45 6004) (PAIR 46 6005) (PAIR 78 6006) (PAIR 80 6007) (PAIR 81 6008) (PAIR 83 6009) (PAIR 14893 0) (PAIR 16781 0) (PAIR 0 6012) (PAIR 53 6013) (PAIR 17380 0) (PAIR 17382 6015) (PAIR 53 6016) (PAIR 14895 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14897 0) (PAIR 17175 6021) (PAIR 53 6022) (PAIR 14898 0) (PAIR 17142 6024) (PAIR 17373 6025) (PAIR 53 6026) (PAIR 17026 0) (PAIR 17149 6028) (PAIR 2 6029) (PAIR 1 6030) (PAIR 53 6031) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14900 5978) (PAIR 14901 5972) (PAIR 53 0) (PAIR 53 0) (PAIR 14902 0) (PAIR 14904 0) (PAIR 14905 6038) (PAIR 14907 0) (PAIR 14909 0) (PAIR 14911 0) (PAIR 14913 6045) (PAIR 14915 0) (PAIR 53 0) (PAIR 28 0) (PAIR 14916 0) (PAIR 14918 6047) (PAIR 16805 0) (PAIR 2 6053) (PAIR 1 6054) (PAIR 53 6055) (PAIR 17380 0) (PAIR 17382 6057) (PAIR 53 6058) (PAIR 14920 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14922 0) (PAIR 17175 6063) (PAIR 53 6064) (PAIR 14923 0) (PAIR 17142 6066) (PAIR 17373 6067) (PAIR 53 6068) (PAIR 17026 0) (PAIR 17149 6070) (PAIR 2 6071) (PAIR 1 6072) (PAIR 53 6073) (PAIR 594 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6137 0) (PAIR 45 6080) (PAIR 46 6081) (PAIR 59 6082) (PAIR 78 6083) (PAIR 80 6084) (PAIR 81 6085) (PAIR 83 6086) (PAIR 14925 0) (PAIR 16805 0) (PAIR 2 6089) (PAIR 1 6090) (PAIR 53 6091) (PAIR 17380 0) (PAIR 17382 6093) (PAIR 53 6094) (PAIR 14927 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14929 0) (PAIR 17175 6099) (PAIR 53 6100) (PAIR 14930 0) (PAIR 17142 6102) (PAIR 17373 6103) (PAIR 53 6104) (PAIR 17026 0) (PAIR 17149 6106) (PAIR 2 6107) (PAIR 1 6108) (PAIR 53 6109) (PAIR 594 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14932 6052) (PAIR 14933 6043) (PAIR 53 0) (PAIR 53 0) (PAIR 14934 0) (PAIR 14936 0) (PAIR 14937 6117) (PAIR 14939 0) (PAIR 14941 0) (PAIR 14943 0) (PAIR 14945 6124) (PAIR 14947 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14949 6126) (PAIR 6473 0) (PAIR 6476 6135) (PAIR 47 6136) (PAIR 17380 0) (PAIR 17382 6138) (PAIR 53 6139) (PAIR 14951 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14953 0) (PAIR 17175 6144) (PAIR 53 6145) (PAIR 14954 0) (PAIR 17142 6147) (PAIR 17373 6148) (PAIR 53 6149) (PAIR 17026 0) (PAIR 17149 6151) (PAIR 2 6152) (PAIR 1 6153) (PAIR 53 6154) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 45 0) (PAIR 46 6162) (PAIR 59 6163) (PAIR 60 6164) (PAIR 78 6165) (PAIR 80 6166) (PAIR 81 6167) (PAIR 83 6168) (PAIR 14956 0) (PAIR 17380 0) (PAIR 17382 6171) (PAIR 53 6172) (PAIR 14958 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14960 0) (PAIR 17175 6177) (PAIR 53 6178) (PAIR 14961 0) (PAIR 17142 6180) (PAIR 17373 6181) (PAIR 53 6182) (PAIR 17026 0) (PAIR 17149 6184) (PAIR 2 6185) (PAIR 1 6186) (PAIR 53 6187) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14963 6134) (PAIR 14964 6122) (PAIR 53 0) (PAIR 53 0) (PAIR 14965 0) (PAIR 14967 0) (PAIR 14968 6196) (PAIR 14970 0) (PAIR 14972 0) (PAIR 14974 0) (PAIR 14976 6203) (PAIR 14978 0) (PAIR 14980 6205) (PAIR 17026 0) (PAIR 17149 6208) (PAIR 2 6209) (PAIR 1 6210) (PAIR 53 6211) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6484 0) (PAIR 46 6218) (PAIR 59 6219) (PAIR 60 6220) (PAIR 78 6221) (PAIR 80 6222) (PAIR 81 6223) (PAIR 83 6224) (PAIR 14982 0) (PAIR 17007 0) (PAIR 0 6227) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 6230) (PAIR 0 0) (PAIR 14983 0) (PAIR 0 6233) (PAIR 14984 0) (PAIR 0 6235) (PAIR 53 6236) (PAIR 14985 0) (PAIR 53 6238) (PAIR 17015 0) (PAIR 0 6240) (PAIR 53 6241) (PAIR 14986 0) (PAIR 2 6243) (PAIR 1 6244) (PAIR 53 6245) (PAIR 17380 0) (PAIR 17382 6247) (PAIR 53 6248) (PAIR 14988 0) (PAIR 37 0) (PAIR 603 0) (PAIR 14990 0) (PAIR 17175 6253) (PAIR 53 6254) (PAIR 14991 0) (PAIR 17142 6256) (PAIR 17373 6257) (PAIR 53 6258) (PAIR 17026 0) (PAIR 17149 6260) (PAIR 2 6261) (PAIR 1 6262) (PAIR 53 6263) (PAIR 14992 0) (PAIR 17152 6265) (PAIR 53 6266) (PAIR 14993 0) (PAIR 17026 0) (PAIR 17149 6269) (PAIR 2 6270) (PAIR 1 6271) (PAIR 53 6272) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 14995 6207) (PAIR 14996 6201) (PAIR 53 0) (PAIR 53 0) (PAIR 14997 0) (PAIR 14999 0) (PAIR 15000 6281) (PAIR 15002 0) (PAIR 15004 0) (PAIR 15006 0) (PAIR 15008 6288) (PAIR 15010 0) (PAIR 15012 6290) (PAIR 15054 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6484 0) (PAIR 6361 6299) (PAIR 59 6300) (PAIR 60 6301) (PAIR 78 6302) (PAIR 80 6303) (PAIR 81 6304) (PAIR 83 6305) (PAIR 15014 0) (PAIR 15054 0) (PAIR 17380 0) (PAIR 17382 6309) (PAIR 53 6310) (PAIR 15016 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15018 0) (PAIR 17175 6315) (PAIR 53 6316) (PAIR 15019 0) (PAIR 17142 6318) (PAIR 17373 6319) (PAIR 53 6320) (PAIR 17026 0) (PAIR 17149 6322) (PAIR 2 6323) (PAIR 1 6324) (PAIR 53 6325) (PAIR 15020 0) (PAIR 17152 6327) (PAIR 53 6328) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 15022 6292) (PAIR 15023 6286) (PAIR 53 0) (PAIR 53 0) (PAIR 15024 0) (PAIR 15026 0) (PAIR 15027 6337) (PAIR 15029 0) (PAIR 15031 0) (PAIR 15033 0) (PAIR 15039 0) (PAIR 16979 0) (PAIR 15034 0) (PAIR 15036 6344) (PAIR 15038 0) (PAIR 53 0) (PAIR 28 0) (PAIR 15039 0) (PAIR 53 0) (PAIR 24 0) (PAIR 15040 0) (PAIR 15041 0) (PAIR 15043 6349) (PAIR 45 0) (PAIR 46 6359) (PAIR 47 6360) (PAIR 17007 0) (PAIR 0 6362) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 6365) (PAIR 0 0) (PAIR 15044 0) (PAIR 0 6368) (PAIR 15045 0) (PAIR 0 6370) (PAIR 53 6371) (PAIR 15046 0) (PAIR 53 6373) (PAIR 17015 0) (PAIR 0 6375) (PAIR 53 6376) (PAIR 15047 0) (PAIR 2 6378) (PAIR 1 6379) (PAIR 53 6380) (PAIR 17380 0) (PAIR 17382 6382) (PAIR 53 6383) (PAIR 15049 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15051 0) (PAIR 17175 6388) (PAIR 53 6389) (PAIR 15052 0) (PAIR 17142 6391) (PAIR 17373 6392) (PAIR 53 6393) (PAIR 17026 0) (PAIR 17149 6395) (PAIR 2 6396) (PAIR 1 6397) (PAIR 53 6398) (PAIR 15053 0) (PAIR 17152 6400) (PAIR 53 6401) (PAIR 15054 0) (PAIR 594 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6484 0) (PAIR 59 6409) (PAIR 60 6410) (PAIR 78 6411) (PAIR 80 6412) (PAIR 81 6413) (PAIR 83 6414) (PAIR 15056 0) (PAIR 17007 0) (PAIR 0 6417) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 6420) (PAIR 0 0) (PAIR 15057 0) (PAIR 0 6423) (PAIR 15058 0) (PAIR 0 6425) (PAIR 53 6426) (PAIR 15059 0) (PAIR 53 6428) (PAIR 17015 0) (PAIR 0 6430) (PAIR 53 6431) (PAIR 15060 0) (PAIR 2 6433) (PAIR 1 6434) (PAIR 53 6435) (PAIR 17380 0) (PAIR 17382 6437) (PAIR 53 6438) (PAIR 15062 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15064 0) (PAIR 17175 6443) (PAIR 53 6444) (PAIR 15065 0) (PAIR 17142 6446) (PAIR 17373 6447) (PAIR 53 6448) (PAIR 17026 0) (PAIR 17149 6450) (PAIR 2 6451) (PAIR 1 6452) (PAIR 53 6453) (PAIR 15066 0) (PAIR 17152 6455) (PAIR 53 6456) (PAIR 15067 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 15069 6358) (PAIR 15070 6342) (PAIR 53 0) (PAIR 53 0) (PAIR 15071 0) (PAIR 15073 0) (PAIR 15074 6466) (PAIR 45 0) (PAIR 44 6472) (PAIR 6473 0) (PAIR 46 0) (PAIR 44 6475) (PAIR 6476 6474) (PAIR 47 6477) (PAIR 6478 0) (PAIR 45 0) (PAIR 46 6480) (PAIR 47 6481) (PAIR 6482 6479) (PAIR 47 6483) (PAIR 59 0) (PAIR 60 6485) (PAIR 78 6486) (PAIR 80 6487) (PAIR 81 6488) (PAIR 83 6489) (PAIR 15076 0) (PAIR 15078 0) (PAIR 15079 6471) (PAIR 53 0) (PAIR 53 0) (PAIR 15080 0) (PAIR 15082 0) (PAIR 15083 6493) (PAIR 15085 0) (PAIR 15087 0) (PAIR 15089 0) (PAIR 53 0) (PAIR 24 0) (PAIR 15090 0) (PAIR 15092 6500) (PAIR 15094 0) (PAIR 53 0) (PAIR 53 0) (PAIR 15095 0) (PAIR 15097 6505) (PAIR 36 0) (PAIR 55 6511) (PAIR 17380 0) (PAIR 17382 6513) (PAIR 53 6514) (PAIR 15099 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15101 0) (PAIR 17175 6519) (PAIR 53 6520) (PAIR 15102 0) (PAIR 17178 6522) (PAIR 17180 6523) (PAIR 53 6524) (PAIR 17185 0) (PAIR 17187 6526) (PAIR 2 6527) (PAIR 53 6528) (PAIR 1 6529) (PAIR 15103 0) (PAIR 17190 6531) (PAIR 53 6532) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 6600 0) (PAIR 59 6540) (PAIR 60 6541) (PAIR 78 6542) (PAIR 80 6543) (PAIR 81 6544) (PAIR 83 6545) (PAIR 15105 0) (PAIR 17380 0) (PAIR 17382 6548) (PAIR 53 6549) (PAIR 15107 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15109 0) (PAIR 17175 6554) (PAIR 53 6555) (PAIR 15110 0) (PAIR 17178 6557) (PAIR 17180 6558) (PAIR 53 6559) (PAIR 17185 0) (PAIR 17187 6561) (PAIR 2 6562) (PAIR 53 6563) (PAIR 1 6564) (PAIR 15111 0) (PAIR 17190 6566) (PAIR 53 6567) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 15113 6510) (PAIR 15114 6498) (PAIR 53 0) (PAIR 53 0) (PAIR 15115 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 15117 0) (PAIR 15118 6576) (PAIR 53 0) (PAIR 53 0) (PAIR 15119 0) (PAIR 15121 0) (PAIR 15122 6587) (PAIR 15124 0) (PAIR 15126 0) (PAIR 15128 0) (PAIR 15130 6594) (PAIR 15132 0) (PAIR 15134 6596) (PAIR 38 0) (PAIR 55 6599) (PAIR 17469 0) (PAIR 17247 6601) (PAIR 17251 6602) (PAIR 17236 6603) (PAIR 53 6604) (PAIR 17247 0) (PAIR 17251 6606) (PAIR 17191 6607) (PAIR 53 6608) (PAIR 15135 0) (PAIR 596 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 11814 0) (PAIR 71 6618) (PAIR 59 6619) (PAIR 60 6620) (PAIR 78 6621) (PAIR 80 6622) (PAIR 81 6623) (PAIR 83 6624) (PAIR 15137 0) (PAIR 17469 0) (PAIR 17247 6627) (PAIR 17251 6628) (PAIR 17236 6629) (PAIR 53 6630) (PAIR 17247 0) (PAIR 17251 6632) (PAIR 17191 6633) (PAIR 53 6634) (PAIR 15138 0) (PAIR 596 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 15140 6598) (PAIR 15141 6592) (PAIR 15142 0) (PAIR 15144 0) (PAIR 17236 0) (PAIR 53 6648) (PAIR 16405 0) (PAIR 15145 0) (PAIR 15147 6647) (PAIR 17236 0) (PAIR 53 6653) (PAIR 17191 0) (PAIR 53 6655) (PAIR 15148 0) (PAIR 15150 6652) (PAIR 17469 0) (PAIR 17247 6659) (PAIR 17251 6660) (PAIR 17236 6661) (PAIR 53 6662) (PAIR 17247 0) (PAIR 17251 6664) (PAIR 17191 6665) (PAIR 53 6666) (PAIR 15151 0) (PAIR 15153 6658) (PAIR 15154 6645) (PAIR 15156 0) (PAIR 15157 6670) (PAIR 53 0) (PAIR 53 0) (PAIR 15158 0) (PAIR 15160 0) (PAIR 15161 6672) (PAIR 14 0) (PAIR 55 6678) (PAIR 6679 0) (PAIR 61 6680) (PAIR 7282 0) (PAIR 11009 6682) (PAIR 11880 6683) (PAIR 11883 6684) (PAIR 11889 6685) (PAIR 11892 6686) (PAIR 11895 6687) (PAIR 8781 6688) (PAIR 15163 0) (PAIR 15165 0) (PAIR 15166 6677) (PAIR 15168 0) (PAIR 15169 6692) (PAIR 15171 0) (PAIR 15480 0) (PAIR 53 6696) (PAIR 15173 6695) (PAIR 15480 8685) (PAIR 53 6699) (PAIR 15175 6698) (PAIR 15177 6701) (PAIR 15178 6694) (PAIR 15180 0) (PAIR 15182 6704) (PAIR 15184 6705) (PAIR 15185 6703) (PAIR 17247 8759) (PAIR 17251 6708) (PAIR 17236 6709) (PAIR 53 6710) (PAIR 17247 0) (PAIR 17251 6712) (PAIR 17191 6713) (PAIR 53 6714) (PAIR 15186 0) (PAIR 15188 0) (PAIR 15189 6707) (PAIR 15 0) (PAIR 55 6719) (PAIR 6720 0) (PAIR 61 6721) (PAIR 7282 0) (PAIR 11009 6723) (PAIR 11880 6724) (PAIR 11883 6725) (PAIR 11889 6726) (PAIR 11892 6727) (PAIR 11895 6728) (PAIR 11898 6729) (PAIR 8781 6730) (PAIR 15191 0) (PAIR 15193 0) (PAIR 15194 6718) (PAIR 15196 0) (PAIR 15197 6734) (PAIR 15199 0) (PAIR 15200 6736) (PAIR 17500 11410) (PAIR 15202 0) (PAIR 0 0) (PAIR 53 6741) (PAIR 2 0) (PAIR 1 6743) (PAIR 53 6744) (PAIR 15203 0) (PAIR 17506 6746) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15205 6747) (PAIR 17527 9288) (PAIR 15207 0) (PAIR 15208 6750) (PAIR 53 0) (PAIR 37 0) (PAIR 15209 0) (PAIR 17534 0) (PAIR 15211 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15212 6758) (PAIR 17552 9302) (PAIR 15214 0) (PAIR 17566 9306) (PAIR 15215 6761) (PAIR 15216 0) (PAIR 17469 6766) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15217 0) (PAIR 17473 6770) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15219 6767) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15220 6774) (PAIR 53 6777) (PAIR 15222 0) (PAIR 15223 6738) (PAIR 31 0) (PAIR 55 6781) (PAIR 7477 0) (PAIR 78 6783) (PAIR 82 6784) (PAIR 15225 0) (PAIR 15227 0) (PAIR 15228 6780) (PAIR 17500 11410) (PAIR 15230 0) (PAIR 0 0) (PAIR 53 6791) (PAIR 2 0) (PAIR 1 6793) (PAIR 53 6794) (PAIR 15231 0) (PAIR 17506 6796) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15233 6797) (PAIR 17527 9288) (PAIR 15235 0) (PAIR 15236 6800) (PAIR 53 0) (PAIR 37 0) (PAIR 15237 0) (PAIR 17534 0) (PAIR 15239 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15240 6808) (PAIR 17552 9302) (PAIR 15242 0) (PAIR 17566 9306) (PAIR 15243 6811) (PAIR 15244 0) (PAIR 17469 6816) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15245 0) (PAIR 17473 6820) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15247 6817) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15248 6824) (PAIR 53 6827) (PAIR 15250 0) (PAIR 15251 6788) (PAIR 17500 11410) (PAIR 15253 0) (PAIR 0 0) (PAIR 53 6833) (PAIR 2 0) (PAIR 1 6835) (PAIR 53 6836) (PAIR 15254 0) (PAIR 17506 6838) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15256 6839) (PAIR 17527 9288) (PAIR 15258 0) (PAIR 15259 6842) (PAIR 53 0) (PAIR 37 0) (PAIR 15260 0) (PAIR 17534 0) (PAIR 15262 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15263 6850) (PAIR 17552 9302) (PAIR 15265 0) (PAIR 17566 9306) (PAIR 15266 6853) (PAIR 15267 0) (PAIR 17469 6858) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15268 0) (PAIR 17473 6862) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15270 6859) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15271 6866) (PAIR 53 6869) (PAIR 15273 0) (PAIR 15274 6830) (PAIR 7171 0) (PAIR 7174 6873) (PAIR 78 6874) (PAIR 82 6875) (PAIR 15276 0) (PAIR 15278 0) (PAIR 15279 6872) (PAIR 15281 0) (PAIR 15282 6879) (PAIR 17500 11410) (PAIR 15284 0) (PAIR 0 0) (PAIR 53 6884) (PAIR 2 0) (PAIR 1 6886) (PAIR 53 6887) (PAIR 15285 0) (PAIR 17506 6889) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15287 6890) (PAIR 17527 9288) (PAIR 15289 0) (PAIR 15290 6893) (PAIR 53 0) (PAIR 37 0) (PAIR 15291 0) (PAIR 17534 0) (PAIR 15293 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15294 6901) (PAIR 17552 9302) (PAIR 15296 0) (PAIR 17566 9306) (PAIR 15297 6904) (PAIR 15298 0) (PAIR 17469 6909) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15299 0) (PAIR 17473 6913) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15301 6910) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15302 6917) (PAIR 53 6920) (PAIR 15304 0) (PAIR 15305 6881) (PAIR 23 0) (PAIR 55 6924) (PAIR 7171 0) (PAIR 7174 6926) (PAIR 78 6927) (PAIR 82 6928) (PAIR 15307 0) (PAIR 15309 0) (PAIR 15310 6923) (PAIR 17500 11410) (PAIR 15312 0) (PAIR 0 0) (PAIR 53 6935) (PAIR 2 0) (PAIR 1 6937) (PAIR 53 6938) (PAIR 15313 0) (PAIR 17506 6940) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15315 6941) (PAIR 17527 9288) (PAIR 15317 0) (PAIR 15318 6944) (PAIR 53 0) (PAIR 37 0) (PAIR 15319 0) (PAIR 17534 0) (PAIR 15321 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15322 6952) (PAIR 17552 9302) (PAIR 15324 0) (PAIR 17566 9306) (PAIR 15325 6955) (PAIR 15326 0) (PAIR 17469 6960) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15327 0) (PAIR 17473 6964) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15329 6961) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15330 6968) (PAIR 53 6971) (PAIR 15332 0) (PAIR 15333 6932) (PAIR 7174 0) (PAIR 45 6975) (PAIR 46 6976) (PAIR 78 6977) (PAIR 82 6978) (PAIR 15335 0) (PAIR 15337 0) (PAIR 15338 6974) (PAIR 17500 11410) (PAIR 15340 0) (PAIR 0 0) (PAIR 53 6985) (PAIR 2 0) (PAIR 1 6987) (PAIR 53 6988) (PAIR 15341 0) (PAIR 17506 6990) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15343 6991) (PAIR 17527 9288) (PAIR 15345 0) (PAIR 15346 6994) (PAIR 53 0) (PAIR 37 0) (PAIR 15347 0) (PAIR 17534 0) (PAIR 15349 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15350 7002) (PAIR 17552 9302) (PAIR 15352 0) (PAIR 17566 9306) (PAIR 15353 7005) (PAIR 15354 0) (PAIR 17469 7010) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15355 0) (PAIR 17473 7014) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15357 7011) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15358 7018) (PAIR 53 7021) (PAIR 15360 0) (PAIR 15361 6982) (PAIR 7055 0) (PAIR 45 7025) (PAIR 46 7026) (PAIR 59 7027) (PAIR 78 7028) (PAIR 82 7029) (PAIR 15363 0) (PAIR 15365 0) (PAIR 15366 7024) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15367 0) (PAIR 17500 11410) (PAIR 15369 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15370 0) (PAIR 17534 0) (PAIR 15372 0) (PAIR 16111 7044) (PAIR 16112 7045) (PAIR 15373 7036) (PAIR 17469 7047) (PAIR 17251 7048) (PAIR 53 7049) (PAIR 15375 0) (PAIR 15376 7033) (PAIR 7171 0) (PAIR 7174 7053) (PAIR 47 7054) (PAIR 45 0) (PAIR 46 7056) (PAIR 59 7057) (PAIR 60 7058) (PAIR 78 7059) (PAIR 82 7060) (PAIR 15378 0) (PAIR 15380 0) (PAIR 15381 7052) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15382 0) (PAIR 17500 11410) (PAIR 15384 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15385 0) (PAIR 17534 0) (PAIR 15387 0) (PAIR 16111 7075) (PAIR 16112 7076) (PAIR 15388 7067) (PAIR 17469 7078) (PAIR 17251 7079) (PAIR 53 7080) (PAIR 15390 0) (PAIR 15391 7064) (PAIR 7182 0) (PAIR 46 7084) (PAIR 59 7085) (PAIR 60 7086) (PAIR 78 7087) (PAIR 82 7088) (PAIR 15393 0) (PAIR 15395 0) (PAIR 15396 7083) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15397 0) (PAIR 17500 11410) (PAIR 15399 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15400 0) (PAIR 17534 0) (PAIR 15402 0) (PAIR 16111 7103) (PAIR 16112 7104) (PAIR 15403 7095) (PAIR 17469 7106) (PAIR 17251 7107) (PAIR 53 7108) (PAIR 15405 0) (PAIR 15406 7092) (PAIR 7182 0) (PAIR 7142 7112) (PAIR 59 7113) (PAIR 60 7114) (PAIR 78 7115) (PAIR 82 7116) (PAIR 15408 0) (PAIR 15410 0) (PAIR 15411 7111) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15412 0) (PAIR 17500 11410) (PAIR 15414 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15415 0) (PAIR 17534 0) (PAIR 15417 0) (PAIR 16111 7131) (PAIR 16112 7132) (PAIR 15418 7123) (PAIR 17469 7134) (PAIR 17251 7135) (PAIR 53 7136) (PAIR 15420 0) (PAIR 15421 7120) (PAIR 45 0) (PAIR 46 7140) (PAIR 47 7141) (PAIR 7182 0) (PAIR 59 7143) (PAIR 60 7144) (PAIR 78 7145) (PAIR 82 7146) (PAIR 15423 0) (PAIR 15425 0) (PAIR 15426 7139) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15427 0) (PAIR 17500 11410) (PAIR 15429 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15430 0) (PAIR 17534 0) (PAIR 15432 0) (PAIR 16111 7161) (PAIR 16112 7162) (PAIR 15433 7153) (PAIR 17469 7164) (PAIR 17251 7165) (PAIR 53 7166) (PAIR 15435 0) (PAIR 15436 7150) (PAIR 45 0) (PAIR 44 7170) (PAIR 7171 0) (PAIR 46 0) (PAIR 44 7173) (PAIR 7174 7172) (PAIR 47 7175) (PAIR 7176 0) (PAIR 45 0) (PAIR 46 7178) (PAIR 47 7179) (PAIR 7180 7177) (PAIR 47 7181) (PAIR 59 0) (PAIR 60 7183) (PAIR 78 7184) (PAIR 82 7185) (PAIR 15438 0) (PAIR 15440 0) (PAIR 15441 7169) (PAIR 17247 8759) (PAIR 17251 7190) (PAIR 53 0) (PAIR 53 0) (PAIR 15442 7191) (PAIR 53 7194) (PAIR 15444 0) (PAIR 15445 7189) (PAIR 36 0) (PAIR 55 7198) (PAIR 7217 0) (PAIR 59 7200) (PAIR 60 7201) (PAIR 78 7202) (PAIR 82 7203) (PAIR 15447 0) (PAIR 15449 0) (PAIR 15450 7197) (PAIR 17247 8759) (PAIR 17251 7208) (PAIR 53 0) (PAIR 53 0) (PAIR 15451 7209) (PAIR 53 7212) (PAIR 15453 0) (PAIR 15454 7207) (PAIR 38 0) (PAIR 55 7216) (PAIR 11848 0) (PAIR 71 7218) (PAIR 59 7219) (PAIR 60 7220) (PAIR 78 7221) (PAIR 82 7222) (PAIR 15456 0) (PAIR 15458 0) (PAIR 15459 7215) (PAIR 15461 0) (PAIR 15462 7226) (PAIR 15464 0) (PAIR 15466 0) (PAIR 15468 0) (PAIR 15470 7230) (PAIR 15472 0) (PAIR 15474 7232) (PAIR 16 0) (PAIR 55 7235) (PAIR 7236 0) (PAIR 61 7237) (PAIR 7279 0) (PAIR 7282 7239) (PAIR 11009 7240) (PAIR 11880 7241) (PAIR 11883 7242) (PAIR 11889 7243) (PAIR 11892 7244) (PAIR 11895 7245) (PAIR 11898 7246) (PAIR 8781 7247) (PAIR 15476 0) (PAIR 15478 7234) (PAIR 15479 7228) (PAIR 17247 8759) (PAIR 17251 7252) (PAIR 53 0) (PAIR 53 0) (PAIR 15480 7253) (PAIR 53 7256) (PAIR 15482 0) (PAIR 15483 7251) (PAIR 15485 0) (PAIR 15486 7259) (PAIR 15488 0) (PAIR 15489 7261) (PAIR 15491 0) (PAIR 15493 0) (PAIR 15495 0) (PAIR 16195 0) (PAIR 53 7267) (PAIR 15497 7265) (PAIR 15499 0) (PAIR 16195 8685) (PAIR 53 7271) (PAIR 15501 7269) (PAIR 17 0) (PAIR 55 7274) (PAIR 7275 0) (PAIR 61 7276) (PAIR 8769 0) (PAIR 61 7278) (PAIR 7279 0) (PAIR 48 0) (PAIR 61 7281) (PAIR 7282 7280) (PAIR 11009 7283) (PAIR 11880 7284) (PAIR 11883 7285) (PAIR 11889 7286) (PAIR 11892 7287) (PAIR 11895 7288) (PAIR 11898 7289) (PAIR 8781 7290) (PAIR 11904 7291) (PAIR 15503 0) (PAIR 15505 7273) (PAIR 15506 7263) (PAIR 15508 0) (PAIR 15509 7295) (PAIR 15511 0) (PAIR 16446 0) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 7301) (PAIR 2 0) (PAIR 1 7303) (PAIR 53 7304) (PAIR 15512 0) (PAIR 17506 7306) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15514 7307) (PAIR 17520 0) (PAIR 17526 7311) (PAIR 17527 7312) (PAIR 15516 0) (PAIR 15517 7310) (PAIR 16435 0) (PAIR 17534 0) (PAIR 15519 0) (PAIR 0 0) (PAIR 53 7319) (PAIR 2 0) (PAIR 1 7321) (PAIR 53 7322) (PAIR 15520 7318) (PAIR 17545 0) (PAIR 17551 7325) (PAIR 17552 7326) (PAIR 15522 0) (PAIR 17555 0) (PAIR 17560 7329) (PAIR 17566 7330) (PAIR 15523 7324) (PAIR 15524 7299) (PAIR 17469 7333) (PAIR 0 0) (PAIR 53 7335) (PAIR 2 0) (PAIR 1 7337) (PAIR 53 7338) (PAIR 15525 0) (PAIR 17473 7340) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15527 7334) (PAIR 16497 0) (PAIR 0 7345) (PAIR 53 7346) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15529 7348) (PAIR 17380 0) (PAIR 17382 7352) (PAIR 53 7353) (PAIR 15531 0) (PAIR 15532 7351) (PAIR 53 7356) (PAIR 15533 0) (PAIR 600 0) (PAIR 15535 7298) (PAIR 15536 7297) (PAIR 21 0) (PAIR 55 7362) (PAIR 15537 0) (PAIR 15538 0) (PAIR 15539 7361) (PAIR 15541 0) (PAIR 17500 11410) (PAIR 15543 0) (PAIR 0 0) (PAIR 53 7370) (PAIR 2 0) (PAIR 1 7372) (PAIR 53 7373) (PAIR 15544 0) (PAIR 17506 7375) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15546 7376) (PAIR 17527 9288) (PAIR 15548 0) (PAIR 15549 7379) (PAIR 53 0) (PAIR 37 0) (PAIR 15550 0) (PAIR 17534 0) (PAIR 15552 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15553 7387) (PAIR 17552 9302) (PAIR 15555 0) (PAIR 17566 9306) (PAIR 15556 7390) (PAIR 15557 0) (PAIR 17469 7395) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15558 0) (PAIR 17473 7399) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15560 7396) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15561 7403) (PAIR 53 7406) (PAIR 15563 7367) (PAIR 15564 7366) (PAIR 15566 0) (PAIR 53 0) (PAIR 36 0) (PAIR 15567 0) (PAIR 15569 7410) (PAIR 53 0) (PAIR 53 0) (PAIR 15570 0) (PAIR 15572 7414) (PAIR 15573 7409) (PAIR 29 0) (PAIR 55 7420) (PAIR 78 0) (PAIR 15575 0) (PAIR 15577 0) (PAIR 15578 7419) (PAIR 15580 0) (PAIR 17500 11410) (PAIR 15582 0) (PAIR 0 0) (PAIR 53 7429) (PAIR 2 0) (PAIR 1 7431) (PAIR 53 7432) (PAIR 15583 0) (PAIR 17506 7434) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15585 7435) (PAIR 17527 9288) (PAIR 15587 0) (PAIR 15588 7438) (PAIR 53 0) (PAIR 37 0) (PAIR 15589 0) (PAIR 17534 0) (PAIR 15591 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15592 7446) (PAIR 17552 9302) (PAIR 15594 0) (PAIR 17566 9306) (PAIR 15595 7449) (PAIR 15596 0) (PAIR 17469 7454) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15597 0) (PAIR 17473 7458) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15599 7455) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15600 7462) (PAIR 53 7465) (PAIR 15602 7426) (PAIR 15603 7425) (PAIR 53 0) (PAIR 15605 0) (PAIR 15606 7468) (PAIR 15608 0) (PAIR 15610 0) (PAIR 30 0) (PAIR 55 7474) (PAIR 22 0) (PAIR 55 7476) (PAIR 7477 0) (PAIR 78 7478) (PAIR 15612 0) (PAIR 15614 7473) (PAIR 30 0) (PAIR 55 7482) (PAIR 7627 0) (PAIR 78 7484) (PAIR 15616 0) (PAIR 15618 7481) (PAIR 15619 7471) (PAIR 17500 11410) (PAIR 15621 0) (PAIR 0 0) (PAIR 53 7491) (PAIR 2 0) (PAIR 1 7493) (PAIR 53 7494) (PAIR 15622 0) (PAIR 17506 7496) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15624 7497) (PAIR 17527 9288) (PAIR 15626 0) (PAIR 15627 7500) (PAIR 53 0) (PAIR 37 0) (PAIR 15628 0) (PAIR 17534 0) (PAIR 15630 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15631 7508) (PAIR 17552 9302) (PAIR 15633 0) (PAIR 17566 9306) (PAIR 15634 7511) (PAIR 15635 0) (PAIR 17469 7516) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15636 0) (PAIR 17473 7520) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15638 7517) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15639 7524) (PAIR 53 7527) (PAIR 15641 0) (PAIR 15642 7488) (PAIR 15644 0) (PAIR 15645 0) (PAIR 15647 7531) (PAIR 0 0) (PAIR 15648 0) (PAIR 53 7535) (PAIR 0 7536) (PAIR 17363 0) (PAIR 53 7538) (PAIR 15649 0) (PAIR 0 7540) (PAIR 15650 0) (PAIR 53 7542) (PAIR 0 7543) (PAIR 17369 0) (PAIR 0 7545) (PAIR 15651 0) (PAIR 53 7547) (PAIR 0 7548) (PAIR 15652 0) (PAIR 0 7550) (PAIR 53 7551) (PAIR 17385 9560) (PAIR 53 0) (PAIR 15653 0) (PAIR 0 9564) (PAIR 15654 0) (PAIR 0 7557) (PAIR 53 7558) (PAIR 15655 0) (PAIR 15657 7533) (PAIR 15658 7530) (PAIR 15660 0) (PAIR 15662 0) (PAIR 31 0) (PAIR 55 7565) (PAIR 7627 0) (PAIR 78 7567) (PAIR 81 7568) (PAIR 15664 0) (PAIR 15666 7564) (PAIR 15667 7562) (PAIR 17500 11410) (PAIR 15669 0) (PAIR 0 0) (PAIR 53 7575) (PAIR 2 0) (PAIR 1 7577) (PAIR 53 7578) (PAIR 15670 0) (PAIR 17506 7580) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15672 7581) (PAIR 17527 9288) (PAIR 15674 0) (PAIR 15675 7584) (PAIR 53 0) (PAIR 37 0) (PAIR 15676 0) (PAIR 17534 0) (PAIR 15678 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15679 7592) (PAIR 17552 9302) (PAIR 15681 0) (PAIR 17566 9306) (PAIR 15682 7595) (PAIR 15683 0) (PAIR 17469 7600) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15684 0) (PAIR 17473 7604) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15686 7601) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15687 7608) (PAIR 53 7611) (PAIR 15689 0) (PAIR 15690 7572) (PAIR 15692 0) (PAIR 15693 7614) (PAIR 53 0) (PAIR 15695 0) (PAIR 15696 7616) (PAIR 15698 0) (PAIR 15700 0) (PAIR 15702 0) (PAIR 15704 7621) (PAIR 15706 0) (PAIR 15708 7623) (PAIR 22 0) (PAIR 55 7626) (PAIR 17479 0) (PAIR 0 7628) (PAIR 17363 0) (PAIR 53 7630) (PAIR 15709 0) (PAIR 0 7632) (PAIR 0 0) (PAIR 15710 0) (PAIR 53 7635) (PAIR 0 7636) (PAIR 53 0) (PAIR 15711 0) (PAIR 17369 0) (PAIR 0 7640) (PAIR 15712 0) (PAIR 0 7642) (PAIR 53 7643) (PAIR 15713 0) (PAIR 53 7645) (PAIR 16781 0) (PAIR 0 7647) (PAIR 53 7648) (PAIR 600 0) (PAIR 603 0) (PAIR 8513 0) (PAIR 8516 7652) (PAIR 78 7653) (PAIR 81 7654) (PAIR 15715 0) (PAIR 17479 0) (PAIR 0 7657) (PAIR 17363 0) (PAIR 53 7659) (PAIR 15716 0) (PAIR 0 7661) (PAIR 0 0) (PAIR 15717 0) (PAIR 53 7664) (PAIR 0 7665) (PAIR 53 0) (PAIR 15718 0) (PAIR 17369 0) (PAIR 0 7669) (PAIR 15719 0) (PAIR 0 7671) (PAIR 53 7672) (PAIR 15720 0) (PAIR 53 7674) (PAIR 16781 0) (PAIR 0 7676) (PAIR 53 7677) (PAIR 600 0) (PAIR 603 0) (PAIR 15722 7625) (PAIR 15723 7619) (PAIR 17500 11410) (PAIR 15725 0) (PAIR 0 0) (PAIR 53 7685) (PAIR 2 0) (PAIR 1 7687) (PAIR 53 7688) (PAIR 15726 0) (PAIR 17506 7690) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15728 7691) (PAIR 17527 9288) (PAIR 15730 0) (PAIR 15731 7694) (PAIR 53 0) (PAIR 37 0) (PAIR 15732 0) (PAIR 17534 0) (PAIR 15734 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15735 7702) (PAIR 17552 9302) (PAIR 15737 0) (PAIR 17566 9306) (PAIR 15738 7705) (PAIR 15739 0) (PAIR 17469 7710) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15740 0) (PAIR 17473 7714) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15742 7711) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15743 7718) (PAIR 53 7721) (PAIR 15745 0) (PAIR 15746 7682) (PAIR 15748 0) (PAIR 15750 0) (PAIR 15752 0) (PAIR 15754 7726) (PAIR 15756 0) (PAIR 15757 0) (PAIR 15758 0) (PAIR 15759 0) (PAIR 15760 0) (PAIR 15761 0) (PAIR 53 7734) (PAIR 15763 7728) (PAIR 23 0) (PAIR 55 7737) (PAIR 17479 0) (PAIR 0 7739) (PAIR 17363 0) (PAIR 53 7741) (PAIR 15764 0) (PAIR 0 7743) (PAIR 0 0) (PAIR 15765 0) (PAIR 53 7746) (PAIR 0 7747) (PAIR 53 0) (PAIR 15766 0) (PAIR 17369 0) (PAIR 0 7751) (PAIR 15767 0) (PAIR 0 7753) (PAIR 53 7754) (PAIR 15768 0) (PAIR 53 7756) (PAIR 16781 0) (PAIR 0 7758) (PAIR 53 7759) (PAIR 600 0) (PAIR 603 0) (PAIR 8513 0) (PAIR 8516 7763) (PAIR 78 7764) (PAIR 81 7765) (PAIR 15770 0) (PAIR 17479 0) (PAIR 0 7768) (PAIR 17363 0) (PAIR 53 7770) (PAIR 15771 0) (PAIR 0 7772) (PAIR 0 0) (PAIR 15772 0) (PAIR 53 7775) (PAIR 0 7776) (PAIR 53 0) (PAIR 15773 0) (PAIR 17369 0) (PAIR 0 7780) (PAIR 15774 0) (PAIR 0 7782) (PAIR 53 7783) (PAIR 15775 0) (PAIR 53 7785) (PAIR 16781 0) (PAIR 0 7787) (PAIR 53 7788) (PAIR 600 0) (PAIR 603 0) (PAIR 15777 7736) (PAIR 15778 7724) (PAIR 17500 11410) (PAIR 15780 0) (PAIR 0 0) (PAIR 53 7796) (PAIR 2 0) (PAIR 1 7798) (PAIR 53 7799) (PAIR 15781 0) (PAIR 17506 7801) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15783 7802) (PAIR 17527 9288) (PAIR 15785 0) (PAIR 15786 7805) (PAIR 53 0) (PAIR 37 0) (PAIR 15787 0) (PAIR 17534 0) (PAIR 15789 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15790 7813) (PAIR 17552 9302) (PAIR 15792 0) (PAIR 17566 9306) (PAIR 15793 7816) (PAIR 15794 0) (PAIR 17469 7821) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15795 0) (PAIR 17473 7825) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15797 7822) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15798 7829) (PAIR 53 7832) (PAIR 15800 0) (PAIR 15801 7793) (PAIR 15803 0) (PAIR 15805 0) (PAIR 15807 0) (PAIR 15809 7837) (PAIR 15811 0) (PAIR 0 0) (PAIR 53 7841) (PAIR 53 0) (PAIR 53 0) (PAIR 600 0) (PAIR 603 0) (PAIR 15813 7839) (PAIR 16781 0) (PAIR 0 7848) (PAIR 53 7849) (PAIR 17380 0) (PAIR 17382 7851) (PAIR 53 7852) (PAIR 15815 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15817 0) (PAIR 17175 7857) (PAIR 53 7858) (PAIR 15818 0) (PAIR 17142 7860) (PAIR 17373 7861) (PAIR 53 7862) (PAIR 17026 0) (PAIR 17149 7864) (PAIR 2 7865) (PAIR 1 7866) (PAIR 53 7867) (PAIR 600 0) (PAIR 603 0) (PAIR 8516 0) (PAIR 45 7871) (PAIR 46 7872) (PAIR 78 7873) (PAIR 81 7874) (PAIR 15820 0) (PAIR 16781 0) (PAIR 0 7877) (PAIR 53 7878) (PAIR 17380 0) (PAIR 17382 7880) (PAIR 53 7881) (PAIR 15822 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15824 0) (PAIR 17175 7886) (PAIR 53 7887) (PAIR 15825 0) (PAIR 17142 7889) (PAIR 17373 7890) (PAIR 53 7891) (PAIR 17026 0) (PAIR 17149 7893) (PAIR 2 7894) (PAIR 1 7895) (PAIR 53 7896) (PAIR 600 0) (PAIR 603 0) (PAIR 15827 7847) (PAIR 15828 7835) (PAIR 17500 11410) (PAIR 15830 0) (PAIR 0 0) (PAIR 53 7904) (PAIR 2 0) (PAIR 1 7906) (PAIR 53 7907) (PAIR 15831 0) (PAIR 17506 7909) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15833 7910) (PAIR 17527 9288) (PAIR 15835 0) (PAIR 15836 7913) (PAIR 53 0) (PAIR 37 0) (PAIR 15837 0) (PAIR 17534 0) (PAIR 15839 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15840 7921) (PAIR 17552 9302) (PAIR 15842 0) (PAIR 17566 9306) (PAIR 15843 7924) (PAIR 15844 0) (PAIR 17469 7929) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15845 0) (PAIR 17473 7933) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15847 7930) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15848 7937) (PAIR 53 7940) (PAIR 15850 0) (PAIR 15851 7901) (PAIR 15853 0) (PAIR 15855 0) (PAIR 15857 0) (PAIR 15862 0) (PAIR 15859 7945) (PAIR 15861 0) (PAIR 28 0) (PAIR 53 0) (PAIR 53 0) (PAIR 15862 7950) (PAIR 15864 7948) (PAIR 16805 0) (PAIR 2 7955) (PAIR 1 7956) (PAIR 53 7957) (PAIR 17380 0) (PAIR 17382 7959) (PAIR 53 7960) (PAIR 15866 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15868 0) (PAIR 17175 7965) (PAIR 53 7966) (PAIR 15869 0) (PAIR 17142 7968) (PAIR 17373 7969) (PAIR 53 7970) (PAIR 17026 0) (PAIR 17149 7972) (PAIR 2 7973) (PAIR 1 7974) (PAIR 53 7975) (PAIR 594 0) (PAIR 600 0) (PAIR 603 0) (PAIR 8074 0) (PAIR 45 7980) (PAIR 46 7981) (PAIR 59 7982) (PAIR 78 7983) (PAIR 81 7984) (PAIR 15871 0) (PAIR 16805 0) (PAIR 2 7987) (PAIR 1 7988) (PAIR 53 7989) (PAIR 17380 0) (PAIR 17382 7991) (PAIR 53 7992) (PAIR 15873 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15875 0) (PAIR 17175 7997) (PAIR 53 7998) (PAIR 15876 0) (PAIR 17142 8000) (PAIR 17373 8001) (PAIR 53 8002) (PAIR 17026 0) (PAIR 17149 8004) (PAIR 2 8005) (PAIR 1 8006) (PAIR 53 8007) (PAIR 594 0) (PAIR 600 0) (PAIR 603 0) (PAIR 15878 7954) (PAIR 15879 7943) (PAIR 17500 11410) (PAIR 15881 0) (PAIR 0 0) (PAIR 53 8016) (PAIR 2 0) (PAIR 1 8018) (PAIR 53 8019) (PAIR 15882 0) (PAIR 17506 8021) (PAIR 17508 0) (PAIR 17510 0) (PAIR 15884 8022) (PAIR 17527 9288) (PAIR 15886 0) (PAIR 15887 8025) (PAIR 53 0) (PAIR 37 0) (PAIR 15888 0) (PAIR 17534 0) (PAIR 15890 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 15891 8033) (PAIR 17552 9302) (PAIR 15893 0) (PAIR 17566 9306) (PAIR 15894 8036) (PAIR 15895 0) (PAIR 17469 8041) (PAIR 53 9266) (PAIR 53 9269) (PAIR 15896 0) (PAIR 17473 8045) (PAIR 17474 0) (PAIR 17476 0) (PAIR 15898 8042) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15899 8049) (PAIR 53 8052) (PAIR 15901 0) (PAIR 15902 8013) (PAIR 15904 0) (PAIR 15906 0) (PAIR 15908 0) (PAIR 15910 8057) (PAIR 15912 0) (PAIR 15914 0) (PAIR 603 0) (PAIR 15916 0) (PAIR 15917 0) (PAIR 53 8064) (PAIR 53 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 15919 8059) (PAIR 8513 0) (PAIR 8516 8072) (PAIR 47 8073) (PAIR 17380 0) (PAIR 17382 8075) (PAIR 53 8076) (PAIR 15921 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15923 0) (PAIR 17175 8081) (PAIR 53 8082) (PAIR 15924 0) (PAIR 17142 8084) (PAIR 17373 8085) (PAIR 53 8086) (PAIR 17026 0) (PAIR 17149 8088) (PAIR 2 8089) (PAIR 1 8090) (PAIR 53 8091) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 45 0) (PAIR 46 8097) (PAIR 59 8098) (PAIR 60 8099) (PAIR 78 8100) (PAIR 81 8101) (PAIR 15926 0) (PAIR 17380 0) (PAIR 17382 8104) (PAIR 53 8105) (PAIR 15928 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15930 0) (PAIR 17175 8110) (PAIR 53 8111) (PAIR 15931 0) (PAIR 17142 8113) (PAIR 17373 8114) (PAIR 53 8115) (PAIR 17026 0) (PAIR 17149 8117) (PAIR 2 8118) (PAIR 1 8119) (PAIR 53 8120) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 15933 8071) (PAIR 15934 8055) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15935 0) (PAIR 17500 11410) (PAIR 15937 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15938 0) (PAIR 17534 0) (PAIR 15940 0) (PAIR 16111 8138) (PAIR 16112 8139) (PAIR 15941 8130) (PAIR 17469 8141) (PAIR 17251 8142) (PAIR 53 8143) (PAIR 15943 0) (PAIR 15944 8127) (PAIR 15946 0) (PAIR 15948 0) (PAIR 15950 0) (PAIR 15952 8148) (PAIR 15954 0) (PAIR 53 0) (PAIR 15956 8150) (PAIR 17007 0) (PAIR 0 8154) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 8157) (PAIR 0 0) (PAIR 15957 0) (PAIR 0 8160) (PAIR 15958 0) (PAIR 0 8162) (PAIR 53 8163) (PAIR 15959 0) (PAIR 53 8165) (PAIR 17015 0) (PAIR 0 8167) (PAIR 53 8168) (PAIR 15960 0) (PAIR 2 8170) (PAIR 1 8171) (PAIR 53 8172) (PAIR 17380 0) (PAIR 17382 8174) (PAIR 53 8175) (PAIR 15962 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15964 0) (PAIR 17175 8180) (PAIR 53 8181) (PAIR 15965 0) (PAIR 17142 8183) (PAIR 17373 8184) (PAIR 53 8185) (PAIR 17026 0) (PAIR 17149 8187) (PAIR 2 8188) (PAIR 1 8189) (PAIR 53 8190) (PAIR 15966 0) (PAIR 17152 8192) (PAIR 53 8193) (PAIR 15967 0) (PAIR 17026 0) (PAIR 17149 8196) (PAIR 2 8197) (PAIR 1 8198) (PAIR 53 8199) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 8524 0) (PAIR 46 8205) (PAIR 59 8206) (PAIR 60 8207) (PAIR 78 8208) (PAIR 81 8209) (PAIR 15969 0) (PAIR 17007 0) (PAIR 0 8212) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 8215) (PAIR 0 0) (PAIR 15970 0) (PAIR 0 8218) (PAIR 15971 0) (PAIR 0 8220) (PAIR 53 8221) (PAIR 15972 0) (PAIR 53 8223) (PAIR 17015 0) (PAIR 0 8225) (PAIR 53 8226) (PAIR 15973 0) (PAIR 2 8228) (PAIR 1 8229) (PAIR 53 8230) (PAIR 17380 0) (PAIR 17382 8232) (PAIR 53 8233) (PAIR 15975 0) (PAIR 37 0) (PAIR 603 0) (PAIR 15977 0) (PAIR 17175 8238) (PAIR 53 8239) (PAIR 15978 0) (PAIR 17142 8241) (PAIR 17373 8242) (PAIR 53 8243) (PAIR 17026 0) (PAIR 17149 8245) (PAIR 2 8246) (PAIR 1 8247) (PAIR 53 8248) (PAIR 15979 0) (PAIR 17152 8250) (PAIR 53 8251) (PAIR 15980 0) (PAIR 17026 0) (PAIR 17149 8254) (PAIR 2 8255) (PAIR 1 8256) (PAIR 53 8257) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 15982 8153) (PAIR 15983 8146) (PAIR 53 8532) (PAIR 53 8535) (PAIR 15984 0) (PAIR 17500 11410) (PAIR 15986 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 15987 0) (PAIR 17534 0) (PAIR 15989 0) (PAIR 16111 8275) (PAIR 16112 8276) (PAIR 15990 8267) (PAIR 17469 8278) (PAIR 17251 8279) (PAIR 53 8280) (PAIR 15992 0) (PAIR 15993 8264) (PAIR 15995 0) (PAIR 15997 0) (PAIR 15999 0) (PAIR 16001 8285) (PAIR 16003 0) (PAIR 53 0) (PAIR 53 0) (PAIR 16004 0) (PAIR 16006 8287) (PAIR 16060 0) (PAIR 17380 0) (PAIR 17382 8294) (PAIR 53 8295) (PAIR 16008 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16010 0) (PAIR 17175 8300) (PAIR 53 8301) (PAIR 16011 0) (PAIR 17142 8303) (PAIR 17373 8304) (PAIR 53 8305) (PAIR 17026 0) (PAIR 17149 8307) (PAIR 2 8308) (PAIR 1 8309) (PAIR 53 8310) (PAIR 16012 0) (PAIR 17152 8312) (PAIR 53 8313) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 8524 0) (PAIR 8392 8319) (PAIR 59 8320) (PAIR 60 8321) (PAIR 78 8322) (PAIR 81 8323) (PAIR 16014 0) (PAIR 16060 0) (PAIR 17380 0) (PAIR 17382 8327) (PAIR 53 8328) (PAIR 16016 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16018 0) (PAIR 17175 8333) (PAIR 53 8334) (PAIR 16019 0) (PAIR 17142 8336) (PAIR 17373 8337) (PAIR 53 8338) (PAIR 17026 0) (PAIR 17149 8340) (PAIR 2 8341) (PAIR 1 8342) (PAIR 53 8343) (PAIR 16020 0) (PAIR 17152 8345) (PAIR 53 8346) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16022 8292) (PAIR 16023 8283) (PAIR 53 8532) (PAIR 53 8535) (PAIR 16024 0) (PAIR 17500 11410) (PAIR 16026 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 16027 0) (PAIR 17534 0) (PAIR 16029 0) (PAIR 16111 8364) (PAIR 16112 8365) (PAIR 16030 8356) (PAIR 17469 8367) (PAIR 17251 8368) (PAIR 53 8369) (PAIR 16032 0) (PAIR 16033 8353) (PAIR 16035 0) (PAIR 16037 0) (PAIR 16039 0) (PAIR 16045 0) (PAIR 16046 0) (PAIR 16040 0) (PAIR 16042 8374) (PAIR 16044 0) (PAIR 28 0) (PAIR 53 0) (PAIR 53 0) (PAIR 16045 8381) (PAIR 53 0) (PAIR 53 0) (PAIR 16046 0) (PAIR 16047 0) (PAIR 16049 8379) (PAIR 45 0) (PAIR 46 8390) (PAIR 47 8391) (PAIR 17007 0) (PAIR 0 8393) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 8396) (PAIR 0 0) (PAIR 16050 0) (PAIR 0 8399) (PAIR 16051 0) (PAIR 0 8401) (PAIR 53 8402) (PAIR 16052 0) (PAIR 53 8404) (PAIR 17015 0) (PAIR 0 8406) (PAIR 53 8407) (PAIR 16053 0) (PAIR 2 8409) (PAIR 1 8410) (PAIR 53 8411) (PAIR 17380 0) (PAIR 17382 8413) (PAIR 53 8414) (PAIR 16055 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16057 0) (PAIR 17175 8419) (PAIR 53 8420) (PAIR 16058 0) (PAIR 17142 8422) (PAIR 17373 8423) (PAIR 53 8424) (PAIR 17026 0) (PAIR 17149 8426) (PAIR 2 8427) (PAIR 1 8428) (PAIR 53 8429) (PAIR 16059 0) (PAIR 17152 8431) (PAIR 53 8432) (PAIR 16060 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 8524 0) (PAIR 59 8439) (PAIR 60 8440) (PAIR 78 8441) (PAIR 81 8442) (PAIR 16062 0) (PAIR 17007 0) (PAIR 0 8445) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 8448) (PAIR 0 0) (PAIR 16063 0) (PAIR 0 8451) (PAIR 16064 0) (PAIR 0 8453) (PAIR 53 8454) (PAIR 16065 0) (PAIR 53 8456) (PAIR 17015 0) (PAIR 0 8458) (PAIR 53 8459) (PAIR 16066 0) (PAIR 2 8461) (PAIR 1 8462) (PAIR 53 8463) (PAIR 17380 0) (PAIR 17382 8465) (PAIR 53 8466) (PAIR 16068 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16070 0) (PAIR 17175 8471) (PAIR 53 8472) (PAIR 16071 0) (PAIR 17142 8474) (PAIR 17373 8475) (PAIR 53 8476) (PAIR 17026 0) (PAIR 17149 8478) (PAIR 2 8479) (PAIR 1 8480) (PAIR 53 8481) (PAIR 16072 0) (PAIR 17152 8483) (PAIR 53 8484) (PAIR 16073 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16075 8389) (PAIR 16076 8372) (PAIR 53 8532) (PAIR 53 8535) (PAIR 16077 0) (PAIR 17500 11410) (PAIR 16079 0) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 16080 0) (PAIR 17534 0) (PAIR 16082 0) (PAIR 16111 8503) (PAIR 16112 8504) (PAIR 16083 8495) (PAIR 17469 8506) (PAIR 17251 8507) (PAIR 53 8508) (PAIR 16085 0) (PAIR 16086 8492) (PAIR 45 0) (PAIR 44 8512) (PAIR 8513 0) (PAIR 46 0) (PAIR 44 8515) (PAIR 8516 8514) (PAIR 47 8517) (PAIR 8518 0) (PAIR 45 0) (PAIR 46 8520) (PAIR 47 8521) (PAIR 8522 8519) (PAIR 47 8523) (PAIR 59 0) (PAIR 60 8525) (PAIR 78 8526) (PAIR 81 8527) (PAIR 16088 0) (PAIR 16090 0) (PAIR 16091 8511) (PAIR 0 0) (PAIR 53 8532) (PAIR 2 0) (PAIR 1 8534) (PAIR 53 8535) (PAIR 16092 0) (PAIR 17500 11410) (PAIR 16094 0) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16096 0) (PAIR 17527 0) (PAIR 16098 0) (PAIR 11679 0) (PAIR 61 8545) (PAIR 53 0) (PAIR 53 0) (PAIR 16099 0) (PAIR 53 0) (PAIR 37 0) (PAIR 16100 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16102 0) (PAIR 11966 0) (PAIR 61 8560) (PAIR 8561 0) (PAIR 69 0) (PAIR 61 8563) (PAIR 8564 8562) (PAIR 81 0) (PAIR 61 8566) (PAIR 8567 8565) (PAIR 16104 0) (PAIR 16105 8542) (PAIR 17243 8570) (PAIR 53 0) (PAIR 37 0) (PAIR 16106 0) (PAIR 17534 0) (PAIR 16108 0) (PAIR 17552 0) (PAIR 16110 0) (PAIR 17566 0) (PAIR 16111 8576) (PAIR 53 0) (PAIR 53 0) (PAIR 16112 8580) (PAIR 16113 8537) (PAIR 17469 8584) (PAIR 17251 8585) (PAIR 53 8586) (PAIR 16115 0) (PAIR 16116 8531) (PAIR 16118 0) (PAIR 16120 0) (PAIR 16122 0) (PAIR 16128 0) (PAIR 16124 8591) (PAIR 24 0) (PAIR 53 0) (PAIR 53 0) (PAIR 16125 8595) (PAIR 16127 0) (PAIR 24 0) (PAIR 53 0) (PAIR 53 0) (PAIR 16128 8600) (PAIR 16130 8594) (PAIR 36 0) (PAIR 55 8605) (PAIR 17380 0) (PAIR 17382 8607) (PAIR 53 8608) (PAIR 16132 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16134 0) (PAIR 17175 8613) (PAIR 53 8614) (PAIR 16135 0) (PAIR 17178 8616) (PAIR 17180 8617) (PAIR 53 8618) (PAIR 17185 0) (PAIR 17187 8620) (PAIR 2 8621) (PAIR 53 8622) (PAIR 1 8623) (PAIR 16136 0) (PAIR 17190 8625) (PAIR 53 8626) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 8717 0) (PAIR 59 8632) (PAIR 60 8633) (PAIR 78 8634) (PAIR 81 8635) (PAIR 16138 0) (PAIR 17380 0) (PAIR 17382 8638) (PAIR 53 8639) (PAIR 16140 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16142 0) (PAIR 17175 8644) (PAIR 53 8645) (PAIR 16143 0) (PAIR 17178 8647) (PAIR 17180 8648) (PAIR 53 8649) (PAIR 17185 0) (PAIR 17187 8651) (PAIR 2 8652) (PAIR 53 8653) (PAIR 1 8654) (PAIR 16144 0) (PAIR 17190 8656) (PAIR 53 8657) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16146 8604) (PAIR 16147 8589) (PAIR 17247 8759) (PAIR 17251 8665) (PAIR 16159 8666) (PAIR 53 8667) (PAIR 16149 0) (PAIR 16150 8664) (PAIR 17247 8759) (PAIR 17251 8671) (PAIR 53 0) (PAIR 53 0) (PAIR 16151 8672) (PAIR 53 8675) (PAIR 16153 0) (PAIR 17247 8759) (PAIR 17251 8678) (PAIR 53 0) (PAIR 53 0) (PAIR 16154 8679) (PAIR 53 8682) (PAIR 17247 0) (PAIR 17251 8684) (PAIR 53 0) (PAIR 53 0) (PAIR 16155 8685) (PAIR 53 8688) (PAIR 17621 0) (PAIR 61 0) (PAIR 16156 0) (PAIR 16158 8677) (PAIR 17247 8759) (PAIR 17251 8694) (PAIR 53 0) (PAIR 53 0) (PAIR 16159 8695) (PAIR 53 8698) (PAIR 17252 0) (PAIR 53 8700) (PAIR 16160 0) (PAIR 16162 8693) (PAIR 16163 8670) (PAIR 16165 0) (PAIR 16167 0) (PAIR 16169 0) (PAIR 16171 8706) (PAIR 16173 0) (PAIR 53 0) (PAIR 40 0) (PAIR 16174 0) (PAIR 61 0) (PAIR 16175 0) (PAIR 16177 8708) (PAIR 38 0) (PAIR 55 8716) (PAIR 17247 0) (PAIR 17251 8718) (PAIR 17252 8719) (PAIR 53 8720) (PAIR 53 0) (PAIR 53 0) (PAIR 16178 0) (PAIR 16179 0) (PAIR 596 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 11833 0) (PAIR 71 8731) (PAIR 59 8732) (PAIR 60 8733) (PAIR 78 8734) (PAIR 81 8735) (PAIR 16181 0) (PAIR 17247 0) (PAIR 17251 8738) (PAIR 17252 8739) (PAIR 53 8740) (PAIR 53 0) (PAIR 53 0) (PAIR 16182 0) (PAIR 61 0) (PAIR 16183 0) (PAIR 596 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16185 8715) (PAIR 16186 8704) (PAIR 16188 0) (PAIR 16190 8754) (PAIR 16191 8753) (PAIR 16193 0) (PAIR 16194 8756) (PAIR 17469 0) (PAIR 17247 8759) (PAIR 17251 8760) (PAIR 53 0) (PAIR 53 0) (PAIR 16195 8761) (PAIR 53 8764) (PAIR 16197 0) (PAIR 16198 8758) (PAIR 18 0) (PAIR 55 8768) (PAIR 8769 0) (PAIR 61 8770) (PAIR 11005 0) (PAIR 11009 8772) (PAIR 11880 8773) (PAIR 11883 8774) (PAIR 11889 8775) (PAIR 11892 8776) (PAIR 11895 8777) (PAIR 11898 8778) (PAIR 81 0) (PAIR 61 8780) (PAIR 8781 8779) (PAIR 11904 8782) (PAIR 16200 0) (PAIR 16202 0) (PAIR 16203 8767) (PAIR 16205 0) (PAIR 16206 8786) (PAIR 16208 0) (PAIR 16210 8789) (PAIR 16211 8788) (PAIR 17396 0) (PAIR 53 0) (PAIR 38 0) (PAIR 16212 0) (PAIR 16213 0) (PAIR 16215 0) (PAIR 16216 8791) (PAIR 19 0) (PAIR 55 8799) (PAIR 8800 0) (PAIR 61 8801) (PAIR 11005 0) (PAIR 11009 8803) (PAIR 11880 8804) (PAIR 11883 8805) (PAIR 11889 8806) (PAIR 11892 8807) (PAIR 11895 8808) (PAIR 11898 8809) (PAIR 11901 8810) (PAIR 11904 8811) (PAIR 16218 0) (PAIR 16220 0) (PAIR 16221 8798) (PAIR 16223 0) (PAIR 16224 8815) (PAIR 16226 0) (PAIR 39 0) (PAIR 16228 8818) (PAIR 16230 8820) (PAIR 16350 0) (PAIR 17373 8822) (PAIR 16234 8823) (PAIR 16236 8824) (PAIR 16361 8825) (PAIR 16239 8826) (PAIR 16362 8827) (PAIR 53 8828) (PAIR 17469 0) (PAIR 17373 8830) (PAIR 16241 8831) (PAIR 16244 8832) (PAIR 16247 8833) (PAIR 16263 8834) (PAIR 16264 8835) (PAIR 53 8836) (PAIR 16231 0) (PAIR 17026 0) (PAIR 17149 8839) (PAIR 2 8840) (PAIR 1 8841) (PAIR 53 8842) (PAIR 16232 0) (PAIR 53 8844) (PAIR 16350 0) (PAIR 17373 8846) (PAIR 37 0) (PAIR 603 0) (PAIR 16234 8847) (PAIR 16236 8850) (PAIR 16361 8851) (PAIR 17380 0) (PAIR 17382 8853) (PAIR 53 8854) (PAIR 16238 0) (PAIR 16239 8852) (PAIR 16362 8857) (PAIR 53 8858) (PAIR 17469 0) (PAIR 17373 8860) (PAIR 37 0) (PAIR 603 0) (PAIR 16241 8861) (PAIR 0 0) (PAIR 53 8865) (PAIR 2 0) (PAIR 1 8867) (PAIR 53 8868) (PAIR 16242 0) (PAIR 17473 8870) (PAIR 17474 0) (PAIR 17476 0) (PAIR 16244 8864) (PAIR 17380 0) (PAIR 17382 8875) (PAIR 53 8876) (PAIR 16246 0) (PAIR 16247 8874) (PAIR 17493 0) (PAIR 17499 8880) (PAIR 17500 8881) (PAIR 16249 0) (PAIR 0 0) (PAIR 53 8884) (PAIR 2 0) (PAIR 1 8886) (PAIR 53 8887) (PAIR 16250 0) (PAIR 17506 8889) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16252 8890) (PAIR 17520 0) (PAIR 17526 8894) (PAIR 17527 8895) (PAIR 16254 0) (PAIR 16255 8893) (PAIR 53 0) (PAIR 37 0) (PAIR 16256 0) (PAIR 17534 0) (PAIR 16258 0) (PAIR 0 0) (PAIR 53 8904) (PAIR 2 0) (PAIR 1 8906) (PAIR 53 8907) (PAIR 16259 8903) (PAIR 17545 0) (PAIR 17551 8910) (PAIR 17552 8911) (PAIR 16261 0) (PAIR 17555 0) (PAIR 17560 8914) (PAIR 17566 8915) (PAIR 16262 8909) (PAIR 16263 8879) (PAIR 0 0) (PAIR 53 8919) (PAIR 2 0) (PAIR 1 8921) (PAIR 53 8922) (PAIR 16264 8918) (PAIR 53 8924) (PAIR 16265 0) (PAIR 17026 0) (PAIR 17149 8927) (PAIR 2 8928) (PAIR 1 8929) (PAIR 53 8930) (PAIR 16266 0) (PAIR 53 8932) (PAIR 16268 8821) (PAIR 16269 8817) (PAIR 16270 0) (PAIR 16272 0) (PAIR 16273 0) (PAIR 16275 8937) (PAIR 16277 8939) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16279 8941) (PAIR 16350 8944) (PAIR 16292 8945) (PAIR 17380 0) (PAIR 17382 8947) (PAIR 53 8948) (PAIR 16281 0) (PAIR 16282 8946) (PAIR 53 8951) (PAIR 16361 8952) (PAIR 16362 8953) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16284 8955) (PAIR 17380 0) (PAIR 17382 8959) (PAIR 53 8960) (PAIR 16286 0) (PAIR 16287 8958) (PAIR 17469 8963) (PAIR 16303 8964) (PAIR 16319 8965) (PAIR 16320 8966) (PAIR 53 8967) (PAIR 16288 0) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16290 8970) (PAIR 16350 8973) (PAIR 16292 8974) (PAIR 17380 0) (PAIR 17382 8976) (PAIR 53 8977) (PAIR 16294 0) (PAIR 16295 8975) (PAIR 53 8980) (PAIR 16361 8981) (PAIR 16362 8982) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16297 8984) (PAIR 17380 0) (PAIR 17382 8988) (PAIR 53 8989) (PAIR 16299 0) (PAIR 16300 8987) (PAIR 17469 8992) (PAIR 53 9266) (PAIR 53 9269) (PAIR 16301 0) (PAIR 17473 8996) (PAIR 17474 0) (PAIR 17476 0) (PAIR 16303 8993) (PAIR 17500 11410) (PAIR 16305 0) (PAIR 0 0) (PAIR 53 9003) (PAIR 2 0) (PAIR 1 9005) (PAIR 53 9006) (PAIR 16306 0) (PAIR 17506 9008) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16308 9009) (PAIR 17527 9288) (PAIR 16310 0) (PAIR 16311 9012) (PAIR 53 0) (PAIR 37 0) (PAIR 16312 0) (PAIR 17534 0) (PAIR 16314 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 16315 9020) (PAIR 17552 9302) (PAIR 16317 0) (PAIR 17566 9306) (PAIR 16318 9023) (PAIR 16319 9000) (PAIR 53 11656) (PAIR 53 11659) (PAIR 16320 9028) (PAIR 53 9031) (PAIR 16321 0) (PAIR 16323 8940) (PAIR 16324 8935) (PAIR 53 0) (PAIR 38 0) (PAIR 16325 0) (PAIR 16327 0) (PAIR 16328 9035) (PAIR 25 0) (PAIR 55 9041) (PAIR 16329 0) (PAIR 16330 0) (PAIR 16331 9040) (PAIR 53 0) (PAIR 38 0) (PAIR 16332 0) (PAIR 16334 0) (PAIR 16335 9045) (PAIR 37 0) (PAIR 16337 0) (PAIR 16339 9052) (PAIR 53 0) (PAIR 53 0) (PAIR 16340 0) (PAIR 16342 0) (PAIR 16344 9053) (PAIR 16350 0) (PAIR 16353 9059) (PAIR 16361 9060) (PAIR 16362 9061) (PAIR 11679 0) (PAIR 61 9063) (PAIR 53 0) (PAIR 53 0) (PAIR 16345 0) (PAIR 53 0) (PAIR 37 0) (PAIR 16346 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16348 0) (PAIR 11966 0) (PAIR 61 9078) (PAIR 9079 0) (PAIR 69 0) (PAIR 61 9081) (PAIR 9082 9080) (PAIR 81 0) (PAIR 61 9084) (PAIR 9085 9083) (PAIR 16350 0) (PAIR 11673 0) (PAIR 61 9088) (PAIR 11966 0) (PAIR 61 9090) (PAIR 9091 0) (PAIR 16353 9087) (PAIR 11679 0) (PAIR 61 9094) (PAIR 53 0) (PAIR 53 0) (PAIR 16355 0) (PAIR 53 0) (PAIR 37 0) (PAIR 16356 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 16358 0) (PAIR 11966 0) (PAIR 61 9109) (PAIR 9110 0) (PAIR 69 0) (PAIR 61 9112) (PAIR 9113 9111) (PAIR 81 0) (PAIR 61 9115) (PAIR 9116 9114) (PAIR 16360 0) (PAIR 61 0) (PAIR 16361 9093) (PAIR 53 0) (PAIR 53 0) (PAIR 16362 9120) (PAIR 16364 9058) (PAIR 16365 9050) (PAIR 16367 0) (PAIR 16369 9126) (PAIR 16371 9127) (PAIR 53 0) (PAIR 53 0) (PAIR 16373 9128) (PAIR 16374 9125) (PAIR 53 0) (PAIR 38 0) (PAIR 16375 0) (PAIR 16377 0) (PAIR 16378 9132) (PAIR 26 0) (PAIR 55 9138) (PAIR 78 0) (PAIR 16380 0) (PAIR 16382 0) (PAIR 16383 9137) (PAIR 53 0) (PAIR 38 0) (PAIR 16384 0) (PAIR 16386 0) (PAIR 16387 9143) (PAIR 16389 0) (PAIR 16390 9148) (PAIR 53 0) (PAIR 16392 0) (PAIR 16393 9150) (PAIR 20 0) (PAIR 55 9154) (PAIR 9658 0) (PAIR 78 9156) (PAIR 16395 0) (PAIR 16397 0) (PAIR 16398 9153) (PAIR 53 0) (PAIR 38 0) (PAIR 16399 0) (PAIR 16401 0) (PAIR 16402 9160) (PAIR 16404 0) (PAIR 16405 0) (PAIR 16407 9166) (PAIR 16408 0) (PAIR 16410 9168) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 9172) (PAIR 2 0) (PAIR 1 9174) (PAIR 53 9175) (PAIR 16411 0) (PAIR 17506 9177) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16413 9178) (PAIR 17527 9288) (PAIR 16415 0) (PAIR 16416 9181) (PAIR 16435 0) (PAIR 17534 0) (PAIR 16418 0) (PAIR 53 9295) (PAIR 53 9298) (PAIR 16419 9187) (PAIR 17552 9302) (PAIR 16421 0) (PAIR 17566 9306) (PAIR 16422 9190) (PAIR 16423 0) (PAIR 17469 9195) (PAIR 53 9266) (PAIR 53 9269) (PAIR 16424 0) (PAIR 17473 9199) (PAIR 17474 0) (PAIR 17476 0) (PAIR 16426 9196) (PAIR 53 9203) (PAIR 16446 9204) (PAIR 17493 0) (PAIR 17499 9206) (PAIR 17500 9207) (PAIR 16428 0) (PAIR 0 0) (PAIR 53 9210) (PAIR 2 0) (PAIR 1 9212) (PAIR 53 9213) (PAIR 16429 0) (PAIR 17506 9215) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16431 9216) (PAIR 17520 0) (PAIR 17526 9220) (PAIR 17527 9221) (PAIR 16433 0) (PAIR 16434 9219) (PAIR 53 0) (PAIR 37 0) (PAIR 16435 0) (PAIR 17534 0) (PAIR 16437 0) (PAIR 0 0) (PAIR 53 9230) (PAIR 2 0) (PAIR 1 9232) (PAIR 53 9233) (PAIR 16438 9229) (PAIR 17545 0) (PAIR 17551 9236) (PAIR 17552 9237) (PAIR 16440 0) (PAIR 17555 0) (PAIR 17560 9240) (PAIR 17566 9241) (PAIR 16441 9235) (PAIR 16442 0) (PAIR 17469 9244) (PAIR 0 0) (PAIR 53 9246) (PAIR 2 0) (PAIR 1 9248) (PAIR 53 9249) (PAIR 16443 0) (PAIR 17473 9251) (PAIR 17474 0) (PAIR 17476 0) (PAIR 16445 9245) (PAIR 53 9255) (PAIR 0 0) (PAIR 53 9257) (PAIR 2 0) (PAIR 1 9259) (PAIR 53 9260) (PAIR 16446 9256) (PAIR 16448 9170) (PAIR 16449 9165) (PAIR 17469 0) (PAIR 0 0) (PAIR 53 9266) (PAIR 2 0) (PAIR 1 9268) (PAIR 53 9269) (PAIR 16450 0) (PAIR 17473 9271) (PAIR 17474 0) (PAIR 17476 0) (PAIR 16452 9265) (PAIR 17502 0) (PAIR 0 0) (PAIR 53 9277) (PAIR 2 0) (PAIR 1 9279) (PAIR 53 9280) (PAIR 16453 0) (PAIR 17506 9282) (PAIR 17508 0) (PAIR 17510 0) (PAIR 16455 9283) (PAIR 17520 0) (PAIR 17526 9287) (PAIR 17527 9288) (PAIR 16457 0) (PAIR 16458 9286) (PAIR 17532 0) (PAIR 17534 0) (PAIR 16460 0) (PAIR 0 0) (PAIR 53 9295) (PAIR 2 0) (PAIR 1 9297) (PAIR 53 9298) (PAIR 16461 9294) (PAIR 17545 0) (PAIR 17551 9301) (PAIR 17552 9302) (PAIR 16463 0) (PAIR 17555 0) (PAIR 17560 9305) (PAIR 17566 9306) (PAIR 16464 9300) (PAIR 16465 9275) (PAIR 17569 9309) (PAIR 53 9310) (PAIR 53 0) (PAIR 16466 0) (PAIR 16468 0) (PAIR 16469 9264) (PAIR 34 0) (PAIR 55 9316) (PAIR 9658 0) (PAIR 78 9318) (PAIR 82 9319) (PAIR 16471 0) (PAIR 16473 0) (PAIR 16474 9315) (PAIR 53 0) (PAIR 38 0) (PAIR 16475 0) (PAIR 16477 0) (PAIR 16478 9323) (PAIR 16480 0) (PAIR 24 0) (PAIR 16481 0) (PAIR 16483 9329) (PAIR 36 0) (PAIR 16484 0) (PAIR 16486 9332) (PAIR 16497 0) (PAIR 0 9336) (PAIR 53 9337) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16488 9339) (PAIR 17380 0) (PAIR 17382 9343) (PAIR 53 9344) (PAIR 16490 0) (PAIR 16491 9342) (PAIR 2 9347) (PAIR 1 9348) (PAIR 53 9349) (PAIR 16492 0) (PAIR 0 0) (PAIR 16493 0) (PAIR 53 9353) (PAIR 0 9354) (PAIR 17363 0) (PAIR 53 9356) (PAIR 16494 0) (PAIR 0 9358) (PAIR 16495 0) (PAIR 53 9360) (PAIR 0 9361) (PAIR 17369 0) (PAIR 0 9363) (PAIR 16496 0) (PAIR 53 9365) (PAIR 0 9366) (PAIR 16497 0) (PAIR 0 9368) (PAIR 53 9369) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16499 9371) (PAIR 17380 0) (PAIR 17382 9375) (PAIR 53 9376) (PAIR 16501 0) (PAIR 16502 9374) (PAIR 2 9379) (PAIR 1 9380) (PAIR 53 9381) (PAIR 16503 0) (PAIR 16505 9335) (PAIR 16506 9328) (PAIR 16508 0) (PAIR 605 0) (PAIR 16510 9386) (PAIR 16511 9385) (PAIR 21 0) (PAIR 55 9390) (PAIR 9509 0) (PAIR 9658 9392) (PAIR 78 9393) (PAIR 82 9394) (PAIR 16513 0) (PAIR 16515 0) (PAIR 16516 9389) (PAIR 53 0) (PAIR 38 0) (PAIR 16517 0) (PAIR 16519 0) (PAIR 16520 9398) (PAIR 16522 0) (PAIR 16524 9404) (PAIR 16526 9405) (PAIR 0 0) (PAIR 16527 0) (PAIR 53 9408) (PAIR 0 9409) (PAIR 17363 0) (PAIR 53 9411) (PAIR 16528 0) (PAIR 0 9413) (PAIR 16529 0) (PAIR 53 9415) (PAIR 0 9416) (PAIR 17369 0) (PAIR 0 9418) (PAIR 16530 0) (PAIR 53 9420) (PAIR 0 9421) (PAIR 16531 0) (PAIR 0 9423) (PAIR 53 9424) (PAIR 0 0) (PAIR 16532 0) (PAIR 53 9427) (PAIR 0 9428) (PAIR 17363 0) (PAIR 53 9430) (PAIR 16533 0) (PAIR 0 9432) (PAIR 16534 0) (PAIR 53 9434) (PAIR 0 9435) (PAIR 17369 0) (PAIR 0 9437) (PAIR 16535 0) (PAIR 53 9439) (PAIR 0 9440) (PAIR 16536 0) (PAIR 0 9442) (PAIR 53 9443) (PAIR 16538 9406) (PAIR 16539 9403) (PAIR 16540 0) (PAIR 16542 0) (PAIR 53 0) (PAIR 24 0) (PAIR 16543 0) (PAIR 53 0) (PAIR 16545 9448) (PAIR 0 0) (PAIR 16546 0) (PAIR 53 9455) (PAIR 0 9456) (PAIR 17363 0) (PAIR 53 9458) (PAIR 16547 0) (PAIR 0 9460) (PAIR 16548 0) (PAIR 53 9462) (PAIR 0 9463) (PAIR 17369 0) (PAIR 0 9465) (PAIR 16549 0) (PAIR 53 9467) (PAIR 0 9468) (PAIR 16550 0) (PAIR 0 9470) (PAIR 53 9471) (PAIR 17026 0) (PAIR 17149 9473) (PAIR 2 9474) (PAIR 1 9475) (PAIR 53 9476) (PAIR 16551 0) (PAIR 16736 0) (PAIR 53 9479) (PAIR 17026 0) (PAIR 17149 9481) (PAIR 2 9482) (PAIR 1 9483) (PAIR 53 9484) (PAIR 16553 9453) (PAIR 16554 9446) (PAIR 29 0) (PAIR 55 9488) (PAIR 9509 0) (PAIR 9658 9490) (PAIR 78 9491) (PAIR 82 9492) (PAIR 83 9493) (PAIR 16556 0) (PAIR 16558 0) (PAIR 16559 9487) (PAIR 53 0) (PAIR 38 0) (PAIR 16560 0) (PAIR 16562 0) (PAIR 16563 9497) (PAIR 16565 0) (PAIR 53 0) (PAIR 605 0) (PAIR 16567 9503) (PAIR 16568 9502) (PAIR 30 0) (PAIR 55 9508) (PAIR 10497 0) (PAIR 9658 9510) (PAIR 46 9511) (PAIR 78 9512) (PAIR 82 9513) (PAIR 83 9514) (PAIR 16570 0) (PAIR 16572 0) (PAIR 16573 9507) (PAIR 53 0) (PAIR 38 0) (PAIR 16574 0) (PAIR 16576 0) (PAIR 16577 9518) (PAIR 16579 0) (PAIR 16581 9524) (PAIR 53 0) (PAIR 16583 9525) (PAIR 17385 9560) (PAIR 53 0) (PAIR 16584 0) (PAIR 0 9564) (PAIR 16585 0) (PAIR 0 9532) (PAIR 53 9533) (PAIR 0 0) (PAIR 17385 9535) (PAIR 53 0) (PAIR 16586 0) (PAIR 17068 0) (PAIR 0 9539) (PAIR 16587 0) (PAIR 0 9541) (PAIR 53 9542) (PAIR 16589 9527) (PAIR 16590 9523) (PAIR 16592 0) (PAIR 28 0) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16594 9548) (PAIR 17380 0) (PAIR 17382 9552) (PAIR 53 9553) (PAIR 16596 0) (PAIR 16597 9551) (PAIR 53 9556) (PAIR 16598 0) (PAIR 16600 9546) (PAIR 0 0) (PAIR 17385 9560) (PAIR 53 0) (PAIR 16601 0) (PAIR 17068 0) (PAIR 0 9564) (PAIR 16602 0) (PAIR 0 9566) (PAIR 53 9567) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16604 9569) (PAIR 17380 0) (PAIR 17382 9573) (PAIR 53 9574) (PAIR 16606 0) (PAIR 16607 9572) (PAIR 53 9577) (PAIR 16608 0) (PAIR 16781 0) (PAIR 0 9580) (PAIR 53 9581) (PAIR 17380 0) (PAIR 17382 9583) (PAIR 53 9584) (PAIR 16610 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16612 0) (PAIR 17175 9589) (PAIR 53 9590) (PAIR 16613 0) (PAIR 17142 9592) (PAIR 17373 9593) (PAIR 53 9594) (PAIR 16615 9559) (PAIR 16616 9545) (PAIR 31 0) (PAIR 55 9598) (PAIR 10497 0) (PAIR 9658 9600) (PAIR 46 9601) (PAIR 78 9602) (PAIR 82 9603) (PAIR 83 9604) (PAIR 16618 0) (PAIR 16620 0) (PAIR 16621 9597) (PAIR 53 0) (PAIR 38 0) (PAIR 16622 0) (PAIR 16624 0) (PAIR 16625 9608) (PAIR 16627 0) (PAIR 16629 9614) (PAIR 16630 0) (PAIR 16632 9615) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16634 9618) (PAIR 17380 0) (PAIR 17382 9622) (PAIR 53 9623) (PAIR 16636 0) (PAIR 16637 9621) (PAIR 53 9626) (PAIR 17026 0) (PAIR 17149 9628) (PAIR 2 9629) (PAIR 1 9630) (PAIR 53 9631) (PAIR 16638 0) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16640 9634) (PAIR 17380 0) (PAIR 17382 9638) (PAIR 53 9639) (PAIR 16642 0) (PAIR 16643 9637) (PAIR 53 9642) (PAIR 17026 0) (PAIR 17149 9644) (PAIR 2 9645) (PAIR 1 9646) (PAIR 53 9647) (PAIR 16644 0) (PAIR 16646 9617) (PAIR 16647 9613) (PAIR 16649 0) (PAIR 16650 9651) (PAIR 38 0) (PAIR 16652 0) (PAIR 16653 9653) (PAIR 22 0) (PAIR 55 9657) (PAIR 10497 0) (PAIR 10500 9659) (PAIR 45 9660) (PAIR 46 9661) (PAIR 78 9662) (PAIR 82 9663) (PAIR 83 9664) (PAIR 16655 0) (PAIR 16657 0) (PAIR 16658 9656) (PAIR 53 0) (PAIR 38 0) (PAIR 16659 0) (PAIR 16661 0) (PAIR 16662 9668) (PAIR 16664 0) (PAIR 16666 9674) (PAIR 16668 9675) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16670 9677) (PAIR 17380 0) (PAIR 17382 9681) (PAIR 53 9682) (PAIR 16672 0) (PAIR 16673 9680) (PAIR 53 9685) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16675 9687) (PAIR 17380 0) (PAIR 17382 9691) (PAIR 53 9692) (PAIR 16677 0) (PAIR 16678 9690) (PAIR 53 9695) (PAIR 16680 9676) (PAIR 16681 9673) (PAIR 16683 0) (PAIR 16685 9699) (PAIR 53 0) (PAIR 53 0) (PAIR 16687 9700) (PAIR 17026 0) (PAIR 17149 9704) (PAIR 2 9705) (PAIR 1 9706) (PAIR 53 9707) (PAIR 17026 0) (PAIR 17149 9709) (PAIR 2 9710) (PAIR 1 9711) (PAIR 53 9712) (PAIR 16689 9703) (PAIR 16690 9698) (PAIR 16691 0) (PAIR 16693 0) (PAIR 16694 0) (PAIR 16696 9717) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16698 9720) (PAIR 17380 0) (PAIR 17382 9724) (PAIR 53 9725) (PAIR 16700 0) (PAIR 16701 9723) (PAIR 53 9728) (PAIR 24 0) (PAIR 16702 0) (PAIR 53 0) (PAIR 16704 9719) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16706 9734) (PAIR 17380 0) (PAIR 17382 9738) (PAIR 53 9739) (PAIR 16708 0) (PAIR 16709 9737) (PAIR 53 9742) (PAIR 17026 0) (PAIR 17149 9744) (PAIR 2 9745) (PAIR 1 9746) (PAIR 53 9747) (PAIR 16710 0) (PAIR 17380 0) (PAIR 17382 9750) (PAIR 53 9751) (PAIR 16712 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16714 0) (PAIR 17175 9756) (PAIR 53 9757) (PAIR 16715 0) (PAIR 17142 9759) (PAIR 17373 9760) (PAIR 53 9761) (PAIR 17026 0) (PAIR 17149 9763) (PAIR 2 9764) (PAIR 1 9765) (PAIR 53 9766) (PAIR 16717 9733) (PAIR 16718 9715) (PAIR 23 0) (PAIR 55 9770) (PAIR 10497 0) (PAIR 10500 9772) (PAIR 45 9773) (PAIR 46 9774) (PAIR 78 9775) (PAIR 82 9776) (PAIR 83 9777) (PAIR 16720 0) (PAIR 16722 0) (PAIR 16723 9769) (PAIR 53 0) (PAIR 38 0) (PAIR 16724 0) (PAIR 16726 0) (PAIR 16727 9781) (PAIR 16729 0) (PAIR 16731 9787) (PAIR 17479 0) (PAIR 0 9789) (PAIR 53 9854) (PAIR 16732 0) (PAIR 0 9792) (PAIR 0 0) (PAIR 16733 0) (PAIR 53 9795) (PAIR 0 9796) (PAIR 53 0) (PAIR 16734 0) (PAIR 0 9864) (PAIR 16735 0) (PAIR 0 9801) (PAIR 53 9802) (PAIR 16736 0) (PAIR 53 9804) (PAIR 17479 0) (PAIR 0 9806) (PAIR 17363 0) (PAIR 53 9808) (PAIR 16737 0) (PAIR 0 9810) (PAIR 0 0) (PAIR 16738 0) (PAIR 53 9813) (PAIR 0 9814) (PAIR 53 0) (PAIR 16739 0) (PAIR 17369 0) (PAIR 0 9818) (PAIR 16740 0) (PAIR 0 9820) (PAIR 53 9821) (PAIR 16741 0) (PAIR 53 9823) (PAIR 16804 0) (PAIR 0 9825) (PAIR 53 9826) (PAIR 16742 0) (PAIR 2 9828) (PAIR 1 9829) (PAIR 53 9830) (PAIR 594 0) (PAIR 16744 9788) (PAIR 16745 9786) (PAIR 10500 0) (PAIR 45 9835) (PAIR 46 9836) (PAIR 78 9837) (PAIR 82 9838) (PAIR 83 9839) (PAIR 16747 0) (PAIR 16749 0) (PAIR 16750 9834) (PAIR 53 0) (PAIR 38 0) (PAIR 16751 0) (PAIR 16753 0) (PAIR 16754 9843) (PAIR 16756 0) (PAIR 16758 9849) (PAIR 16760 9850) (PAIR 17479 0) (PAIR 0 9852) (PAIR 17363 0) (PAIR 53 9854) (PAIR 16761 0) (PAIR 0 9856) (PAIR 0 0) (PAIR 16762 0) (PAIR 53 9859) (PAIR 0 9860) (PAIR 53 0) (PAIR 16763 0) (PAIR 17369 0) (PAIR 0 9864) (PAIR 16764 0) (PAIR 0 9866) (PAIR 53 9867) (PAIR 16765 0) (PAIR 53 9869) (PAIR 16804 0) (PAIR 0 9871) (PAIR 53 9872) (PAIR 16766 0) (PAIR 2 9874) (PAIR 1 9875) (PAIR 53 9876) (PAIR 17479 0) (PAIR 0 9878) (PAIR 17363 0) (PAIR 53 9880) (PAIR 16767 0) (PAIR 0 9882) (PAIR 0 0) (PAIR 16768 0) (PAIR 53 9885) (PAIR 0 9886) (PAIR 53 0) (PAIR 16769 0) (PAIR 17369 0) (PAIR 0 9890) (PAIR 16770 0) (PAIR 0 9892) (PAIR 53 9893) (PAIR 16771 0) (PAIR 53 9895) (PAIR 16804 0) (PAIR 0 9897) (PAIR 53 9898) (PAIR 16772 0) (PAIR 2 9900) (PAIR 1 9901) (PAIR 53 9902) (PAIR 16774 9851) (PAIR 16775 9848) (PAIR 16777 0) (PAIR 16779 9906) (PAIR 0 0) (PAIR 17385 9908) (PAIR 53 0) (PAIR 16780 0) (PAIR 17068 0) (PAIR 0 9912) (PAIR 16781 0) (PAIR 0 9914) (PAIR 53 9915) (PAIR 595 0) (PAIR 16783 9907) (PAIR 16784 9905) (PAIR 10016 0) (PAIR 45 9920) (PAIR 46 9921) (PAIR 59 9922) (PAIR 78 9923) (PAIR 82 9924) (PAIR 83 9925) (PAIR 16786 0) (PAIR 16788 0) (PAIR 16789 9919) (PAIR 53 0) (PAIR 38 0) (PAIR 16790 0) (PAIR 16792 0) (PAIR 16793 9929) (PAIR 16795 0) (PAIR 16797 9935) (PAIR 17479 0) (PAIR 0 9937) (PAIR 17363 0) (PAIR 53 9939) (PAIR 16798 0) (PAIR 0 9941) (PAIR 0 0) (PAIR 16799 0) (PAIR 53 9944) (PAIR 0 9945) (PAIR 53 0) (PAIR 16800 0) (PAIR 17369 0) (PAIR 0 9949) (PAIR 16801 0) (PAIR 0 9951) (PAIR 53 9952) (PAIR 16802 0) (PAIR 53 9954) (PAIR 0 0) (PAIR 17385 9956) (PAIR 53 0) (PAIR 16803 0) (PAIR 17068 0) (PAIR 0 9960) (PAIR 16804 0) (PAIR 0 9962) (PAIR 53 9963) (PAIR 16805 0) (PAIR 2 9965) (PAIR 1 9966) (PAIR 53 9967) (PAIR 17007 0) (PAIR 0 9969) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 9972) (PAIR 0 0) (PAIR 16806 0) (PAIR 0 9975) (PAIR 16807 0) (PAIR 0 9977) (PAIR 53 9978) (PAIR 16808 0) (PAIR 53 9980) (PAIR 17015 0) (PAIR 0 9982) (PAIR 53 9983) (PAIR 16809 0) (PAIR 2 9985) (PAIR 1 9986) (PAIR 53 9987) (PAIR 17380 0) (PAIR 17382 9989) (PAIR 53 9990) (PAIR 16811 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16813 0) (PAIR 17175 9995) (PAIR 53 9996) (PAIR 16814 0) (PAIR 17142 9998) (PAIR 17373 9999) (PAIR 53 10000) (PAIR 17026 0) (PAIR 17149 10002) (PAIR 2 10003) (PAIR 1 10004) (PAIR 53 10005) (PAIR 16815 0) (PAIR 17152 10007) (PAIR 53 10008) (PAIR 16816 0) (PAIR 594 0) (PAIR 16818 9936) (PAIR 16819 9934) (PAIR 10497 0) (PAIR 10500 10014) (PAIR 47 10015) (PAIR 45 0) (PAIR 46 10017) (PAIR 59 10018) (PAIR 60 10019) (PAIR 78 10020) (PAIR 82 10021) (PAIR 83 10022) (PAIR 16821 0) (PAIR 16823 0) (PAIR 16824 10013) (PAIR 53 0) (PAIR 38 0) (PAIR 16825 0) (PAIR 16827 0) (PAIR 16828 10026) (PAIR 16830 0) (PAIR 16831 10031) (PAIR 16833 0) (PAIR 16835 10034) (PAIR 53 10090) (PAIR 16837 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16839 0) (PAIR 17175 10040) (PAIR 53 10041) (PAIR 16840 0) (PAIR 17142 10043) (PAIR 17373 10044) (PAIR 53 10045) (PAIR 17380 0) (PAIR 17382 10047) (PAIR 53 10048) (PAIR 16842 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16844 0) (PAIR 17175 10053) (PAIR 53 10054) (PAIR 16845 0) (PAIR 17142 10056) (PAIR 17373 10057) (PAIR 53 10058) (PAIR 17026 0) (PAIR 17149 10060) (PAIR 2 10061) (PAIR 1 10062) (PAIR 53 10063) (PAIR 16846 0) (PAIR 17152 10065) (PAIR 53 10066) (PAIR 594 0) (PAIR 16848 10035) (PAIR 16849 10033) (PAIR 10508 0) (PAIR 46 10071) (PAIR 59 10072) (PAIR 60 10073) (PAIR 78 10074) (PAIR 82 10075) (PAIR 83 10076) (PAIR 16851 0) (PAIR 16853 0) (PAIR 16854 10070) (PAIR 53 0) (PAIR 38 0) (PAIR 16855 0) (PAIR 16857 0) (PAIR 16858 10080) (PAIR 16860 0) (PAIR 16862 10086) (PAIR 16864 10087) (PAIR 17380 0) (PAIR 17382 10089) (PAIR 53 10090) (PAIR 16866 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16868 0) (PAIR 17175 10095) (PAIR 53 10096) (PAIR 16869 0) (PAIR 17142 10098) (PAIR 17373 10099) (PAIR 53 10100) (PAIR 17026 0) (PAIR 17149 10102) (PAIR 2 10103) (PAIR 1 10104) (PAIR 53 10105) (PAIR 16870 0) (PAIR 17152 10107) (PAIR 53 10108) (PAIR 17380 0) (PAIR 17382 10110) (PAIR 53 10111) (PAIR 16872 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16874 0) (PAIR 17175 10116) (PAIR 53 10117) (PAIR 16875 0) (PAIR 17142 10119) (PAIR 17373 10120) (PAIR 53 10121) (PAIR 17026 0) (PAIR 17149 10123) (PAIR 2 10124) (PAIR 1 10125) (PAIR 53 10126) (PAIR 16876 0) (PAIR 17152 10128) (PAIR 53 10129) (PAIR 16878 10088) (PAIR 16879 10085) (PAIR 16881 0) (PAIR 16883 10133) (PAIR 17026 0) (PAIR 17149 10135) (PAIR 2 10136) (PAIR 1 10137) (PAIR 53 10138) (PAIR 595 0) (PAIR 16885 10134) (PAIR 16886 10132) (PAIR 10508 0) (PAIR 10275 10143) (PAIR 59 10144) (PAIR 60 10145) (PAIR 78 10146) (PAIR 82 10147) (PAIR 83 10148) (PAIR 16888 0) (PAIR 16890 0) (PAIR 16891 10142) (PAIR 53 0) (PAIR 38 0) (PAIR 16892 0) (PAIR 16894 0) (PAIR 16895 10152) (PAIR 16897 0) (PAIR 16899 10158) (PAIR 16900 0) (PAIR 16902 10159) (PAIR 17007 0) (PAIR 0 10162) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 10165) (PAIR 0 0) (PAIR 16903 0) (PAIR 0 10168) (PAIR 16904 0) (PAIR 0 10170) (PAIR 53 10171) (PAIR 16905 0) (PAIR 53 10173) (PAIR 17015 0) (PAIR 0 10175) (PAIR 53 10176) (PAIR 16906 0) (PAIR 2 10178) (PAIR 1 10179) (PAIR 53 10180) (PAIR 53 10251) (PAIR 16908 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16910 0) (PAIR 17175 10186) (PAIR 53 10187) (PAIR 16911 0) (PAIR 17142 10189) (PAIR 17373 10190) (PAIR 53 10191) (PAIR 17026 0) (PAIR 17149 10193) (PAIR 2 10194) (PAIR 1 10195) (PAIR 53 10196) (PAIR 16912 0) (PAIR 17152 10198) (PAIR 53 10199) (PAIR 16913 0) (PAIR 17007 0) (PAIR 0 10202) (PAIR 17009 0) (PAIR 17010 0) (PAIR 0 10205) (PAIR 0 0) (PAIR 16914 0) (PAIR 0 10208) (PAIR 16915 0) (PAIR 0 10210) (PAIR 53 10211) (PAIR 16916 0) (PAIR 53 10213) (PAIR 17015 0) (PAIR 0 10215) (PAIR 53 10216) (PAIR 16917 0) (PAIR 2 10218) (PAIR 1 10219) (PAIR 53 10220) (PAIR 17380 0) (PAIR 17382 10222) (PAIR 53 10223) (PAIR 16919 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16921 0) (PAIR 17175 10228) (PAIR 53 10229) (PAIR 16922 0) (PAIR 17142 10231) (PAIR 17373 10232) (PAIR 53 10233) (PAIR 17026 0) (PAIR 17149 10235) (PAIR 2 10236) (PAIR 1 10237) (PAIR 53 10238) (PAIR 16923 0) (PAIR 17152 10240) (PAIR 53 10241) (PAIR 16924 0) (PAIR 16926 10161) (PAIR 16927 10157) (PAIR 16929 0) (PAIR 16930 10245) (PAIR 16932 0) (PAIR 16934 10248) (PAIR 17380 0) (PAIR 17382 10250) (PAIR 53 10251) (PAIR 16936 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16938 0) (PAIR 17175 10256) (PAIR 53 10257) (PAIR 16939 0) (PAIR 17142 10259) (PAIR 17373 10260) (PAIR 53 10261) (PAIR 17026 0) (PAIR 17149 10263) (PAIR 2 10264) (PAIR 1 10265) (PAIR 53 10266) (PAIR 16940 0) (PAIR 17152 10268) (PAIR 53 10269) (PAIR 16942 10249) (PAIR 16943 10247) (PAIR 45 0) (PAIR 46 10273) (PAIR 47 10274) (PAIR 10508 0) (PAIR 59 10276) (PAIR 60 10277) (PAIR 78 10278) (PAIR 82 10279) (PAIR 83 10280) (PAIR 16945 0) (PAIR 16947 0) (PAIR 16948 10272) (PAIR 53 0) (PAIR 38 0) (PAIR 16949 0) (PAIR 16951 0) (PAIR 16952 10284) (PAIR 16954 0) (PAIR 16956 10290) (PAIR 37 0) (PAIR 28 0) (PAIR 16957 0) (PAIR 16959 10291) (PAIR 17074 0) (PAIR 0 10296) (PAIR 17078 0) (PAIR 53 10298) (PAIR 16960 0) (PAIR 0 10300) (PAIR 0 0) (PAIR 16961 0) (PAIR 53 10303) (PAIR 0 10304) (PAIR 53 0) (PAIR 16962 0) (PAIR 17084 0) (PAIR 0 10308) (PAIR 16963 0) (PAIR 0 10310) (PAIR 53 10311) (PAIR 16964 0) (PAIR 53 10313) (PAIR 17092 0) (PAIR 53 10315) (PAIR 0 10316) (PAIR 16965 0) (PAIR 2 10318) (PAIR 1 10319) (PAIR 53 10320) (PAIR 17074 0) (PAIR 0 10322) (PAIR 17078 0) (PAIR 53 10324) (PAIR 16966 0) (PAIR 0 10326) (PAIR 0 0) (PAIR 16967 0) (PAIR 53 10329) (PAIR 0 10330) (PAIR 53 0) (PAIR 16968 0) (PAIR 17084 0) (PAIR 0 10334) (PAIR 16969 0) (PAIR 0 10336) (PAIR 53 10337) (PAIR 16970 0) (PAIR 53 10339) (PAIR 17092 0) (PAIR 53 10341) (PAIR 0 10342) (PAIR 16971 0) (PAIR 2 10344) (PAIR 1 10345) (PAIR 53 10346) (PAIR 16973 10295) (PAIR 16974 10289) (PAIR 16976 0) (PAIR 16978 10350) (PAIR 36 0) (PAIR 24 0) (PAIR 16979 0) (PAIR 16981 10351) (PAIR 53 10445) (PAIR 16983 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16985 0) (PAIR 17175 10360) (PAIR 53 10361) (PAIR 16986 0) (PAIR 17178 10363) (PAIR 17180 10364) (PAIR 53 10365) (PAIR 17185 0) (PAIR 17187 10367) (PAIR 2 10368) (PAIR 53 10369) (PAIR 1 10370) (PAIR 16987 0) (PAIR 17190 10372) (PAIR 53 10373) (PAIR 17380 0) (PAIR 17382 10375) (PAIR 53 10376) (PAIR 16989 0) (PAIR 37 0) (PAIR 603 0) (PAIR 16991 0) (PAIR 17175 10381) (PAIR 53 10382) (PAIR 16992 0) (PAIR 17178 10384) (PAIR 17180 10385) (PAIR 53 10386) (PAIR 17185 0) (PAIR 17187 10388) (PAIR 2 10389) (PAIR 53 10390) (PAIR 1 10391) (PAIR 16993 0) (PAIR 17190 10393) (PAIR 53 10394) (PAIR 16995 10355) (PAIR 16996 10349) (PAIR 16997 0) (PAIR 16999 0) (PAIR 17000 0) (PAIR 17001 0) (PAIR 17002 0) (PAIR 17004 10399) (PAIR 17479 0) (PAIR 0 10404) (PAIR 53 0) (PAIR 0 10406) (PAIR 17005 0) (PAIR 0 10408) (PAIR 17006 0) (PAIR 53 10410) (PAIR 17007 0) (PAIR 0 10412) (PAIR 0 0) (PAIR 17008 0) (PAIR 53 10415) (PAIR 0 10416) (PAIR 53 0) (PAIR 17009 0) (PAIR 53 0) (PAIR 17010 0) (PAIR 0 10421) (PAIR 0 0) (PAIR 17011 0) (PAIR 0 10424) (PAIR 17012 0) (PAIR 0 10426) (PAIR 53 10427) (PAIR 17013 0) (PAIR 53 10429) (PAIR 0 0) (PAIR 17385 10431) (PAIR 53 0) (PAIR 17014 0) (PAIR 17068 0) (PAIR 0 10435) (PAIR 17015 0) (PAIR 0 10437) (PAIR 53 10438) (PAIR 17016 0) (PAIR 2 10440) (PAIR 1 10441) (PAIR 53 10442) (PAIR 17380 0) (PAIR 17382 10444) (PAIR 53 10445) (PAIR 17018 0) (PAIR 37 0) (PAIR 603 0) (PAIR 17020 0) (PAIR 17175 10450) (PAIR 53 10451) (PAIR 17021 0) (PAIR 17142 10453) (PAIR 17373 10454) (PAIR 53 10455) (PAIR 11966 0) (PAIR 17023 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10460) (PAIR 81 10461) (PAIR 17025 0) (PAIR 17026 0) (PAIR 17149 10464) (PAIR 2 10465) (PAIR 1 10466) (PAIR 53 10467) (PAIR 17027 0) (PAIR 17152 10469) (PAIR 53 10470) (PAIR 17028 0) (PAIR 17380 0) (PAIR 17382 10473) (PAIR 53 10474) (PAIR 17030 0) (PAIR 37 0) (PAIR 603 0) (PAIR 17032 0) (PAIR 17175 10479) (PAIR 53 10480) (PAIR 17033 0) (PAIR 17178 10482) (PAIR 17180 10483) (PAIR 53 10484) (PAIR 17185 0) (PAIR 17187 10486) (PAIR 2 10487) (PAIR 53 10488) (PAIR 1 10489) (PAIR 17034 0) (PAIR 17190 10491) (PAIR 53 10492) (PAIR 17036 10403) (PAIR 17037 10397) (PAIR 45 0) (PAIR 44 10496) (PAIR 10497 0) (PAIR 46 0) (PAIR 44 10499) (PAIR 10500 10498) (PAIR 47 10501) (PAIR 10502 0) (PAIR 45 0) (PAIR 46 10504) (PAIR 47 10505) (PAIR 10506 10503) (PAIR 47 10507) (PAIR 59 0) (PAIR 60 10509) (PAIR 78 10510) (PAIR 82 10511) (PAIR 83 10512) (PAIR 17039 0) (PAIR 17041 0) (PAIR 17042 10495) (PAIR 53 0) (PAIR 38 0) (PAIR 17043 0) (PAIR 17045 0) (PAIR 17046 10516) (PAIR 17048 0) (PAIR 17049 10521) (PAIR 17050 0) (PAIR 17052 0) (PAIR 17479 0) (PAIR 0 10526) (PAIR 0 0) (PAIR 53 0) (PAIR 17054 10528) (PAIR 17055 0) (PAIR 0 10531) (PAIR 17056 0) (PAIR 53 10533) (PAIR 17057 0) (PAIR 0 10535) (PAIR 53 0) (PAIR 0 0) (PAIR 17058 10537) (PAIR 0 10539) (PAIR 53 0) (PAIR 17059 0) (PAIR 17060 0) (PAIR 17061 0) (PAIR 17062 0) (PAIR 0 10545) (PAIR 17063 0) (PAIR 0 10547) (PAIR 53 10548) (PAIR 17064 0) (PAIR 53 10550) (PAIR 0 0) (PAIR 17385 10552) (PAIR 53 0) (PAIR 17065 0) (PAIR 17066 0) (PAIR 17067 0) (PAIR 17068 0) (PAIR 0 10558) (PAIR 17069 0) (PAIR 0 10560) (PAIR 53 10561) (PAIR 17070 0) (PAIR 53 10563) (PAIR 17247 0) (PAIR 17251 10565) (PAIR 17236 10566) (PAIR 53 10567) (PAIR 17247 0) (PAIR 17251 10569) (PAIR 17191 10570) (PAIR 53 10571) (PAIR 17071 0) (PAIR 596 0) (PAIR 17073 10525) (PAIR 17074 0) (PAIR 0 10576) (PAIR 0 0) (PAIR 53 0) (PAIR 17076 10578) (PAIR 17077 0) (PAIR 0 10581) (PAIR 17078 0) (PAIR 53 10583) (PAIR 17079 0) (PAIR 0 10585) (PAIR 53 0) (PAIR 0 0) (PAIR 17080 10587) (PAIR 0 10589) (PAIR 53 0) (PAIR 17081 0) (PAIR 17082 0) (PAIR 17083 0) (PAIR 17084 0) (PAIR 0 10595) (PAIR 17085 0) (PAIR 0 10597) (PAIR 53 10598) (PAIR 17086 0) (PAIR 53 10600) (PAIR 0 0) (PAIR 17087 10602) (PAIR 53 0) (PAIR 17088 0) (PAIR 17089 0) (PAIR 17090 0) (PAIR 17091 0) (PAIR 0 10608) (PAIR 17092 0) (PAIR 53 10610) (PAIR 0 10611) (PAIR 17093 0) (PAIR 53 10613) (PAIR 17218 0) (PAIR 17251 10615) (PAIR 17252 10616) (PAIR 53 10617) (PAIR 17095 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17096 0) (PAIR 17630 0) (PAIR 17098 0) (PAIR 17233 10624) (PAIR 17234 10625) (PAIR 53 10626) (PAIR 17099 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 10630) (PAIR 17100 0) (PAIR 17101 0) (PAIR 17103 10575) (PAIR 17104 10523) (PAIR 36 0) (PAIR 55 10636) (PAIR 10658 0) (PAIR 59 10638) (PAIR 60 10639) (PAIR 78 10640) (PAIR 82 10641) (PAIR 83 10642) (PAIR 17106 0) (PAIR 17108 0) (PAIR 17109 10635) (PAIR 53 0) (PAIR 38 0) (PAIR 17110 0) (PAIR 17112 0) (PAIR 17113 10646) (PAIR 53 0) (PAIR 38 0) (PAIR 17114 0) (PAIR 17116 0) (PAIR 17117 10651) (PAIR 38 0) (PAIR 55 10657) (PAIR 11863 0) (PAIR 71 10659) (PAIR 59 10660) (PAIR 60 10661) (PAIR 78 10662) (PAIR 82 10663) (PAIR 83 10664) (PAIR 17119 0) (PAIR 17121 0) (PAIR 17122 10656) (PAIR 17123 0) (PAIR 17125 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10672) (PAIR 81 10673) (PAIR 17127 0) (PAIR 17128 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10678) (PAIR 81 10679) (PAIR 17130 10676) (PAIR 53 10681) (PAIR 17132 0) (PAIR 37 0) (PAIR 603 0) (PAIR 17134 0) (PAIR 11966 0) (PAIR 17136 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10690) (PAIR 81 10691) (PAIR 17138 0) (PAIR 17139 10686) (PAIR 53 10694) (PAIR 17140 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10698) (PAIR 81 10699) (PAIR 17142 10696) (PAIR 17373 10701) (PAIR 53 10702) (PAIR 11966 0) (PAIR 17144 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10707) (PAIR 81 10708) (PAIR 17146 0) (PAIR 17147 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10713) (PAIR 81 10714) (PAIR 17149 10711) (PAIR 2 10716) (PAIR 1 10717) (PAIR 53 10718) (PAIR 17150 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10722) (PAIR 81 10723) (PAIR 17152 10720) (PAIR 53 10725) (PAIR 17247 10948) (PAIR 17251 10727) (PAIR 17236 10728) (PAIR 53 10729) (PAIR 53 0) (PAIR 53 0) (PAIR 17153 0) (PAIR 17246 10733) (PAIR 53 10734) (PAIR 17154 0) (PAIR 17251 10736) (PAIR 17252 10737) (PAIR 53 10738) (PAIR 593 0) (PAIR 17156 10670) (PAIR 17218 0) (PAIR 17251 10742) (PAIR 17252 10743) (PAIR 53 10744) (PAIR 17158 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17159 0) (PAIR 17630 0) (PAIR 17161 0) (PAIR 17233 10751) (PAIR 17234 10752) (PAIR 53 10753) (PAIR 17162 0) (PAIR 17251 10755) (PAIR 17236 10756) (PAIR 53 10757) (PAIR 0 10828) (PAIR 2 10829) (PAIR 1 10760) (PAIR 17163 0) (PAIR 17247 10762) (PAIR 17251 10763) (PAIR 53 10764) (PAIR 17164 0) (PAIR 593 0) (PAIR 17166 10741) (PAIR 17380 0) (PAIR 17382 10769) (PAIR 53 10770) (PAIR 11966 0) (PAIR 17168 0) (PAIR 37 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10776) (PAIR 81 10777) (PAIR 17170 0) (PAIR 11966 0) (PAIR 17172 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10783) (PAIR 81 10784) (PAIR 17174 0) (PAIR 17175 10779) (PAIR 53 10787) (PAIR 17176 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10791) (PAIR 81 10792) (PAIR 17178 10789) (PAIR 11966 0) (PAIR 17180 10794) (PAIR 53 10796) (PAIR 11966 0) (PAIR 17182 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10801) (PAIR 81 10802) (PAIR 17184 0) (PAIR 17185 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10807) (PAIR 81 10808) (PAIR 17187 10805) (PAIR 2 10810) (PAIR 53 10811) (PAIR 1 10812) (PAIR 17188 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 10816) (PAIR 81 10817) (PAIR 17190 10814) (PAIR 53 10819) (PAIR 17469 0) (PAIR 17247 10821) (PAIR 17251 10822) (PAIR 17236 10823) (PAIR 53 10824) (PAIR 17247 0) (PAIR 17251 10826) (PAIR 53 0) (PAIR 53 0) (PAIR 17191 10827) (PAIR 53 10830) (PAIR 61 0) (PAIR 17192 0) (PAIR 17194 10768) (PAIR 17195 10668) (PAIR 17197 0) (PAIR 17198 10835) (PAIR 17200 0) (PAIR 17202 10838) (PAIR 37 0) (PAIR 38 0) (PAIR 17203 0) (PAIR 61 0) (PAIR 17204 0) (PAIR 17206 10839) (PAIR 17218 0) (PAIR 17251 10846) (PAIR 17252 10847) (PAIR 53 10848) (PAIR 17208 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17209 0) (PAIR 17630 0) (PAIR 17211 0) (PAIR 17233 10855) (PAIR 17234 10856) (PAIR 53 10857) (PAIR 17212 0) (PAIR 17242 10859) (PAIR 17251 10860) (PAIR 17236 10861) (PAIR 53 10862) (PAIR 53 0) (PAIR 0 10864) (PAIR 53 0) (PAIR 2 10866) (PAIR 1 10867) (PAIR 17213 0) (PAIR 17249 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17214 0) (PAIR 17476 0) (PAIR 17216 10869) (PAIR 17247 10875) (PAIR 53 10876) (PAIR 17217 0) (PAIR 17251 10878) (PAIR 17252 10879) (PAIR 53 10880) (PAIR 11673 0) (PAIR 61 10882) (PAIR 17218 0) (PAIR 17251 10884) (PAIR 17252 10885) (PAIR 53 10886) (PAIR 11966 0) (PAIR 61 10888) (PAIR 10889 0) (PAIR 17220 0) (PAIR 11679 0) (PAIR 61 10892) (PAIR 53 0) (PAIR 37 0) (PAIR 17221 0) (PAIR 17630 0) (PAIR 11966 0) (PAIR 61 10898) (PAIR 10899 0) (PAIR 11792 10900) (PAIR 11795 10901) (PAIR 17223 0) (PAIR 53 0) (PAIR 53 0) (PAIR 17224 0) (PAIR 17226 0) (PAIR 53 0) (PAIR 53 0) (PAIR 17227 0) (PAIR 37 0) (PAIR 37 0) (PAIR 17228 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17230 0) (PAIR 17232 0) (PAIR 17233 10903) (PAIR 53 0) (PAIR 53 0) (PAIR 17234 10922) (PAIR 53 10925) (PAIR 61 0) (PAIR 17235 0) (PAIR 17242 10928) (PAIR 17251 10929) (PAIR 53 0) (PAIR 53 0) (PAIR 17236 10930) (PAIR 53 10933) (PAIR 53 0) (PAIR 0 10935) (PAIR 53 0) (PAIR 2 10937) (PAIR 1 10938) (PAIR 17237 0) (PAIR 17249 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17238 0) (PAIR 17476 0) (PAIR 17240 10940) (PAIR 17500 0) (PAIR 17242 0) (PAIR 17243 0) (PAIR 37 0) (PAIR 17244 0) (PAIR 17534 0) (PAIR 17246 0) (PAIR 17247 10946) (PAIR 53 10954) (PAIR 61 0) (PAIR 17248 0) (PAIR 17249 0) (PAIR 17474 0) (PAIR 17476 0) (PAIR 17251 10957) (PAIR 53 0) (PAIR 53 0) (PAIR 17252 10961) (PAIR 53 10964) (PAIR 17254 10845) (PAIR 17255 10837) (PAIR 17257 0) (PAIR 17258 10967) (PAIR 17260 0) (PAIR 17261 10969) (PAIR 53 0) (PAIR 38 0) (PAIR 17262 0) (PAIR 17264 0) (PAIR 17265 10971) (PAIR 25 0) (PAIR 55 10977) (PAIR 10978 0) (PAIR 61 10979) (PAIR 11005 0) (PAIR 11059 10981) (PAIR 11009 10982) (PAIR 11880 10983) (PAIR 11883 10984) (PAIR 11889 10985) (PAIR 11892 10986) (PAIR 11895 10987) (PAIR 11898 10988) (PAIR 11901 10989) (PAIR 11904 10990) (PAIR 17267 0) (PAIR 17269 0) (PAIR 17270 10976) (PAIR 17272 0) (PAIR 17273 10994) (PAIR 17275 0) (PAIR 17276 10996) (PAIR 26 0) (PAIR 55 10999) (PAIR 11000 0) (PAIR 61 11001) (PAIR 17277 0) (PAIR 48 0) (PAIR 61 11004) (PAIR 11005 0) (PAIR 11059 11006) (PAIR 49 0) (PAIR 61 11008) (PAIR 11009 11007) (PAIR 11880 11010) (PAIR 11883 11011) (PAIR 11889 11012) (PAIR 11892 11013) (PAIR 11895 11014) (PAIR 11898 11015) (PAIR 11901 11016) (PAIR 11904 11017) (PAIR 11907 11018) (PAIR 17279 0) (PAIR 17280 0) (PAIR 17282 0) (PAIR 17283 10998) (PAIR 61 0) (PAIR 17284 0) (PAIR 17286 0) (PAIR 17287 11023) (PAIR 17289 0) (PAIR 17290 11027) (PAIR 17292 0) (PAIR 17293 11029) (PAIR 17295 0) (PAIR 17296 11031) (PAIR 27 0) (PAIR 55 11034) (PAIR 11035 0) (PAIR 61 11036) (PAIR 17297 0) (PAIR 17298 0) (PAIR 17299 11033) (PAIR 17301 0) (PAIR 17302 11040) (PAIR 11059 0) (PAIR 11880 11043) (PAIR 11883 11044) (PAIR 11889 11045) (PAIR 11892 11046) (PAIR 11895 11047) (PAIR 11898 11048) (PAIR 11901 11049) (PAIR 11904 11050) (PAIR 11907 11051) (PAIR 17307 0) (PAIR 48 0) (PAIR 61 11054) (PAIR 49 0) (PAIR 61 11056) (PAIR 66 0) (PAIR 61 11058) (PAIR 11059 0) (PAIR 11880 11060) (PAIR 11883 11061) (PAIR 11889 11062) (PAIR 11892 11063) (PAIR 11895 11064) (PAIR 11898 11065) (PAIR 11901 11066) (PAIR 11904 11067) (PAIR 11907 11068) (PAIR 17312 0) (PAIR 17314 0) (PAIR 17315 11042) (PAIR 17317 0) (PAIR 17318 11072) (PAIR 17320 0) (PAIR 17322 11075) (PAIR 28 0) (PAIR 17324 11076) (PAIR 53 0) (PAIR 17326 11078) (PAIR 17327 11074) (PAIR 17329 0) (PAIR 17330 11081) (PAIR 17332 0) (PAIR 17333 11083) (PAIR 29 0) (PAIR 55 11086) (PAIR 71 0) (PAIR 17335 0) (PAIR 17337 0) (PAIR 17338 11085) (PAIR 17340 0) (PAIR 17341 11091) (PAIR 17343 0) (PAIR 17344 0) (PAIR 17346 11094) (PAIR 17347 0) (PAIR 17349 11096) (PAIR 0 0) (PAIR 17350 0) (PAIR 53 11100) (PAIR 0 11101) (PAIR 17363 0) (PAIR 53 11103) (PAIR 17351 0) (PAIR 0 11105) (PAIR 17352 0) (PAIR 0 11107) (PAIR 53 11108) (PAIR 17369 0) (PAIR 0 11110) (PAIR 17353 0) (PAIR 53 11112) (PAIR 0 11113) (PAIR 17354 0) (PAIR 0 11115) (PAIR 53 11116) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 17356 11118) (PAIR 17380 0) (PAIR 17382 11122) (PAIR 53 11123) (PAIR 17358 0) (PAIR 0 0) (PAIR 17385 11126) (PAIR 53 0) (PAIR 17359 11125) (PAIR 17360 11121) (PAIR 0 11130) (PAIR 53 11131) (PAIR 17361 0) (PAIR 0 0) (PAIR 17362 0) (PAIR 53 11135) (PAIR 0 11136) (PAIR 17363 0) (PAIR 53 11138) (PAIR 17364 0) (PAIR 0 11140) (PAIR 17366 0) (PAIR 0 11142) (PAIR 53 11143) (PAIR 0 0) (PAIR 53 0) (PAIR 17368 11145) (PAIR 17369 0) (PAIR 0 11148) (PAIR 17370 0) (PAIR 53 11150) (PAIR 0 11151) (PAIR 17371 0) (PAIR 0 11153) (PAIR 53 11154) (PAIR 11966 0) (PAIR 17373 0) (PAIR 37 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 11160) (PAIR 81 11161) (PAIR 17376 11157) (PAIR 53 0) (PAIR 37 0) (PAIR 603 0) (PAIR 17379 0) (PAIR 17380 0) (PAIR 53 0) (PAIR 603 0) (PAIR 17382 11168) (PAIR 53 11171) (PAIR 17384 0) (PAIR 0 0) (PAIR 53 0) (PAIR 17385 11174) (PAIR 53 0) (PAIR 17386 11173) (PAIR 17388 11163) (PAIR 0 11179) (PAIR 53 11180) (PAIR 17389 0) (PAIR 17391 11098) (PAIR 17392 11093) (PAIR 17394 0) (PAIR 17395 11184) (PAIR 38 0) (PAIR 39 0) (PAIR 17396 0) (PAIR 17398 0) (PAIR 17399 11186) (PAIR 30 0) (PAIR 55 11192) (PAIR 71 0) (PAIR 62 11194) (PAIR 17401 0) (PAIR 17403 0) (PAIR 17404 11191) (PAIR 17406 0) (PAIR 17407 11198) (PAIR 17409 0) (PAIR 17410 11200) (PAIR 31 0) (PAIR 55 11203) (PAIR 71 0) (PAIR 62 11205) (PAIR 78 11206) (PAIR 17412 0) (PAIR 17414 0) (PAIR 17415 11202) (PAIR 17416 0) (PAIR 17418 0) (PAIR 17419 11210) (PAIR 17421 0) (PAIR 17422 11213) (PAIR 17424 0) (PAIR 17425 11215) (PAIR 17427 0) (PAIR 17428 11217) (PAIR 17430 0) (PAIR 17431 11219) (PAIR 17433 0) (PAIR 17434 11221) (PAIR 32 0) (PAIR 55 11224) (PAIR 17435 0) (PAIR 17436 0) (PAIR 17437 11223) (PAIR 17439 0) (PAIR 17440 11228) (PAIR 17442 0) (PAIR 37 0) (PAIR 37 0) (PAIR 17443 0) (PAIR 17445 11231) (PAIR 53 0) (PAIR 53 0) (PAIR 17446 0) (PAIR 53 11238) (PAIR 53 0) (PAIR 17447 0) (PAIR 17449 11235) (PAIR 17469 0) (PAIR 0 0) (PAIR 53 11244) (PAIR 2 0) (PAIR 1 11246) (PAIR 53 11247) (PAIR 17450 0) (PAIR 17473 11249) (PAIR 17474 0) (PAIR 17476 0) (PAIR 17452 11243) (PAIR 17485 11253) (PAIR 17502 0) (PAIR 0 0) (PAIR 53 11256) (PAIR 2 0) (PAIR 1 11258) (PAIR 53 11259) (PAIR 17453 0) (PAIR 17506 11261) (PAIR 17508 0) (PAIR 17510 0) (PAIR 17455 11262) (PAIR 17520 0) (PAIR 17526 11266) (PAIR 17527 11267) (PAIR 17457 0) (PAIR 17458 11265) (PAIR 17532 0) (PAIR 17534 0) (PAIR 17460 0) (PAIR 0 0) (PAIR 53 11274) (PAIR 2 0) (PAIR 1 11276) (PAIR 53 11277) (PAIR 17461 11273) (PAIR 17545 0) (PAIR 17551 11280) (PAIR 17552 11281) (PAIR 17463 0) (PAIR 17555 0) (PAIR 17560 11284) (PAIR 17566 11285) (PAIR 17464 11279) (PAIR 17465 11254) (PAIR 0 11288) (PAIR 17569 11289) (PAIR 53 11290) (PAIR 17571 0) (PAIR 17574 11292) (PAIR 17578 11293) (PAIR 53 11294) (PAIR 17466 0) (PAIR 11673 0) (PAIR 61 11297) (PAIR 53 0) (PAIR 53 0) (PAIR 17467 0) (PAIR 11966 0) (PAIR 61 11302) (PAIR 11303 0) (PAIR 17469 0) (PAIR 11679 0) (PAIR 61 11306) (PAIR 0 0) (PAIR 53 11308) (PAIR 2 0) (PAIR 1 11310) (PAIR 53 11311) (PAIR 17470 0) (PAIR 11673 0) (PAIR 61 11314) (PAIR 53 0) (PAIR 53 0) (PAIR 17471 0) (PAIR 11966 0) (PAIR 61 11319) (PAIR 11320 0) (PAIR 17473 11313) (PAIR 53 0) (PAIR 37 0) (PAIR 17474 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17476 0) (PAIR 11966 0) (PAIR 61 11333) (PAIR 11334 0) (PAIR 69 0) (PAIR 61 11336) (PAIR 11337 11335) (PAIR 81 0) (PAIR 61 11339) (PAIR 11340 11338) (PAIR 17478 11305) (PAIR 17479 0) (PAIR 0 11343) (PAIR 53 0) (PAIR 17479 0) (PAIR 0 11346) (PAIR 17481 0) (PAIR 0 11348) (PAIR 53 0) (PAIR 0 11350) (PAIR 17483 0) (PAIR 0 11352) (PAIR 17484 0) (PAIR 53 11354) (PAIR 17485 11342) (PAIR 11673 0) (PAIR 61 11357) (PAIR 11679 0) (PAIR 61 11359) (PAIR 53 0) (PAIR 53 0) (PAIR 17487 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17488 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17490 0) (PAIR 11966 0) (PAIR 61 11374) (PAIR 11375 0) (PAIR 69 0) (PAIR 61 11377) (PAIR 11378 11376) (PAIR 81 0) (PAIR 61 11380) (PAIR 11381 11379) (PAIR 17492 0) (PAIR 61 0) (PAIR 17493 0) (PAIR 11679 0) (PAIR 61 11386) (PAIR 53 0) (PAIR 53 0) (PAIR 17494 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17495 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17497 0) (PAIR 11966 0) (PAIR 61 11401) (PAIR 11402 0) (PAIR 69 0) (PAIR 61 11404) (PAIR 11405 11403) (PAIR 81 0) (PAIR 61 11407) (PAIR 11408 11406) (PAIR 17499 11385) (PAIR 53 0) (PAIR 53 0) (PAIR 17500 11410) (PAIR 11966 0) (PAIR 61 11414) (PAIR 11415 0) (PAIR 17502 0) (PAIR 11679 0) (PAIR 61 11418) (PAIR 0 0) (PAIR 53 11420) (PAIR 2 0) (PAIR 1 11422) (PAIR 53 11423) (PAIR 17503 0) (PAIR 11673 0) (PAIR 61 11426) (PAIR 53 0) (PAIR 53 0) (PAIR 17504 0) (PAIR 11966 0) (PAIR 61 11431) (PAIR 11432 0) (PAIR 17506 11425) (PAIR 11679 0) (PAIR 61 11435) (PAIR 53 0) (PAIR 37 0) (PAIR 17508 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17510 0) (PAIR 11966 0) (PAIR 61 11447) (PAIR 11448 0) (PAIR 69 0) (PAIR 61 11450) (PAIR 11451 11449) (PAIR 81 0) (PAIR 61 11453) (PAIR 11454 11452) (PAIR 17512 11434) (PAIR 11673 0) (PAIR 61 11457) (PAIR 11679 0) (PAIR 61 11459) (PAIR 53 0) (PAIR 53 0) (PAIR 17514 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17515 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17517 0) (PAIR 11966 0) (PAIR 61 11474) (PAIR 11475 0) (PAIR 69 0) (PAIR 61 11477) (PAIR 11478 11476) (PAIR 81 0) (PAIR 61 11480) (PAIR 11481 11479) (PAIR 17519 0) (PAIR 61 0) (PAIR 17520 0) (PAIR 11679 0) (PAIR 61 11486) (PAIR 53 0) (PAIR 53 0) (PAIR 17521 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17522 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17524 0) (PAIR 11966 0) (PAIR 61 11501) (PAIR 11502 0) (PAIR 69 0) (PAIR 61 11504) (PAIR 11505 11503) (PAIR 81 0) (PAIR 61 11507) (PAIR 11508 11506) (PAIR 17526 11485) (PAIR 53 0) (PAIR 53 0) (PAIR 17527 11510) (PAIR 11966 0) (PAIR 61 11514) (PAIR 11515 0) (PAIR 17529 0) (PAIR 61 0) (PAIR 17531 11456) (PAIR 53 0) (PAIR 37 0) (PAIR 17532 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17534 0) (PAIR 11966 0) (PAIR 61 11530) (PAIR 11531 0) (PAIR 69 0) (PAIR 61 11533) (PAIR 11534 11532) (PAIR 81 0) (PAIR 61 11536) (PAIR 11537 11535) (PAIR 17536 0) (PAIR 0 0) (PAIR 53 11540) (PAIR 2 0) (PAIR 1 11542) (PAIR 53 11543) (PAIR 17537 11539) (PAIR 11673 0) (PAIR 61 11546) (PAIR 11679 0) (PAIR 61 11548) (PAIR 53 0) (PAIR 53 0) (PAIR 17539 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17540 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17542 0) (PAIR 11966 0) (PAIR 61 11563) (PAIR 11564 0) (PAIR 69 0) (PAIR 61 11566) (PAIR 11567 11565) (PAIR 81 0) (PAIR 61 11569) (PAIR 11570 11568) (PAIR 17544 0) (PAIR 61 0) (PAIR 17545 0) (PAIR 11679 0) (PAIR 61 11575) (PAIR 53 0) (PAIR 53 0) (PAIR 17546 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17547 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17549 0) (PAIR 11966 0) (PAIR 61 11590) (PAIR 11591 0) (PAIR 69 0) (PAIR 61 11593) (PAIR 11594 11592) (PAIR 81 0) (PAIR 61 11596) (PAIR 11597 11595) (PAIR 17551 11574) (PAIR 53 0) (PAIR 53 0) (PAIR 17552 11599) (PAIR 11966 0) (PAIR 61 11603) (PAIR 11604 0) (PAIR 17554 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 11608) (PAIR 17555 0) (PAIR 11673 0) (PAIR 61 11611) (PAIR 53 0) (PAIR 53 0) (PAIR 17556 0) (PAIR 11966 0) (PAIR 61 11616) (PAIR 11617 0) (PAIR 17558 0) (PAIR 0 0) (PAIR 2 0) (PAIR 1 11621) (PAIR 17559 0) (PAIR 61 0) (PAIR 17560 11610) (PAIR 11679 0) (PAIR 61 11626) (PAIR 53 0) (PAIR 53 0) (PAIR 17561 0) (PAIR 53 0) (PAIR 37 0) (PAIR 17562 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17564 0) (PAIR 11966 0) (PAIR 61 11641) (PAIR 11642 0) (PAIR 69 0) (PAIR 61 11644) (PAIR 11645 11643) (PAIR 81 0) (PAIR 61 11647) (PAIR 11648 11646) (PAIR 17566 11625) (PAIR 61 0) (PAIR 17567 11545) (PAIR 61 0) (PAIR 17568 11356) (PAIR 0 11654) (PAIR 0 0) (PAIR 53 11656) (PAIR 2 0) (PAIR 1 11658) (PAIR 53 11659) (PAIR 17569 11655) (PAIR 53 11661) (PAIR 53 0) (PAIR 37 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 11666) (PAIR 81 11667) (PAIR 17571 0) (PAIR 33 0) (PAIR 52 0) (PAIR 11671 11670) (PAIR 67 11672) (PAIR 11966 0) (PAIR 17574 11669) (PAIR 36 0) (PAIR 52 0) (PAIR 11677 11676) (PAIR 67 11678) (PAIR 53 0) (PAIR 37 0) (PAIR 603 0) (PAIR 11966 0) (PAIR 69 11683) (PAIR 81 11684) (PAIR 17577 0) (PAIR 17578 11675) (PAIR 53 11687) (PAIR 17579 0) (PAIR 17581 11242) (PAIR 17582 11230) (PAIR 17584 0) (PAIR 17585 11691) (PAIR 34 0) (PAIR 55 11694) (PAIR 17586 0) (PAIR 17588 0) (PAIR 17589 11693) (PAIR 17591 0) (PAIR 17592 11698) (PAIR 17594 0) (PAIR 17595 11700) (PAIR 71 0) (PAIR 75 11703) (PAIR 78 11704) (PAIR 17597 0) (PAIR 17599 0) (PAIR 17600 11702) (PAIR 17602 0) (PAIR 17603 11708) (PAIR 17605 0) (PAIR 17606 11710) (PAIR 17608 0) (PAIR 17609 11712) (PAIR 17611 0) (PAIR 17612 11714) (PAIR 35 0) (PAIR 55 11717) (PAIR 77 0) (PAIR 17614 0) (PAIR 17616 0) (PAIR 17617 11716) (PAIR 38 0) (PAIR 66 11723) (PAIR 67 11724) (PAIR 66 0) (PAIR 61 11726) (PAIR 596 0) (PAIR 593 0) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 17619 0) (PAIR 17620 0) (PAIR 37 0) (PAIR 38 0) (PAIR 17621 0) (PAIR 37 0) (PAIR 41 0) (PAIR 17622 0) (PAIR 11966 0) (PAIR 61 11742) (PAIR 66 0) (PAIR 61 11744) (PAIR 593 0) (PAIR 597 0) (PAIR 0 0) (PAIR 600 0) (PAIR 58 0) (PAIR 68 11750) (PAIR 56 11751) (PAIR 78 11752) (PAIR 17624 0) (PAIR 66 0) (PAIR 61 11755) (PAIR 596 0) (PAIR 593 0) (PAIR 599 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 71 0) (PAIR 58 11763) (PAIR 73 11764) (PAIR 59 11765) (PAIR 60 11766) (PAIR 78 11767) (PAIR 17626 0) (PAIR 0 0) (PAIR 17627 0) (PAIR 37 0) (PAIR 37 0) (PAIR 17628 0) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 17630 0) (PAIR 68 0) (PAIR 61 11782) (PAIR 11783 0) (PAIR 73 0) (PAIR 61 11785) (PAIR 11786 11784) (PAIR 74 0) (PAIR 61 11788) (PAIR 11789 11787) (PAIR 69 0) (PAIR 61 11791) (PAIR 11792 11790) (PAIR 81 0) (PAIR 61 11794) (PAIR 11795 11793) (PAIR 17632 0) (PAIR 66 0) (PAIR 61 11798) (PAIR 593 0) (PAIR 0 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 601 0) (PAIR 58 0) (PAIR 57 11806) (PAIR 59 11807) (PAIR 60 11808) (PAIR 78 11809) (PAIR 79 11810) (PAIR 17634 0) (PAIR 66 0) (PAIR 61 11813) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 602 0) (PAIR 603 0) (PAIR 605 0) (PAIR 71 0) (PAIR 58 11823) (PAIR 59 11824) (PAIR 60 11825) (PAIR 78 11826) (PAIR 80 11827) (PAIR 81 11828) (PAIR 83 11829) (PAIR 17636 0) (PAIR 66 0) (PAIR 61 11832) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 603 0) (PAIR 71 0) (PAIR 58 11840) (PAIR 59 11841) (PAIR 60 11842) (PAIR 78 11843) (PAIR 81 11844) (PAIR 17638 0) (PAIR 66 0) (PAIR 61 11847) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 604 0) (PAIR 71 0) (PAIR 58 11855) (PAIR 59 11856) (PAIR 60 11857) (PAIR 78 11858) (PAIR 82 11859) (PAIR 17640 0) (PAIR 66 0) (PAIR 61 11862) (PAIR 596 0) (PAIR 593 0) (PAIR 594 0) (PAIR 595 0) (PAIR 600 0) (PAIR 604 0) (PAIR 605 0) (PAIR 71 0) (PAIR 58 11871) (PAIR 59 11872) (PAIR 60 11873) (PAIR 78 11874) (PAIR 82 11875) (PAIR 83 11876) (PAIR 17642 0) (PAIR 73 0) (PAIR 61 11879) (PAIR 11880 0) (PAIR 74 0) (PAIR 61 11882) (PAIR 11883 11881) (PAIR 75 0) (PAIR 61 11885) (PAIR 11886 11884) (PAIR 76 0) (PAIR 61 11888) (PAIR 11889 11887) (PAIR 70 0) (PAIR 61 11891) (PAIR 11892 11890) (PAIR 79 0) (PAIR 61 11894) (PAIR 11895 11893) (PAIR 80 0) (PAIR 61 11897) (PAIR 11898 11896) (PAIR 81 0) (PAIR 61 11900) (PAIR 11901 11899) (PAIR 82 0) (PAIR 61 11903) (PAIR 11904 11902) (PAIR 83 0) (PAIR 61 11906) (PAIR 11907 11905) (PAIR 17644 0) (PAIR 71 0) (PAIR 75 11910) (PAIR 62 11911) (PAIR 78 11912) (PAIR 17646 0) (PAIR 17648 0) (PAIR 17649 11722) (PAIR 17651 0) (PAIR 17652 11916) (PAIR 17654 0) (PAIR 17655 11918) (PAIR 17657 0) (PAIR 17658 11920) (PAIR 77 0) (PAIR 64 11923) (PAIR 17660 0) (PAIR 17662 0) (PAIR 17663 11922) (PAIR 73 0) (PAIR 74 11928) (PAIR 75 11929) (PAIR 76 11930) (PAIR 70 11931) (PAIR 79 11932) (PAIR 80 11933) (PAIR 81 11934) (PAIR 82 11935) (PAIR 83 11936) (PAIR 17665 0) (PAIR 17667 0) (PAIR 17668 11927) (PAIR 17670 0) (PAIR 17671 11940) (PAIR 73 0) (PAIR 74 11943) (PAIR 75 11944) (PAIR 76 11945) (PAIR 77 11946) (PAIR 70 11947) (PAIR 79 11948) (PAIR 80 11949) (PAIR 81 11950) (PAIR 82 11951) (PAIR 83 11952) (PAIR 17673 0) (PAIR 17675 0) (PAIR 17676 11942) (PAIR 71 0) (PAIR 72 11957) (PAIR 75 11958) (PAIR 78 11959) (PAIR 17678 0) (PAIR 17680 0) (PAIR 17681 11956) (PAIR 36 0) (PAIR 66 11964) (PAIR 67 11965) (PAIR 68 0) (PAIR 73 11967) (PAIR 74 11968) (PAIR 69 11969) (PAIR 81 11970) (PAIR 17682 0) (PAIR 17684 0) (PAIR 17685 11963) (PAIR 71 0) (PAIR 72 11975) (PAIR 73 11976) (PAIR 74 11977) (PAIR 75 11978) (PAIR 76 11979) (PAIR 77 11980) (PAIR 78 11981) (PAIR 79 11982) (PAIR 80 11983) (PAIR 81 11984) (PAIR 82 11985) (PAIR 83 11986) (PAIR 17686 0) (PAIR 17688 0) (PAIR 17689 11974) (PAIR 596 0) (PAIR 597 0) (PAIR 598 0) (PAIR 599 0) (PAIR 0 0) (PAIR 37 0) (PAIR 38 0) (PAIR 41 0) (PAIR 39 0) (PAIR 600 0) (PAIR 601 0) (PAIR 602 0) (PAIR 603 0) (PAIR 604 0) (PAIR 605 0) (PAIR 17691 0) (PAIR 17692 11990) (PAIR 12007 1587) (VECTOR 86 89 1601) (VECTOR 86 90 1603) (VECTOR 86 91 1605) (VECTOR 86 93 1617) (VECTOR 86 97 1619) (VECTOR 86 94 1621) (VECTOR 86 95 1623) (VECTOR 86 96 1627) (VECTOR 86 98 1640) (VECTOR 86 228 1642) (VECTOR 86 101 1645) (VECTOR 86 99 1647) (VECTOR 86 100 1653) (VECTOR 86 102 1658) (VECTOR 10960 8702) (VECTOR 85 12023 1682) (VECTOR 86 106 620) (VECTOR 86 103 1666) (VECTOR 86 105 1671) (VECTOR 86 110 1673) (VECTOR 86 118 1679) (VECTOR 86 538 1683) (VECTOR 86 107 1689) (VECTOR 86 108 1691) (VECTOR 86 109 1693) (VECTOR 86 521 1695) (VECTOR 86 111 1701) (VECTOR 86 112 1704) (VECTOR 86 113 1706) (VECTOR 86 114 1708) (VECTOR 86 115 1710) (VECTOR 86 116 1712) (VECTOR 86 117 1717) (VECTOR 86 119 1724) (VECTOR 86 187 1729) (VECTOR 86 124 1923) (VECTOR 86 121 1928) (VECTOR 86 122 1968) (VECTOR 86 123 1970) (VECTOR 78 645 644) (VECTOR 646) (VECTOR 84 11304 12049 11298 537) (VECTOR 51 37) (VECTOR 650 649 12051) (VECTOR 84 11162 12052 11679 521) (VECTOR 78 655 654) (VECTOR 78 658 657) (VECTOR 665 664 663 662 661 660) (FORWARD -) (VECTOR 666 659 656) (VECTOR 84 11382 12058 11360 541) (VECTOR 54 11384 667 17486) (VECTOR 78 670 669) (VECTOR 78 673 672) (VECTOR 680 679 678 677 676 675) (FORWARD -) (VECTOR 681 674 671) (VECTOR 84 11409 12065 11387 542) (VECTOR 78 684 683) (VECTOR 685) (VECTOR 84 11416 12068 11358 540) (VECTOR 78 688 687) (VECTOR 695 694 693 692 691 690) (FORWARD -) (VECTOR 696 689 17507) (VECTOR 84 11455 12073 11436 545) (VECTOR 78 699 698) (VECTOR 700) (VECTOR 84 11516 12076 11458 546) (VECTOR 78 703 702) (VECTOR 78 706 705) (VECTOR 713 712 711 710 709 708) (FORWARD -) (VECTOR 714 707 704) (VECTOR 84 8568 12082 8546 380) (VECTOR 54 11518 715 701) (VECTOR 78 718 717) (VECTOR 78 721 720) (VECTOR 728 727 726 725 724 723) (FORWARD -) (VECTOR 729 722 719) (VECTOR 84 11538 12089 11419 543) (VECTOR 78 732 731) (VECTOR 733) (VECTOR 84 11605 12092 11547 549) (VECTOR 78 736 735) (VECTOR 78 739 738) (VECTOR 746 745 744 743 742 741) (FORWARD -) (VECTOR 747 740 737) (VECTOR 84 11649 12098 11627 553) (VECTOR 54 11651 748 734) (VECTOR 78 751 750) (VECTOR 54 11653 752 686) (VECTOR 2226 2225 2209) (VECTOR 85 12103 757) (VECTOR 86 128 758) (VECTOR 86 125 2173) (VECTOR 86 126 2198) (VECTOR 86 127 2210) (VECTOR 86 129 2227) (VECTOR 86 130 2348) (VECTOR 86 133 2469) (VECTOR 86 131 2587) (VECTOR 86 132 2594) (VECTOR 768) (VECTOR 84 11674 12114 11673 555) (VECTOR 770) (VECTOR 84 11674 12116 11673 555) (VECTOR 773 772 17365) (VECTOR 84 11162 12118 11679 521) (VECTOR 54 0 776 771) (VECTOR 783) (VECTOR 84 11674 12121 11673 555) (VECTOR 786 785 17365) (VECTOR 84 11162 12123 11679 521) (VECTOR 54 0 789 784) (VECTOR 54 0 797 782) (VECTOR 54 0 803 798) (VECTOR 807 806 17365) (VECTOR 84 11162 12128 11679 521) (VECTOR 54 0 810 805) (VECTOR 2883 2882 2881 2876 7344 2872) (VECTOR 85 12131 818) (VECTOR 86 138 819) (VECTOR 86 134 2844) (VECTOR 86 135 2853) (VECTOR 86 136 2856) (VECTOR 86 137 2861) (VECTOR 86 139 2903) (VECTOR 86 141 2956) (VECTOR 86 140 2958) (VECTOR 86 142 3004) (VECTOR 86 144 3057) (VECTOR 86 143 3064) (VECTOR 86 145 3120) (VECTOR 54 0 833 832) (VECTOR 3234 3233 3232 3231 3226 3221 3217 3195) (VECTOR 85 12146 841) (VECTOR 86 148 842) (VECTOR 86 146 3184) (VECTOR 86 147 3196) (VECTOR 86 149 3262) (VECTOR 86 151 3274) (VECTOR 86 150 3291) (VECTOR 86 152 3321) (VECTOR 86 155 3333) (VECTOR 86 153 3338) (VECTOR 86 154 3347) (VECTOR 86 156 3435) (VECTOR 3644 3643 3642 3641 3640 3635 3673 3501) (VECTOR 85 12159 5054) (VECTOR 86 158 854) (VECTOR 86 157 3545) (VECTOR 86 159 3586) (VECTOR 86 160 3588) (VECTOR 86 163 3590) (VECTOR 86 161 3668) (VECTOR 86 162 3674) (VECTOR 86 167 3676) (VECTOR 86 164 3738) (VECTOR 86 165 3746) (VECTOR 86 166 3757) (VECTOR 86 172 3759) (VECTOR 86 168 3881) (VECTOR 86 169 3894) (VECTOR 86 170 3951) (VECTOR 86 171 3958) (VECTOR 86 173 4031) (VECTOR 86 174 4033) (VECTOR 86 178 4035) (VECTOR 86 175 4147) (VECTOR 86 176 4168) (VECTOR 86 177 4302) (VECTOR 86 180 4304) (VECTOR 86 179 4332) (VECTOR 86 181 4401) (VECTOR 86 182 4403) (VECTOR 86 571 4405) (VECTOR 86 183 4420) (VECTOR 86 184 4428) (VECTOR 86 185 4430) (VECTOR 86 186 4432) (VECTOR 86 188 4440) (VECTOR 11771 11769 10633) (VECTOR 85 12193 888) (VECTOR 86 192 889) (VECTOR 86 189 4451) (VECTOR 86 190 4454) (VECTOR 86 191 4456) (VECTOR 86 193 4465) (VECTOR 86 194 4469) (VECTOR 86 199 4473) (VECTOR 86 195 4485) (VECTOR 86 196 4499) (VECTOR 86 197 4502) (VECTOR 86 198 4505) (VECTOR 11771 11769 4834 4821 4545) (VECTOR 85 12206 8701) (VECTOR 86 203 901) (VECTOR 86 200 4527) (VECTOR 86 201 4534) (VECTOR 86 202 4546) (VECTOR 86 204 4563) (VECTOR 86 220 4565) (VECTOR 86 207 4570) (VECTOR 86 205 4649) (VECTOR 86 206 4654) (VECTOR 86 208 4659) (VECTOR 86 211 4664) (VECTOR 86 209 4666) (VECTOR 86 210 4707) (VECTOR 86 212 4713) (VECTOR 86 213 4718) (VECTOR 86 218 4723) (VECTOR 86 214 4730) (VECTOR 86 215 4734) (VECTOR 86 216 4736) (VECTOR 86 217 4786) (VECTOR 86 570 4791) (VECTOR 86 219 4797) (VECTOR 11781 11774 11771 11769 11754 4834) (VECTOR 85 12230 8701) (VECTOR 86 569 924) (VECTOR 86 221 4806) (VECTOR 11754 4834) (VECTOR 85 12234 4821) (VECTOR 86 222 927) (VECTOR 86 223 4824) (VECTOR 86 224 4828) (VECTOR 86 225 4836) (VECTOR 86 226 4838) (VECTOR 86 227 4840) (VECTOR 86 229 4858) (VECTOR 86 232 4860) (VECTOR 86 230 4869) (VECTOR 86 231 4875) (VECTOR 86 233 4882) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4921 8692) (VECTOR 85 12247 0) (VECTOR 86 236 939) (VECTOR 86 234 4903) (VECTOR 11738 4953) (VECTOR 85 12251 8692) (VECTOR 86 235 942) (VECTOR 86 237 4941) (VECTOR 86 240 4943) (VECTOR 86 238 4946) (VECTOR 86 239 4954) (VECTOR 86 241 4969) (VECTOR 86 244 4971) (VECTOR 86 242 4974) (VECTOR 86 243 4981) (VECTOR 86 245 4998) (VECTOR 86 307 5000) (VECTOR 86 248 5003) (VECTOR 86 246 5007) (VECTOR 86 247 5012) (VECTOR 86 249 5017) (VECTOR 86 252 5022) (VECTOR 86 250 5024) (VECTOR 86 251 5029) (VECTOR 86 253 5035) (VECTOR 86 256 5040) (VECTOR 966 965 12295) (VECTOR 84 11162 12273 11679 521) (VECTOR 78 969 968) (VECTOR 973 972 971) (VECTOR 84 11341 12276 11307 538) (VECTOR 78 981 978) (VECTOR 985 984 17507) (VECTOR 84 11455 12279 11436 545) (VECTOR 989) (VECTOR 84 11516 12281 11458 546) (VECTOR 54 11518 17530 990) (VECTOR 993 992 991) (VECTOR 84 11538 12284 11419 543) (VECTOR 78 999 996) (VECTOR 1003) (VECTOR 84 11605 12287 11547 549) (VECTOR 54 11651 1007 1004) (VECTOR 54 11653 1008 976) (VECTOR 78 1014 1011) (VECTOR 78 1020 1019) (VECTOR 1021) (VECTOR 84 11304 12293 11298 537) (VECTOR 51 37) (VECTOR 1025 1024 12295) (VECTOR 84 11162 12296 11679 521) (VECTOR 78 1031 1028) (VECTOR 1035 1034 1033) (VECTOR 84 11341 12299 11307 538) (VECTOR 78 1039 1038) (VECTOR 78 1042 1041) (VECTOR 1049 1048 1047 1046 1045 1044) (FORWARD -) (VECTOR 1050 1043 1040) (VECTOR 84 11382 12305 11360 541) (VECTOR 54 11384 1051 17486) (VECTOR 78 1054 1053) (VECTOR 78 1057 1056) (VECTOR 1064 1063 1062 1061 1060 1059) (FORWARD -) (VECTOR 1065 1058 1055) (VECTOR 84 11409 12312 11387 542) (VECTOR 78 1068 1067) (VECTOR 1069) (VECTOR 84 11416 12315 11358 540) (VECTOR 78 1075 1072) (VECTOR 78 1078 1077) (VECTOR 1079) (VECTOR 84 11433 12319 11427 544) (VECTOR 78 1082 1081) (VECTOR 1089 1088 1087 1086 1085 1084) (FORWARD -) (VECTOR 1090 1083 17507) (VECTOR 84 11455 12324 11436 545) (VECTOR 78 1093 1092) (VECTOR 78 1096 1095) (VECTOR 1103 1102 1101 1100 1099 1098) (FORWARD -) (VECTOR 1104 1097 1094) (VECTOR 84 11482 12330 11460 547) (VECTOR 54 11484 1105 17513) (VECTOR 78 1108 1107) (VECTOR 78 1111 1110) (VECTOR 1118 1117 1116 1115 1114 1113) (FORWARD -) (VECTOR 1119 1112 1109) (VECTOR 84 11509 12337 11487 548) (VECTOR 78 1122 1121) (VECTOR 1123) (VECTOR 84 11516 12340 11458 546) (VECTOR 54 11518 17530 1124) (VECTOR 78 1127 1126) (VECTOR 1134 1133 1132 1131 1130 1129) (FORWARD -) (VECTOR 1135 1128 1125) (VECTOR 84 11538 12346 11419 543) (VECTOR 78 1141 1138) (VECTOR 78 1144 1143) (VECTOR 78 1147 1146) (VECTOR 1154 1153 1152 1151 1150 1149) (FORWARD -) (VECTOR 1155 1148 1145) (VECTOR 84 11571 12353 11549 550) (VECTOR 54 11573 1156 17538) (VECTOR 78 1159 1158) (VECTOR 78 1162 1161) (VECTOR 1169 1168 1167 1166 1165 1164) (FORWARD -) (VECTOR 1170 1163 1160) (VECTOR 84 11598 12360 11576 551) (VECTOR 78 1173 1172) (VECTOR 1174) (VECTOR 84 11605 12363 11547 549) (VECTOR 78 1178 1176) (VECTOR 78 1181 1180) (VECTOR 1182) (VECTOR 84 11618 12367 11612 552) (VECTOR 78 1186 1184) (VECTOR 54 11624 1187 1183) (VECTOR 78 1190 1189) (VECTOR 78 1193 1192) (VECTOR 1200 1199 1198 1197 1196 1195) (FORWARD -) (VECTOR 1201 1194 1191) (VECTOR 84 11649 12375 11627 553) (VECTOR 54 11651 1202 1175) (VECTOR 54 11653 1203 1070) (VECTOR 78 1209 1206) (VECTOR 1213) (VECTOR 85 12380 1018) (VECTOR 86 254 1214) (VECTOR 11820 1242) (VECTOR 85 12383 9504) (VECTOR 86 255 1216) (VECTOR 86 257 5266) (VECTOR 54 0 1232 1224) (VECTOR 54 0 1238 1233) (VECTOR 54 0 1241 1240) (VECTOR 11820 11819 5830 1242) (VECTOR 85 12390 5270) (VECTOR 86 259 1243) (VECTOR 86 258 5363) (VECTOR 86 260 5373) (VECTOR 86 261 5378) (VECTOR 86 264 5383) (VECTOR 86 262 5394) (VECTOR 86 263 5397) (VECTOR 86 267 5402) (VECTOR 86 265 5417) (VECTOR 86 266 5440) (VECTOR 86 270 5445) (VECTOR 86 268 5495) (VECTOR 86 269 5498) (VECTOR 86 271 5551) (VECTOR 86 272 5556) (VECTOR 86 273 5612) (VECTOR 86 274 5617) (VECTOR 86 275 5673) (VECTOR 86 276 5678) (VECTOR 86 277 5747) (VECTOR 86 278 5752) (VECTOR 86 279 5821) (VECTOR 86 282 5826) (VECTOR 86 280 5828) (VECTOR 86 281 5831) (VECTOR 86 283 5888) (VECTOR 86 284 5893) (VECTOR 86 285 5966) (VECTOR 86 286 5971) (VECTOR 86 287 6037) (VECTOR 86 288 6042) (VECTOR 86 289 6116) (VECTOR 86 290 6121) (VECTOR 86 291 6195) (VECTOR 86 292 6200) (VECTOR 86 293 6280) (VECTOR 86 294 6285) (VECTOR 86 295 6336) (VECTOR 86 296 6341) (VECTOR 86 297 6465) (VECTOR 86 298 6470) (VECTOR 86 299 6492) (VECTOR 86 300 6497) (VECTOR 86 301 6575) (VECTOR 86 302 6586) (VECTOR 54 10832 1296 1292) (VECTOR 11822 11821 11820 11819 11818 11817 11816 11815 1297) (VECTOR 85 12438 6590) (VECTOR 86 573 1298) (VECTOR 6585 6584 6583 6582 6581 6580 10574 10573) (VECTOR 84 6625 12441 6600 302) (VECTOR 54 10832 1308 1304) (VECTOR 1316 1315 1314 1313 1312 1311 1310 1309) (VECTOR 85 12444 1300) (VECTOR 86 303 1317) (VECTOR 86 304 6669) (VECTOR 86 305 6671) (VECTOR 86 306 6676) (VECTOR 86 308 6691) (VECTOR 86 312 6693) (VECTOR 86 309 6702) (VECTOR 86 310 6706) (VECTOR 86 311 6717) (VECTOR 86 313 6733) (VECTOR 86 340 6735) (VECTOR 86 314 6737) (VECTOR 86 315 6779) (VECTOR 86 316 6787) (VECTOR 86 317 6829) (VECTOR 86 320 6871) (VECTOR 86 318 6878) (VECTOR 86 319 6880) (VECTOR 86 322 6922) (VECTOR 86 321 6931) (VECTOR 86 324 6973) (VECTOR 86 323 6981) (VECTOR 1344 1343 1342) (VECTOR 84 11538 12468 11419 543) (VECTOR 54 11653 1347 1341) (VECTOR 11854 11853 11852 11851 11737 11737 10524) (VECTOR 85 12471 1351) (VECTOR 86 326 1352) (VECTOR 86 325 7032) (VECTOR 86 328 7051) (VECTOR 86 327 7063) (VECTOR 86 330 7082) (VECTOR 86 329 7091) (VECTOR 86 332 7110) (VECTOR 86 331 7119) (VECTOR 86 334 7138) (VECTOR 86 333 7149) (VECTOR 78 1366 1365) (VECTOR 11854 11853 11852 11851 10669 10524) (VECTOR 85 12484 1368) (VECTOR 86 336 1369) (VECTOR 86 335 7188) (VECTOR 86 338 7196) (VECTOR 86 337 7206) (VECTOR 86 575 7214) (VECTOR 86 339 7225) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272 11025) (VECTOR 85 12492 0) (VECTOR 86 345 1376) (VECTOR 86 341 7234) (VECTOR 86 342 7258) (VECTOR 86 343 7260) (VECTOR 86 344 7262) (VECTOR 86 346 7294) (VECTOR 86 388 7296) (VECTOR 86 347 7360) (VECTOR 86 349 7365) (VECTOR 86 351 7408) (VECTOR 86 350 7418) (VECTOR 86 352 7424) (VECTOR 86 355 7467) (VECTOR 86 353 7470) (VECTOR 86 356 7487) (VECTOR 86 358 7529) (VECTOR 86 357 7561) (VECTOR 86 359 7571) (VECTOR 86 362 7613) (VECTOR 86 360 7615) (VECTOR 86 361 7618) (VECTOR 86 363 7681) (VECTOR 86 364 7723) (VECTOR 86 365 7792) (VECTOR 86 366 7834) (VECTOR 86 367 7900) (VECTOR 86 368 7942) (VECTOR 86 369 8012) (VECTOR 1409 1408 1407) (VECTOR 84 11538 12522 11419 543) (VECTOR 54 11653 1412 1406) (VECTOR 8096 8095 8094 8093 8092 8087 9968) (VECTOR 85 12525 1416) (VECTOR 86 370 1417) (VECTOR 86 371 8126) (VECTOR 86 372 8145) (VECTOR 86 373 8263) (VECTOR 86 374 8282) (VECTOR 86 375 8352) (VECTOR 86 376 8371) (VECTOR 86 377 8491) (VECTOR 86 378 8510) (VECTOR 86 379 8530) (VECTOR 78 1431 1430) (VECTOR 8631 8630 8629 8628 8627 10564) (VECTOR 85 12538 1433) (VECTOR 86 381 1434) (VECTOR 86 382 8663) (VECTOR 86 383 8669) (VECTOR 86 574 8703) (VECTOR 86 384 8752) (VECTOR 86 385 8755) (VECTOR 86 386 8757) (VECTOR 86 387 8766) (VECTOR 86 389 8785) (VECTOR 86 392 8787) (VECTOR 86 390 8790) (VECTOR 86 391 8797) (VECTOR 86 393 8814) (VECTOR 86 502 8816) (VECTOR 86 396 8934) (VECTOR 86 394 9034) (VECTOR 86 395 9039) (VECTOR 86 397 9044) (VECTOR 86 404 9049) (VECTOR 86 401 9124) (VECTOR 86 402 9131) (VECTOR 86 403 9136) (VECTOR 86 405 9142) (VECTOR 86 408 9147) (VECTOR 86 406 9149) (VECTOR 86 407 9152) (VECTOR 86 409 9159) (VECTOR 86 412 9164) (VECTOR 86 410 9263) (VECTOR 86 411 9314) (VECTOR 86 413 9322) (VECTOR 86 416 9327) (VECTOR 86 414 9384) (VECTOR 86 415 9388) (VECTOR 86 417 9397) (VECTOR 86 420 9402) (VECTOR 86 418 9445) (VECTOR 86 419 9486) (VECTOR 86 421 9496) (VECTOR 86 423 9501) (VECTOR 86 422 9506) (VECTOR 86 424 9517) (VECTOR 86 427 9522) (VECTOR 86 425 9544) (VECTOR 86 426 9596) (VECTOR 86 428 9607) (VECTOR 86 432 9612) (VECTOR 86 429 9650) (VECTOR 86 430 9652) (VECTOR 86 431 9655) (VECTOR 86 433 9667) (VECTOR 86 437 9672) (VECTOR 86 434 9697) (VECTOR 86 435 9714) (VECTOR 86 436 9768) (VECTOR 86 438 9780) (VECTOR 86 440 9785) (VECTOR 86 439 9833) (VECTOR 86 441 9842) (VECTOR 86 444 9847) (VECTOR 86 442 9904) (VECTOR 86 443 9918) (VECTOR 86 445 9928) (VECTOR 86 447 9933) (VECTOR 86 446 10012) (VECTOR 86 448 10025) (VECTOR 86 451 10030) (VECTOR 86 449 10032) (VECTOR 86 450 10069) (VECTOR 86 452 10079) (VECTOR 86 455 10084) (VECTOR 86 453 10131) (VECTOR 86 454 10141) (VECTOR 86 456 10151) (VECTOR 86 460 10156) (VECTOR 86 457 10244) (VECTOR 86 458 10246) (VECTOR 86 459 10271) (VECTOR 86 461 10283) (VECTOR 86 467 10288) (VECTOR 86 462 10348) (VECTOR 86 463 10396) (VECTOR 86 466 10494) (VECTOR 86 468 10515) (VECTOR 86 471 10520) (VECTOR 86 469 10522) (VECTOR 86 470 10634) (VECTOR 86 472 10645) (VECTOR 86 473 10650) (VECTOR 86 576 10655) (VECTOR 86 474 10667) (VECTOR 86 494 10768) (VECTOR 86 495 10836) (VECTOR 86 498 10966) (VECTOR 86 499 10968) (VECTOR 86 500 10970) (VECTOR 86 501 10975) (VECTOR 86 503 10993) (VECTOR 86 504 10995) (VECTOR 86 512 10997) (VECTOR 86 505 11022) (VECTOR 86 506 11026) (VECTOR 86 507 11028) (VECTOR 86 568 11030) (VECTOR 86 508 11032) (VECTOR 86 510 11039) (VECTOR 86 511 11041) (VECTOR 86 513 11071) (VECTOR 86 514 11073) (VECTOR 86 515 11080) (VECTOR 86 516 11082) (VECTOR 86 517 11084) (VECTOR 86 519 11090) (VECTOR 86 525 11092) (VECTOR 86 522 11183) (VECTOR 86 523 11185) (VECTOR 86 524 11190) (VECTOR 86 526 11197) (VECTOR 86 527 11199) (VECTOR 86 567 11201) (VECTOR 86 528 11209) (VECTOR 86 529 11212) (VECTOR 86 530 11214) (VECTOR 86 531 11216) (VECTOR 86 532 11218) (VECTOR 86 533 11220) (VECTOR 86 534 11222) (VECTOR 86 536 11227) (VECTOR 86 565 11229) (VECTOR 86 558 11690) (VECTOR 86 557 11692) (VECTOR 86 559 11697) (VECTOR 86 560 11699) (VECTOR 86 586 11701) (VECTOR 86 561 11707) (VECTOR 86 562 11709) (VECTOR 86 563 11711) (VECTOR 86 564 11713) (VECTOR 86 580 11715) (VECTOR 86 566 11721) (VECTOR 86 577 11915) (VECTOR 86 578 11917) (VECTOR 86 579 11919) (VECTOR 86 584 11921) (VECTOR 86 581 11926) (VECTOR 86 583 11939) (VECTOR 86 590 11941) (VECTOR 86 585 11955) (VECTOR 86 587 11962) (VECTOR 86 589 11973) (VECTOR 86 591 11989) (VECTOR 86 592 12006) (VECTOR 11805 11804 11803 11802 11801 11800 1626) (VECTOR 85 12692 0) (VECTOR 86 572 1588) (VECTOR 11805 11804 11803 11802 11801) (VECTOR 84 1597 12695 1592 87) (VECTOR 11805 11804 11803 11802 11801) (VECTOR 85 12697 1598) (VECTOR 86 88 1599) (VECTOR 1626) (VECTOR 85 12700 1626) (VECTOR 86 89 1601) (VECTOR 11812) (VECTOR 85 12703 11812) (VECTOR 86 90 1603) (VECTOR 11812 1626) (VECTOR 85 12706 0) (VECTOR 86 91 1605) (VECTOR 11735 11734 11003 11738 4921) (VECTOR 84 1615 12709 1610 92) (VECTOR 11735 11734 11003 11738 4921) (VECTOR 85 12711 1616) (VECTOR 86 93 1617) (VECTOR 11812 11735 11734 11003 11738 4921 1626) (VECTOR 85 12714 0) (VECTOR 86 97 1619) (VECTOR 11741) (VECTOR 85 12717 11741) (VECTOR 86 94 1621) (VECTOR 8701) (VECTOR 85 12720 8701) (VECTOR 86 95 1623) (VECTOR 54 1625 8701 11741) (VECTOR 11741 8701) (VECTOR 85 12724 1626) (VECTOR 86 96 1627) (VECTOR 11812 11735 11734 11003 11738 4921) (VECTOR 84 1638 12727 1632 97) (VECTOR 11812 11735 11734 11003 11738 4921) (VECTOR 85 12729 1639) (VECTOR 86 98 1640) (VECTOR 11812 11741 11735 11734 11003 11738 4921 8701) (VECTOR 85 12732 0) (VECTOR 86 228 1642) (VECTOR 1682) (VECTOR 85 12735 1682) (VECTOR 1652) (VECTOR 85 12737 1652) (VECTOR 86 101 1645) (VECTOR 8702) (VECTOR 85 12740 8702) (VECTOR 86 99 1647) (VECTOR 10960 8702) (VECTOR 85 12743 1652) (VECTOR 86 100 1653) (VECTOR 84 0 17587 1656 101) (VECTOR 85 17587 1657) (VECTOR 86 102 1658) (VECTOR 10960 8702) (VECTOR 85 12749 1663) (VECTOR 86 106 1664) (VECTOR 8062 1703) (VECTOR 85 12752 9504) (VECTOR 86 103 1666) (VECTOR 84 0 17587 1669 104) (VECTOR 85 17587 1670) (VECTOR 86 105 1671) (VECTOR 8062 1703) (VECTOR 85 12758 4619) (VECTOR 86 110 1673) (VECTOR 8701) (VECTOR 85 12761 8701) (VECTOR 1677) (VECTOR 85 12763 1677) (VECTOR 1716) (VECTOR 85 12765 1716) (VECTOR 86 118 1679) (VECTOR 10960 10959 10958) (VECTOR 85 12768 1682) (VECTOR 86 538 1683) (VECTOR 10960) (VECTOR 84 1687 12771 1686 106) (VECTOR 10960) (VECTOR 85 12773 1688) (VECTOR 86 107 1689) (VECTOR 10959 10958) (VECTOR 85 12776 8702) (VECTOR 86 108 1691) (VECTOR 10959) (VECTOR 85 12779 10959) (VECTOR 86 109 1693) (VECTOR 8062 11773 10963) (VECTOR 85 12782 4619) (VECTOR 86 521 1695) (VECTOR 8062) (VECTOR 84 1699 12785 1698 110) (VECTOR 8062) (VECTOR 85 12787 1700) (VECTOR 86 111 1701) (VECTOR 54 0 11773 10963) (VECTOR 11773 10963) (VECTOR 85 12791 1703) (VECTOR 86 112 1704) (VECTOR 11773) (VECTOR 85 12794 11773) (VECTOR 86 113 1706) (VECTOR 10963) (VECTOR 85 12797 10963) (VECTOR 86 114 1708) (VECTOR 11771) (VECTOR 85 12800 11771) (VECTOR 86 115 1710) (VECTOR 5054) (VECTOR 85 12803 5054) (VECTOR 86 116 1712) (VECTOR 11771 5054) (VECTOR 85 12806 1716) (VECTOR 86 117 1717) (VECTOR 84 0 17587 1722 118) (VECTOR 85 17587 1723) (VECTOR 86 119 1724) (VECTOR 11771 5054) (VECTOR 85 12812 1728) (VECTOR 86 187 1729) (VECTOR 78 1733 1732) (VECTOR 78 1736 1735) (VECTOR 1743 1742 1741 1740 1739 1738) (FORWARD -) (VECTOR 1744 1737 1734) (VECTOR 84 11382 12819 11360 541) (VECTOR 54 11384 1745 17486) (VECTOR 78 1748 1747) (VECTOR 78 1751 1750) (VECTOR 1758 1757 1756 1755 1754 1753) (FORWARD -) (VECTOR 1759 1752 1749) (VECTOR 84 11409 12826 11387 542) (VECTOR 78 1762 1761) (VECTOR 1763) (VECTOR 84 11416 12829 11358 540) (VECTOR 78 1769 1766) (VECTOR 78 1772 1771) (VECTOR 1773) (VECTOR 84 11433 12833 11427 544) (VECTOR 78 1776 1775) (VECTOR 1783 1782 1781 1780 1779 1778) (FORWARD -) (VECTOR 1784 1777 17507) (VECTOR 84 11455 12838 11436 545) (VECTOR 78 1787 1786) (VECTOR 78 1790 1789) (VECTOR 1797 1796 1795 1794 1793 1792) (FORWARD -) (VECTOR 1798 1791 1788) (VECTOR 84 11482 12844 11460 547) (VECTOR 54 11484 1799 17513) (VECTOR 78 1802 1801) (VECTOR 78 1805 1804) (VECTOR 1812 1811 1810 1809 1808 1807) (FORWARD -) (VECTOR 1813 1806 1803) (VECTOR 84 11509 12851 11487 548) (VECTOR 78 1816 1815) (VECTOR 1817) (VECTOR 84 11516 12854 11458 546) (VECTOR 54 11518 17530 1818) (VECTOR 78 1821 1820) (VECTOR 1828 1827 1826 1825 1824 1823) (FORWARD -) (VECTOR 1829 1822 1819) (VECTOR 84 11538 12860 11419 543) (VECTOR 78 1835 1832) (VECTOR 78 1838 1837) (VECTOR 78 1841 1840) (VECTOR 1848 1847 1846 1845 1844 1843) (FORWARD -) (VECTOR 1849 1842 1839) (VECTOR 84 11571 12867 11549 550) (VECTOR 54 11573 1850 17538) (VECTOR 78 1853 1852) (VECTOR 78 1856 1855) (VECTOR 1863 1862 1861 1860 1859 1858) (FORWARD -) (VECTOR 1864 1857 1854) (VECTOR 84 11598 12874 11576 551) (VECTOR 78 1867 1866) (VECTOR 1868) (VECTOR 84 11605 12877 11547 549) (VECTOR 78 1872 1870) (VECTOR 78 1875 1874) (VECTOR 1876) (VECTOR 84 11618 12881 11612 552) (VECTOR 78 1880 1878) (VECTOR 54 11624 1881 1877) (VECTOR 78 1884 1883) (VECTOR 78 1887 1886) (VECTOR 1894 1893 1892 1891 1890 1889) (FORWARD -) (VECTOR 1895 1888 1885) (VECTOR 84 11649 12889 11627 553) (VECTOR 54 11651 1896 1869) (VECTOR 54 11653 1897 1764) (VECTOR 78 1900 1899) (VECTOR 1901) (VECTOR 84 11304 12894 11298 537) (VECTOR 51 37) (VECTOR 1905 1904 12896) (VECTOR 84 11162 12897 11679 521) (VECTOR 78 1908 1907) (VECTOR 1912 1911 1910) (VECTOR 84 11341 12900 11307 538) (VECTOR 78 1918 1915) (VECTOR 11759 2197) (VECTOR 85 12903 1922) (VECTOR 86 124 1923) (VECTOR 84 0 17587 1926 120) (VECTOR 85 17587 1927) (VECTOR 86 121 1928) (VECTOR 1933 1932 14435) (VECTOR 84 11162 12909 11679 521) (VECTOR 78 1939 1936) (VECTOR 1943 1942 1941) (VECTOR 84 11341 12912 11307 538) (VECTOR 78 1949 1946) (VECTOR 78 1956 1953) (VECTOR 1962 1961 1960) (VECTOR 84 11538 12916 11419 543) (VECTOR 54 11653 1965 16354) (VECTOR 11759 2197) (VECTOR 85 12919 1967) (VECTOR 86 122 1968) (VECTOR 11759) (VECTOR 85 12922 11759) (VECTOR 86 123 1970) (VECTOR 78 1974 1973) (VECTOR 78 1977 1976) (VECTOR 1984 1983 1982 1981 1980 1979) (FORWARD -) (VECTOR 1985 1978 1975) (VECTOR 84 11382 12929 11360 541) (VECTOR 54 11384 1986 17486) (VECTOR 78 1989 1988) (VECTOR 78 1992 1991) (VECTOR 1999 1998 1997 1996 1995 1994) (FORWARD -) (VECTOR 2000 1993 1990) (VECTOR 84 11409 12936 11387 542) (VECTOR 78 2003 2002) (VECTOR 2004) (VECTOR 84 11416 12939 11358 540) (VECTOR 78 2010 2007) (VECTOR 78 2013 2012) (VECTOR 2014) (VECTOR 84 11433 12943 11427 544) (VECTOR 78 2017 2016) (VECTOR 2024 2023 2022 2021 2020 2019) (FORWARD -) (VECTOR 2025 2018 17507) (VECTOR 84 11455 12948 11436 545) (VECTOR 78 2028 2027) (VECTOR 78 2031 2030) (VECTOR 2038 2037 2036 2035 2034 2033) (FORWARD -) (VECTOR 2039 2032 2029) (VECTOR 84 11482 12954 11460 547) (VECTOR 54 11484 2040 17513) (VECTOR 78 2043 2042) (VECTOR 78 2046 2045) (VECTOR 2053 2052 2051 2050 2049 2048) (FORWARD -) (VECTOR 2054 2047 2044) (VECTOR 84 11509 12961 11487 548) (VECTOR 78 2057 2056) (VECTOR 2058) (VECTOR 84 11516 12964 11458 546) (VECTOR 54 11518 17530 2059) (VECTOR 78 2062 2061) (VECTOR 2069 2068 2067 2066 2065 2064) (FORWARD -) (VECTOR 2070 2063 2060) (VECTOR 84 11538 12970 11419 543) (VECTOR 78 2076 2073) (VECTOR 78 2079 2078) (VECTOR 78 2082 2081) (VECTOR 2089 2088 2087 2086 2085 2084) (FORWARD -) (VECTOR 2090 2083 2080) (VECTOR 84 11571 12977 11549 550) (VECTOR 54 11573 2091 17538) (VECTOR 78 2094 2093) (VECTOR 78 2097 2096) (VECTOR 2104 2103 2102 2101 2100 2099) (FORWARD -) (VECTOR 2105 2098 2095) (VECTOR 84 11598 12984 11576 551) (VECTOR 78 2108 2107) (VECTOR 2109) (VECTOR 84 11605 12987 11547 549) (VECTOR 78 2113 2111) (VECTOR 78 2116 2115) (VECTOR 2117) (VECTOR 84 11618 12991 11612 552) (VECTOR 78 2121 2119) (VECTOR 54 11624 2122 2118) (VECTOR 78 2125 2124) (VECTOR 78 2128 2127) (VECTOR 2135 2134 2133 2132 2131 2130) (FORWARD -) (VECTOR 2136 2129 2126) (VECTOR 84 11649 12999 11627 553) (VECTOR 54 11651 2137 2110) (VECTOR 54 11653 2138 2005) (VECTOR 78 2141 2140) (VECTOR 2142) (VECTOR 84 11304 13004 11298 537) (VECTOR 51 37) (VECTOR 2146 2145 13006) (VECTOR 84 11162 13007 11679 521) (VECTOR 78 2152 2149) (VECTOR 2156 2155 2154) (VECTOR 84 11341 13010 11307 538) (VECTOR 78 2162 2159) (VECTOR 2226 2225 2209) (VECTOR 85 13013 2166) (VECTOR 86 128 2167) (VECTOR 11759) (VECTOR 84 2171 13016 2170 124) (VECTOR 11759) (VECTOR 85 13018 2172) (VECTOR 86 125 2173) (VECTOR 54 0 2190 2182) (VECTOR 54 0 2196 2191) (VECTOR 2225 2209) (VECTOR 85 13023 2197) (VECTOR 86 126 2198) (VECTOR 54 0 2208 2203) (VECTOR 2524 2592) (VECTOR 85 13027 2209) (VECTOR 86 127 2210) (VECTOR 11759 3767) (VECTOR 84 2219 13030 2217 128) (VECTOR 11759 3767) (VECTOR 85 13032 2212) (VECTOR 3555 3554) (VECTOR 84 2219 13034 2217 128) (VECTOR 3555 3554) (VECTOR 85 13036 2214) (VECTOR 2226 2225) (VECTOR 84 2219 13038 2217 128) (VECTOR 2226 2225) (VECTOR 85 13040 2220) (VECTOR 86 129 2227) (VECTOR 78 2230 2229) (VECTOR 2231) (VECTOR 84 11304 13044 11298 537) (VECTOR 51 37) (VECTOR 2235 2234 13046) (VECTOR 84 11162 13047 11679 521) (VECTOR 78 2240 2239) (VECTOR 78 2243 2242) (VECTOR 2250 2249 2248 2247 2246 2245) (FORWARD -) (VECTOR 2251 2244 2241) (VECTOR 84 11382 13053 11360 541) (VECTOR 54 11384 2252 17486) (VECTOR 78 2255 2254) (VECTOR 78 2258 2257) (VECTOR 2265 2264 2263 2262 2261 2260) (FORWARD -) (VECTOR 2266 2259 2256) (VECTOR 84 11409 13060 11387 542) (VECTOR 78 2269 2268) (VECTOR 2270) (VECTOR 84 11416 13063 11358 540) (VECTOR 78 2273 2272) (VECTOR 2280 2279 2278 2277 2276 2275) (FORWARD -) (VECTOR 2281 2274 17507) (VECTOR 84 11455 13068 11436 545) (VECTOR 78 2284 2283) (VECTOR 2285) (VECTOR 84 11516 13071 11458 546) (VECTOR 78 2288 2287) (VECTOR 78 2291 2290) (VECTOR 2298 2297 2296 2295 2294 2293) (FORWARD -) (VECTOR 2299 2292 2289) (VECTOR 84 8568 13077 8546 380) (VECTOR 54 11518 2300 2286) (VECTOR 78 2303 2302) (VECTOR 78 2306 2305) (VECTOR 2313 2312 2311 2310 2309 2308) (FORWARD -) (VECTOR 2314 2307 2304) (VECTOR 84 11538 13084 11419 543) (VECTOR 78 2317 2316) (VECTOR 2318) (VECTOR 84 11605 13087 11547 549) (VECTOR 78 2321 2320) (VECTOR 78 2324 2323) (VECTOR 2331 2330 2329 2328 2327 2326) (FORWARD -) (VECTOR 2332 2325 2322) (VECTOR 84 11649 13093 11627 553) (VECTOR 54 11651 2333 2319) (VECTOR 78 2336 2335) (VECTOR 54 11653 2337 2271) (VECTOR 78 2343 2340) (VECTOR 2530 2529 2524 2592) (VECTOR 85 13099 2347) (VECTOR 86 130 2348) (VECTOR 78 2351 2350) (VECTOR 2352) (VECTOR 84 11304 13103 11298 537) (VECTOR 51 37) (VECTOR 2356 2355 13105) (VECTOR 84 11162 13106 11679 521) (VECTOR 78 2361 2360) (VECTOR 78 2364 2363) (VECTOR 2371 2370 2369 2368 2367 2366) (FORWARD -) (VECTOR 2372 2365 2362) (VECTOR 84 11382 13112 11360 541) (VECTOR 54 11384 2373 17486) (VECTOR 78 2376 2375) (VECTOR 78 2379 2378) (VECTOR 2386 2385 2384 2383 2382 2381) (FORWARD -) (VECTOR 2387 2380 2377) (VECTOR 84 11409 13119 11387 542) (VECTOR 78 2390 2389) (VECTOR 2391) (VECTOR 84 11416 13122 11358 540) (VECTOR 78 2394 2393) (VECTOR 2401 2400 2399 2398 2397 2396) (FORWARD -) (VECTOR 2402 2395 17507) (VECTOR 84 11455 13127 11436 545) (VECTOR 78 2405 2404) (VECTOR 2406) (VECTOR 84 11516 13130 11458 546) (VECTOR 78 2409 2408) (VECTOR 78 2412 2411) (VECTOR 2419 2418 2417 2416 2415 2414) (FORWARD -) (VECTOR 2420 2413 2410) (VECTOR 84 8568 13136 8546 380) (VECTOR 54 11518 2421 2407) (VECTOR 78 2424 2423) (VECTOR 78 2427 2426) (VECTOR 2434 2433 2432 2431 2430 2429) (FORWARD -) (VECTOR 2435 2428 2425) (VECTOR 84 11538 13143 11419 543) (VECTOR 78 2438 2437) (VECTOR 2439) (VECTOR 84 11605 13146 11547 549) (VECTOR 78 2442 2441) (VECTOR 78 2445 2444) (VECTOR 2452 2451 2450 2449 2448 2447) (FORWARD -) (VECTOR 2453 2446 2443) (VECTOR 84 11649 13152 11627 553) (VECTOR 54 11651 2454 2440) (VECTOR 78 2457 2456) (VECTOR 54 11653 2458 2392) (VECTOR 78 2464 2461) (VECTOR 2785 2784 2783 2778 2852) (VECTOR 85 13158 2468) (VECTOR 86 133 2469) (VECTOR 11759 3767 2723) (VECTOR 84 2533 13161 2478 130) (VECTOR 11759 3767 2723) (VECTOR 85 13163 2471) (VECTOR 11759 3767 2729) (VECTOR 84 2533 13165 2478 130) (VECTOR 11759 3767 2729) (VECTOR 85 13167 2473) (VECTOR 3555 3554 2729) (VECTOR 84 2533 13169 2478 130) (VECTOR 3555 3554 2729) (VECTOR 85 13171 2475) (VECTOR 78 2484 2481) (VECTOR 2488 2487 17507) (VECTOR 84 11455 13174 11436 545) (VECTOR 2492) (VECTOR 84 11516 13176 11458 546) (VECTOR 54 11518 17530 2493) (VECTOR 2496 2495 2494) (VECTOR 84 11538 13179 11419 543) (VECTOR 78 2502 2499) (VECTOR 2506) (VECTOR 84 11605 13182 11547 549) (VECTOR 54 11651 2510 2507) (VECTOR 54 11653 2511 2479) (VECTOR 78 2518 2515) (VECTOR 2522 2521 2520) (VECTOR 84 11341 13187 11307 538) (VECTOR 2530 2529 2524) (VECTOR 84 2533 13189 2478 130) (VECTOR 78 2540 2537) (VECTOR 2544 2543 17507) (VECTOR 84 11455 13192 11436 545) (VECTOR 2548) (VECTOR 84 11516 13194 11458 546) (VECTOR 54 11518 17530 2549) (VECTOR 2552 2551 2550) (VECTOR 84 11538 13197 11419 543) (VECTOR 78 2558 2555) (VECTOR 2562) (VECTOR 84 11605 13200 11547 549) (VECTOR 54 11651 2566 2563) (VECTOR 54 11653 2567 2535) (VECTOR 78 2574 2571) (VECTOR 2578 2577 2576) (VECTOR 84 11341 13205 11307 538) (VECTOR 2586 2585 2580) (VECTOR 85 13207 2534) (VECTOR 86 131 2587) (VECTOR 2593 2852) (VECTOR 85 13210 2592) (VECTOR 86 132 2594) (VECTOR 78 2597 2596) (VECTOR 2598) (VECTOR 84 11304 13214 11298 537) (VECTOR 51 37) (VECTOR 2602 2601 13216) (VECTOR 84 11162 13217 11679 521) (VECTOR 54 0 17387 14504) (VECTOR 78 2607 2606) (VECTOR 78 2610 2609) (VECTOR 2617 2616 2615 2614 2613 2612) (FORWARD -) (VECTOR 2618 2611 2608) (VECTOR 84 11382 13224 11360 541) (VECTOR 54 11384 2619 17486) (VECTOR 78 2622 2621) (VECTOR 78 2625 2624) (VECTOR 2632 2631 2630 2629 2628 2627) (FORWARD -) (VECTOR 2633 2626 2623) (VECTOR 84 11409 13231 11387 542) (VECTOR 78 2636 2635) (VECTOR 2637) (VECTOR 84 11416 13234 11358 540) (VECTOR 78 2640 2639) (VECTOR 2647 2646 2645 2644 2643 2642) (FORWARD -) (VECTOR 2648 2641 17507) (VECTOR 84 11455 13239 11436 545) (VECTOR 78 2651 2650) (VECTOR 2652) (VECTOR 84 11516 13242 11458 546) (VECTOR 78 2655 2654) (VECTOR 78 2658 2657) (VECTOR 2665 2664 2663 2662 2661 2660) (FORWARD -) (VECTOR 2666 2659 2656) (VECTOR 84 8568 13248 8546 380) (VECTOR 54 11518 2667 2653) (VECTOR 78 2670 2669) (VECTOR 78 2673 2672) (VECTOR 2680 2679 2678 2677 2676 2675) (FORWARD -) (VECTOR 2681 2674 2671) (VECTOR 84 11538 13255 11419 543) (VECTOR 78 2684 2683) (VECTOR 2685) (VECTOR 84 11605 13258 11547 549) (VECTOR 78 2688 2687) (VECTOR 78 2691 2690) (VECTOR 2698 2697 2696 2695 2694 2693) (FORWARD -) (VECTOR 2699 2692 2689) (VECTOR 84 11649 13264 11627 553) (VECTOR 54 11651 2700 2686) (VECTOR 78 2703 2702) (VECTOR 54 11653 2704 2638) (VECTOR 78 2710 2707) (VECTOR 2883 2882 2881 2876 7344 2872) (VECTOR 85 13270 2714) (VECTOR 86 138 2715) (VECTOR 11762 11759 3767 2718) (VECTOR 84 2789 13273 2732 133) (VECTOR 11762 11759 3767 2718) (VECTOR 85 13275 2717) (VECTOR 11762 11759 3767 2723) (VECTOR 84 2789 13277 2732 133) (VECTOR 11762 11759 3767 2723) (VECTOR 85 13279 2720) (VECTOR 11762 11759 3767 2729) (VECTOR 84 2789 13281 2732 133) (VECTOR 11762 11759 3767 2729) (VECTOR 85 13283 2725) (VECTOR 78 2738 2735) (VECTOR 2742 2741 17507) (VECTOR 84 11455 13286 11436 545) (VECTOR 2746) (VECTOR 84 11516 13288 11458 546) (VECTOR 54 11518 17530 2747) (VECTOR 2750 2749 2748) (VECTOR 84 11538 13291 11419 543) (VECTOR 78 2756 2753) (VECTOR 2760) (VECTOR 84 11605 13294 11547 549) (VECTOR 54 11651 2764 2761) (VECTOR 54 11653 2765 2733) (VECTOR 78 2772 2769) (VECTOR 2776 2775 2774) (VECTOR 84 11341 13299 11307 538) (VECTOR 2785 2784 2783 2778) (VECTOR 84 2789 13301 2732 133) (VECTOR 78 2796 2793) (VECTOR 2800 2799 17507) (VECTOR 84 11455 13304 11436 545) (VECTOR 2804) (VECTOR 84 11516 13306 11458 546) (VECTOR 54 11518 17530 2805) (VECTOR 2808 2807 2806) (VECTOR 84 11538 13309 11419 543) (VECTOR 78 2814 2811) (VECTOR 2818) (VECTOR 84 11605 13312 11547 549) (VECTOR 54 11651 2822 2819) (VECTOR 54 11653 2823 2791) (VECTOR 78 2830 2827) (VECTOR 2834 2833 2832) (VECTOR 84 11341 13317 11307 538) (VECTOR 2843 2842 2841 2836) (VECTOR 85 13319 2790) (VECTOR 86 134 2844) (VECTOR 54 0 2851 2847) (VECTOR 2876 2872) (VECTOR 85 13323 2852) (VECTOR 86 135 2853) (VECTOR 8061) (VECTOR 85 13326 8061) (VECTOR 2876) (VECTOR 85 13328 2876) (VECTOR 86 136 2856) (VECTOR 7730) (VECTOR 85 13331 7730) (VECTOR 2963) (VECTOR 85 13333 2963) (VECTOR 2969) (VECTOR 85 13335 2969) (VECTOR 3063) (VECTOR 85 13337 3063) (VECTOR 86 137 2861) (VECTOR 11762 11759 3767 8061 7730) (VECTOR 84 2888 13340 2870 138) (VECTOR 11762 11759 3767 8061 7730) (VECTOR 85 13342 2863) (VECTOR 3558 3555 3554 8061 2963) (VECTOR 84 2888 13344 2870 138) (VECTOR 3558 3555 3554 8061 2963) (VECTOR 85 13346 2865) (VECTOR 3558 3555 3554 8061 2969) (VECTOR 84 2888 13348 2870 138) (VECTOR 3558 3555 3554 8061 2969) (VECTOR 85 13350 2867) (VECTOR 2883 2882 2881 2876 2872) (VECTOR 84 2888 13352 2870 138) (VECTOR 2902 2901 2900 2895 2891) (VECTOR 85 13354 2889) (VECTOR 86 139 2903) (VECTOR 2905) (VECTOR 84 11674 13357 11673 555) (VECTOR 2907) (VECTOR 84 11674 13359 11673 555) (VECTOR 2910 2909 17365) (VECTOR 84 11162 13361 11679 521) (VECTOR 54 0 2913 2908) (VECTOR 2920) (VECTOR 84 11674 13364 11673 555) (VECTOR 2923 2922 17365) (VECTOR 84 11162 13366 11679 521) (VECTOR 54 0 2926 2921) (VECTOR 54 0 2934 2919) (VECTOR 54 0 2940 2935) (VECTOR 2944 2943 17365) (VECTOR 84 11162 13371 11679 521) (VECTOR 54 0 2947 2942) (VECTOR 7359 2984 2983 2978 7358 2974) (VECTOR 85 13374 2955) (VECTOR 86 141 2956) (VECTOR 3086 3077) (VECTOR 85 13377 7358) (VECTOR 86 140 2958) (VECTOR 11762 11759 3767 8061 7730) (VECTOR 84 2989 13380 2972 141) (VECTOR 11762 11759 3767 8061 7730) (VECTOR 85 13382 2960) (VECTOR 3558 3555 3554 8061 2963) (VECTOR 84 2989 13384 2972 141) (VECTOR 3558 3555 3554 8061 2963) (VECTOR 85 13386 2962) (VECTOR 3558 3555 3554 8061 2969) (VECTOR 84 2989 13388 2972 141) (VECTOR 54 0 2967 2966) (VECTOR 3558 3555 3554 8061 2969) (VECTOR 85 13391 2965) (VECTOR 7359 2984 2983 2978 2974) (VECTOR 84 2989 13393 2972 141) (VECTOR 3003 3002 3001 2996 2992) (VECTOR 85 13395 2990) (VECTOR 86 142 3004) (VECTOR 3006) (VECTOR 84 11674 13398 11673 555) (VECTOR 3008) (VECTOR 84 11674 13400 11673 555) (VECTOR 3011 3010 17365) (VECTOR 84 11162 13402 11679 521) (VECTOR 54 0 3014 3009) (VECTOR 3021) (VECTOR 84 11674 13405 11673 555) (VECTOR 3024 3023 17365) (VECTOR 84 11162 13407 11679 521) (VECTOR 54 0 3027 3022) (VECTOR 54 0 3035 3020) (VECTOR 54 0 3041 3036) (VECTOR 3045 3044 17365) (VECTOR 84 11162 13412 11679 521) (VECTOR 54 0 3048 3043) (VECTOR 3093 3092 3091 3086 3081 3077 3063) (VECTOR 85 13415 3056) (VECTOR 86 144 3057) (VECTOR 54 0 3061 3060) (VECTOR 3556 3290) (VECTOR 85 13419 3063) (VECTOR 86 143 3064) (VECTOR 11762 11759 3767 8063 8061 7733) (VECTOR 84 3099 13422 4307 144) (VECTOR 11762 11759 3767 8063 8061 7733) (VECTOR 85 13424 3066) (VECTOR 3558 3555 3554 3550 8061 3069) (VECTOR 84 3099 13426 4307 144) (VECTOR 3558 3555 3554 3550 8061 3069) (VECTOR 85 13428 3068) (VECTOR 3558 3555 3554 3550 8061 3073) (VECTOR 84 3099 13430 4307 144) (VECTOR 3558 3555 3554 3550 8061 3073) (VECTOR 85 13432 3071) (VECTOR 3083 3082 17374) (VECTOR 84 11162 13434 11679 521) (VECTOR 3093 3092 3091 3086 3081 3077) (VECTOR 84 3099 13436 4307 144) (VECTOR 3109 3108 17374) (VECTOR 84 11162 13438 11679 521) (VECTOR 3119 3118 3117 3112 3107 3103) (VECTOR 85 13440 3100) (VECTOR 86 145 3120) (VECTOR 3124) (VECTOR 84 11674 13443 11673 555) (VECTOR 3128) (VECTOR 84 11674 13445 11673 555) (VECTOR 3131 3130 17365) (VECTOR 84 11162 13447 11679 521) (VECTOR 54 0 3134 3129) (VECTOR 3143) (VECTOR 84 11674 13450 11673 555) (VECTOR 3146 3145 17365) (VECTOR 84 11162 13452 11679 521) (VECTOR 54 0 3149 3144) (VECTOR 54 0 3157 3140) (VECTOR 54 0 3163 3158) (VECTOR 3167 3166 17365) (VECTOR 84 11162 13457 11679 521) (VECTOR 54 0 3170 3165) (VECTOR 3234 3233 3232 3231 3226 3221 3217 3195) (VECTOR 85 13460 3178) (VECTOR 86 148 3179) (VECTOR 4183) (VECTOR 85 13463 4183) (VECTOR 3204) (VECTOR 85 13465 3204) (VECTOR 3214) (VECTOR 85 13467 3214) (VECTOR 3290) (VECTOR 85 13469 3290) (VECTOR 86 146 3184) (VECTOR 54 0 17365 3186) (VECTOR 54 0 3190 3189) (VECTOR 54 0 3192 3191) (VECTOR 3557 3290) (VECTOR 85 13475 3195) (VECTOR 86 147 3196) (VECTOR 11762 11760 11759 3767 8063 8061 4183) (VECTOR 84 3241 13478 4310 148) (VECTOR 11762 11760 11759 3767 8063 8061 4183) (VECTOR 85 13480 3198) (VECTOR 11762 11760 11759 3767 8063 8061 3204) (VECTOR 84 3241 13482 4310 148) (VECTOR 54 0 3202 3201) (VECTOR 11762 11760 11759 3767 8063 8061 3204) (VECTOR 85 13485 3200) (VECTOR 3558 3556 3555 3554 3550 8061 3214) (VECTOR 84 3241 13487 4310 148) (VECTOR 54 0 3208 3207) (VECTOR 54 0 3212 3210) (VECTOR 3558 3556 3555 3554 3550 8061 3214) (VECTOR 85 13491 3206) (VECTOR 3223 3222 17374) (VECTOR 84 11162 13493 11679 521) (VECTOR 3234 3233 3232 3231 3226 3221 3217) (VECTOR 84 3241 13495 4310 148) (VECTOR 3250 3249 17374) (VECTOR 84 11162 13497 11679 521) (VECTOR 3261 3260 3259 3258 3253 3248 3244) (VECTOR 85 13499 3242) (VECTOR 86 149 3262) (VECTOR 54 0 3265 3264) (VECTOR 3403 3402 3401 3400 3399 3394 3389 3290) (VECTOR 85 13503 3273) (VECTOR 86 151 3274) (VECTOR 54 0 3276 11347) (VECTOR 54 0 17365 3279) (VECTOR 54 0 3283 3282) (VECTOR 54 0 3285 3284) (VECTOR 54 0 3288 3278) (VECTOR 3556 3501) (VECTOR 85 13511 3290) (VECTOR 86 150 3291) (VECTOR 11762 11761 11760 11759 3767 8063 8061) (VECTOR 84 3319 13514 3312 151) (VECTOR 11762 11761 11760 11759 3767 8063 8061) (VECTOR 85 13516 3293) (VECTOR 3558 3557 3556 3555 3554 3550 8061) (VECTOR 84 3319 13518 3312 151) (VECTOR 3558 3557 3556 3555 3554 3550 8061) (VECTOR 85 13520 3295) (VECTOR 3308 3307 3306 3305 3304 3299 3298) (VECTOR 84 3319 13522 3312 151) (VECTOR 3308 3307 3306 3305 3304 3299 3298) (VECTOR 85 13524 3297) (VECTOR 3403 3402 3401 3400 3399 3394 3389) (VECTOR 84 3319 13526 3312 151) (VECTOR 3403 3402 3401 3400 3399 3394 3389) (VECTOR 85 13528 3320) (VECTOR 86 152 3321) (VECTOR 54 0 3324 3323) (VECTOR 3403 3402 3401 3400 3399 3394 3389 3385) (VECTOR 85 13532 3332) (VECTOR 86 155 3333) (VECTOR 4189) (VECTOR 85 13535 4189) (VECTOR 3361) (VECTOR 85 13537 3361) (VECTOR 3380) (VECTOR 85 13539 3380) (VECTOR 3501) (VECTOR 85 13541 3501) (VECTOR 86 153 3338) (VECTOR 54 0 3341 3340) (VECTOR 54 0 3343 3342) (VECTOR 3557 3501) (VECTOR 85 13546 3346) (VECTOR 86 154 3347) (VECTOR 11762 11761 11760 11759 3767 8063 8061 4189) (VECTOR 84 3411 13549 4315 155) (VECTOR 11762 11761 11760 11759 3767 8063 8061 4189) (VECTOR 85 13551 3349) (VECTOR 11762 11761 11760 11759 3767 8063 8061 3361) (VECTOR 84 3411 13553 4315 155) (VECTOR 54 0 3353 3352) (VECTOR 54 0 3357 3355) (VECTOR 11762 11761 11760 11759 3767 8063 8061 3361) (VECTOR 85 13557 3351) (VECTOR 11762 11761 11760 11759 3767 8063 8061 3380) (VECTOR 84 3411 13559 4315 155) (VECTOR 54 0 3366 3365) (VECTOR 54 0 3371 3368) (VECTOR 54 0 3376 3373) (VECTOR 11762 11761 11760 11759 3767 8063 8061 3380) (VECTOR 85 13564 3363) (VECTOR 3391 3390 17374) (VECTOR 84 11162 13566 11679 521) (VECTOR 3403 3402 3401 3400 3399 3394 3389 3385) (VECTOR 84 3411 13568 4315 155) (VECTOR 3422 3421 17374) (VECTOR 84 11162 13570 11679 521) (VECTOR 3434 3433 3432 3431 3430 3425 3420 3416) (VECTOR 85 13572 3412) (VECTOR 86 156 3435) (VECTOR 54 0 3450 3442) (VECTOR 54 0 3456 3451) (VECTOR 54 0 3461 3459) (VECTOR 3644 3643 3642 3641 3640 3635 3673 3501) (VECTOR 85 13578 3469) (VECTOR 86 158 3470) (VECTOR 54 0 3475 3473) (VECTOR 54 0 17365 3478) (VECTOR 54 0 3482 3481) (VECTOR 54 0 3485 3483) (VECTOR 54 0 3488 3477) (VECTOR 54 0 3492 3491) (VECTOR 54 0 3494 3493) (VECTOR 54 0 3497 3490) (VECTOR 54 0 3507 3506) (VECTOR 54 0 3509 3504) (VECTOR 54 0 3512 3503) (VECTOR 54 0 3517 3514) (VECTOR 3524) (VECTOR 84 11674 13593 11673 555) (VECTOR 3527 3526 17365) (VECTOR 84 11162 13595 11679 521) (VECTOR 54 0 3530 3525) (VECTOR 54 0 3539 3534) (VECTOR 54 0 3542 3521) (VECTOR 3544 3543) (VECTOR 85 13600 3501) (VECTOR 86 157 3545) (VECTOR 11762 11761 11760 11759 3767 8063 8061) (VECTOR 84 3584 13603 3577 158) (VECTOR 11762 11761 11760 11759 3767 8063 8061) (VECTOR 85 13605 3547) (VECTOR 3558 3557 3556 3555 3554 3550 8061) (VECTOR 84 3584 13607 3577 158) (VECTOR 3558 3557 3556 3555 3554 3550 8061) (VECTOR 85 13609 3549) (VECTOR 3570 3569 3568 3567 3566 3561 8061) (VECTOR 84 3584 13611 3577 158) (VECTOR 3570 3569 3568 3567 3566 3561 8061) (VECTOR 85 13613 3560) (VECTOR 3644 3643 3642 3641 3640 3635 3673) (VECTOR 84 3584 13615 3577 158) (VECTOR 3644 3643 3642 3641 3640 3635 3673) (VECTOR 85 13617 3585) (VECTOR 86 159 3586) (VECTOR 3644 3643 3642 3641 3640 3635 3673 3630) (VECTOR 85 13620 5054) (VECTOR 86 160 3588) (VECTOR 3706 3705 3704 3703 3702 3745 3697 3684) (VECTOR 85 13623 5054) (VECTOR 86 163 3590) (VECTOR 11762 11761 11760 11759 3767 8063 4192) (VECTOR 84 3651 13626 42 160) (VECTOR 11762 11761 11760 11759 3767 8063 4192) (VECTOR 85 13628 3592) (VECTOR 11762 11761 11760 11759 3767 8063 4216) (VECTOR 84 3651 13630 42 160) (VECTOR 11762 11761 11760 11759 3767 8063 4216) (VECTOR 85 13632 3594) (VECTOR 3628 3627 3626 3625 3767 8063 3624) (VECTOR 84 3651 13634 42 160) (VECTOR 54 0 3599 3598) (VECTOR 54 0 3604 3601) (VECTOR 54 0 3609 3606) (VECTOR 54 0 3620 3616) (VECTOR 54 0 3623 3613) (VECTOR 3628 3627 3626 3625 3767 8063 3624) (VECTOR 85 13641 3596) (VECTOR 3632 3631 17374) (VECTOR 84 11162 13643 11679 521) (VECTOR 3644 3643 3642 3641 3640 3635 3630) (VECTOR 84 3651 13645 42 160) (VECTOR 3655 3654 17374) (VECTOR 84 11162 13647 11679 521) (VECTOR 3667 3666 3665 3664 3663 3658 3653) (VECTOR 85 13649 3652) (VECTOR 86 161 3668) (VECTOR 17572) (VECTOR 84 11674 13652 11673 555) (VECTOR 3704 3697) (VECTOR 85 13654 3673) (VECTOR 86 162 3674) (VECTOR 3822 3821 3820 3819 3818 3893 3813) (VECTOR 85 13657 5054) (VECTOR 86 167 3676) (VECTOR 11762 11761 11760 11759 4177 4175 4192) (VECTOR 84 3713 13660 45 163) (VECTOR 11762 11761 11760 11759 4177 4175 4192) (VECTOR 85 13662 3678) (VECTOR 11762 11761 11760 11759 3767 4175 4192) (VECTOR 84 3713 13664 45 163) (VECTOR 11762 11761 11760 11759 3767 4175 4192) (VECTOR 85 13666 3680) (VECTOR 11762 11761 11760 11759 3767 4175 4216) (VECTOR 84 3713 13668 45 163) (VECTOR 11762 11761 11760 11759 3767 4175 4216) (VECTOR 85 13670 3682) (VECTOR 3687) (VECTOR 84 11674 13672 11673 555) (VECTOR 3690 3689 17365) (VECTOR 84 11162 13674 11679 521) (VECTOR 54 0 3693 3688) (VECTOR 3706 3705 3704 3703 3702 3697 3684) (VECTOR 84 3713 13677 45 163) (VECTOR 3718) (VECTOR 84 11674 13679 11673 555) (VECTOR 3721 3720 17365) (VECTOR 84 11162 13681 11679 521) (VECTOR 54 0 3724 3719) (VECTOR 3737 3736 3735 3734 3733 3728 3715) (VECTOR 85 13684 3714) (VECTOR 86 164 3738) (VECTOR 3741 3740 17374) (VECTOR 84 11162 13687 11679 521) (VECTOR 54 0 17387 3743) (VECTOR 3821 3893) (VECTOR 85 13690 3745) (VECTOR 86 165 3746) (VECTOR 4175) (VECTOR 85 13693 4175) (VECTOR 3750) (VECTOR 85 13695 3750) (VECTOR 3755) (VECTOR 85 13697 3755) (VECTOR 3893) (VECTOR 85 13699 3893) (VECTOR 86 166 3757) (VECTOR 3997 3996 3995 3994 3957 3993 3972) (VECTOR 85 13702 5054) (VECTOR 86 172 3759) (VECTOR 11762 11761 11760 11759 4177 4192) (VECTOR 84 3828 13705 3771 167) (VECTOR 11762 11761 11760 11759 4177 4192) (VECTOR 85 13707 3761) (VECTOR 11762 11761 11760 11759 3767 4192) (VECTOR 84 3828 13709 3771 167) (VECTOR 11762 11761 11760 11759 3767 4192) (VECTOR 85 13711 3763) (VECTOR 11762 11761 11760 11759 3767 4216) (VECTOR 84 3828 13713 3771 167) (VECTOR 11762 11761 11760 11759 3767 4216) (VECTOR 85 13715 3765) (VECTOR 54 0 3777 3776) (VECTOR 54 0 3779 3774) (VECTOR 54 0 3782 3773) (VECTOR 54 0 3787 3784) (VECTOR 3794) (VECTOR 84 11674 13721 11673 555) (VECTOR 3797 3796 17365) (VECTOR 84 11162 13723 11679 521) (VECTOR 54 0 3800 3795) (VECTOR 54 0 3809 3804) (VECTOR 54 0 3812 3791) (VECTOR 3822 3821 3820 3819 3818 3813) (VECTOR 84 3828 13728 3771 167) (VECTOR 54 0 3835 3834) (VECTOR 54 0 3837 3832) (VECTOR 54 0 3840 3831) (VECTOR 54 0 3845 3842) (VECTOR 3852) (VECTOR 84 11674 13734 11673 555) (VECTOR 3855 3854 17365) (VECTOR 84 11162 13736 11679 521) (VECTOR 54 0 3858 3853) (VECTOR 54 0 3867 3862) (VECTOR 54 0 3870 3849) (VECTOR 3880 3879 3878 3877 3876 3871) (VECTOR 85 13741 3829) (VECTOR 86 168 3881) (VECTOR 3883) (VECTOR 84 11674 13744 11673 555) (VECTOR 3886 3885 17365) (VECTOR 84 11162 13746 11679 521) (VECTOR 54 0 3889 3884) (VECTOR 3995 3993) (VECTOR 85 13749 3893) (VECTOR 86 169 3894) (VECTOR 4179) (VECTOR 85 13752 4179) (VECTOR 3970) (VECTOR 85 13754 3970) (VECTOR 54 0 3904 3900) (VECTOR 3907) (VECTOR 85 13757 3907) (VECTOR 3911) (VECTOR 84 11674 13759 11673 555) (VECTOR 3914 3913 17365) (VECTOR 84 11162 13761 11679 521) (VECTOR 54 0 3917 3912) (VECTOR 54 0 3926 3921) (VECTOR 3932) (VECTOR 84 11674 13765 11673 555) (VECTOR 3935 3934 17365) (VECTOR 84 11162 13767 11679 521) (VECTOR 54 0 3938 3933) (VECTOR 54 0 3947 3942) (VECTOR 3950) (VECTOR 85 13771 3929) (VECTOR 86 170 3951) (VECTOR 4093 4167) (VECTOR 85 13774 3957) (VECTOR 86 171 3958) (VECTOR 11762 11761 11760 11759 4179 4180) (VECTOR 84 4003 13777 46 172) (VECTOR 11762 11761 11760 11759 4179 4180) (VECTOR 85 13779 3960) (VECTOR 11762 11761 11760 11759 4179 4192) (VECTOR 84 4003 13781 46 172) (VECTOR 11762 11761 11760 11759 4179 4192) (VECTOR 85 13783 3962) (VECTOR 11762 11761 11760 11759 3970 4192) (VECTOR 84 4003 13785 46 172) (VECTOR 54 0 3968 3966) (VECTOR 11762 11761 11760 11759 3970 4192) (VECTOR 85 13788 3964) (VECTOR 3975) (VECTOR 84 11674 13790 11673 555) (VECTOR 3978 3977 17365) (VECTOR 84 11162 13792 11679 521) (VECTOR 54 0 3981 3976) (VECTOR 54 0 3990 3985) (VECTOR 3997 3996 3995 3994 3993 3972) (VECTOR 84 4003 13796 46 172) (VECTOR 4008) (VECTOR 84 11674 13798 11673 555) (VECTOR 4011 4010 17365) (VECTOR 84 11162 13800 11679 521) (VECTOR 54 0 4014 4009) (VECTOR 54 0 4023 4018) (VECTOR 4030 4029 4028 4027 4026 4005) (VECTOR 85 13804 4004) (VECTOR 86 173 4031) (VECTOR 4094 4093 4092 4091 4167 4090) (VECTOR 85 13807 5054) (VECTOR 86 174 4033) (VECTOR 11762 11761 11760 11759 10472) (VECTOR 85 13810 5054) (VECTOR 86 178 4035) (VECTOR 11762 11761 11760 11759 4180) (VECTOR 84 4099 13813 4048 174) (VECTOR 11762 11761 11760 11759 4180) (VECTOR 85 13815 4037) (VECTOR 11762 11761 11760 11759 4192) (VECTOR 84 4099 13817 4048 174) (VECTOR 11762 11761 11760 11759 4192) (VECTOR 85 13819 4039) (VECTOR 11762 11761 11760 11759 4216) (VECTOR 84 4099 13821 4048 174) (VECTOR 11762 11761 11760 11759 4216) (VECTOR 85 13823 4041) (VECTOR 54 0 4054 4053) (VECTOR 54 0 4056 4051) (VECTOR 54 0 4059 4050) (VECTOR 54 0 4064 4061) (VECTOR 4071) (VECTOR 84 11674 13829 11673 555) (VECTOR 4074 4073 17365) (VECTOR 84 11162 13831 11679 521) (VECTOR 54 0 4077 4072) (VECTOR 54 0 4086 4081) (VECTOR 54 0 4089 4068) (VECTOR 4094 4093 4092 4091 4090) (VECTOR 84 4099 13836 4048 174) (VECTOR 54 0 4106 4105) (VECTOR 54 0 4108 4103) (VECTOR 54 0 4111 4102) (VECTOR 54 0 4116 4113) (VECTOR 4123) (VECTOR 84 11674 13842 11673 555) (VECTOR 4126 4125 17365) (VECTOR 84 11162 13844 11679 521) (VECTOR 54 0 4129 4124) (VECTOR 54 0 4138 4133) (VECTOR 54 0 4141 4120) (VECTOR 4146 4145 4144 4143 4142) (VECTOR 85 13849 4100) (VECTOR 86 175 4147) (VECTOR 4149) (VECTOR 84 11674 13852 11673 555) (VECTOR 4152 4151 17365) (VECTOR 84 11162 13854 11679 521) (VECTOR 54 0 4155 4150) (VECTOR 54 0 4164 4159) (VECTOR 11761 10472) (VECTOR 85 13858 4167) (VECTOR 86 176 4168) (VECTOR 54 0 4177 4175) (VECTOR 54 0 4179 4173) (VECTOR 4180) (VECTOR 85 13863 4180) (VECTOR 54 0 4185 4183) (VECTOR 54 0 4191 4189) (VECTOR 4192) (VECTOR 85 13867 4192) (VECTOR 54 0 4197 4195) (VECTOR 54 0 10950 4200) (VECTOR 54 0 11770 4201) (VECTOR 54 0 4204 4199) (VECTOR 54 0 4213 4210) (VECTOR 54 0 4215 4208) (VECTOR 4216) (VECTOR 85 13875 4216) (VECTOR 54 0 4223 4222) (VECTOR 54 0 4225 4220) (VECTOR 54 0 4228 4219) (VECTOR 54 0 4233 4230) (VECTOR 4240) (VECTOR 84 11674 13881 11673 555) (VECTOR 4243 4242 17365) (VECTOR 84 11162 13883 11679 521) (VECTOR 54 0 4246 4241) (VECTOR 54 0 4255 4250) (VECTOR 54 0 4258 4237) (VECTOR 54 0 4265 4264) (VECTOR 54 0 4267 4262) (VECTOR 54 0 4270 4261) (VECTOR 54 0 4275 4272) (VECTOR 4282) (VECTOR 84 11674 13892 11673 555) (VECTOR 4285 4284 17365) (VECTOR 84 11162 13894 11679 521) (VECTOR 54 0 4288 4283) (VECTOR 54 0 4297 4292) (VECTOR 54 0 4300 4279) (VECTOR 4301) (VECTOR 85 13899 4259) (VECTOR 86 177 4302) (VECTOR 4369 4368 4367 4366 10493 10614) (VECTOR 85 13902 5054) (VECTOR 86 180 4304) (VECTOR 11762 11761 11760 11759) (VECTOR 84 4330 13905 4326 178) (VECTOR 11762 11761 11760 11759) (VECTOR 85 13907 4331) (VECTOR 86 179 4332) (VECTOR 11762 11761 11760 11759 4338) (VECTOR 84 4374 13910 4365 180) (VECTOR 54 0 4336 4335) (VECTOR 11762 11761 11760 11759 4338) (VECTOR 85 13913 4334) (VECTOR 11762 11761 11760 11759 4347) (VECTOR 84 4374 13915 4365 180) (VECTOR 54 0 4345 4342) (VECTOR 11762 11761 11760 11759 4347) (VECTOR 85 13918 4340) (VECTOR 11762 11761 11760 11759 4362) (VECTOR 84 4374 13920 4365 180) (VECTOR 10963) (VECTOR 84 10772 13922 11673 484) (VECTOR 4353 11773 10963) (VECTOR 84 10778 13924 11679 485) (VECTOR 54 0 4354 4352) (VECTOR 54 0 4359 4355) (VECTOR 11762 11761 11760 11759 4362) (VECTOR 85 13928 4349) (VECTOR 4369 4368 4367 4366 10493) (VECTOR 84 4374 13930 4365 180) (VECTOR 4378) (VECTOR 84 10772 13932 11673 484) (VECTOR 4381 4380 17365) (VECTOR 84 10778 13934 11679 485) (VECTOR 54 0 4384 4379) (VECTOR 54 0 4393 4388) (VECTOR 4400 4399 4398 4397 4396) (VECTOR 85 13938 4375) (VECTOR 86 181 4401) (VECTOR 11762 11761 11760 11759 11757 10820 10633) (VECTOR 85 13941 5054) (VECTOR 86 182 4403) (VECTOR 11762 11761 11760 11759 11758 11757 10633) (VECTOR 85 13944 5054) (VECTOR 86 571 4405) (VECTOR 11762 11761 11760 11759 11757 4422) (VECTOR 84 4418 13947 4412 182) (VECTOR 11762 11761 11760 11759 11757 4422) (VECTOR 85 13949 4407) (VECTOR 11762 11761 11760 11759 11757 4426) (VECTOR 84 4418 13951 4412 182) (VECTOR 11762 11761 11760 11759 11757 4426) (VECTOR 85 13953 4409) (VECTOR 11762 11761 11760 11759 11757 10633) (VECTOR 84 4418 13955 4412 182) (VECTOR 11762 11761 11760 11759 11757 10633) (VECTOR 85 13957 4419) (VECTOR 86 183 4420) (VECTOR 54 10956 4568 4449) (VECTOR 4422) (VECTOR 85 13961 4422) (VECTOR 54 10956 4425 4424) (VECTOR 4426) (VECTOR 85 13964 4426) (VECTOR 10633) (VECTOR 85 13966 10633) (VECTOR 86 184 4428) (VECTOR 11769) (VECTOR 85 13969 11769) (VECTOR 86 185 4430) (VECTOR 11769 10633) (VECTOR 85 13972 5054) (VECTOR 86 186 4432) (VECTOR 11771) (VECTOR 84 4438 13975 4437 187) (VECTOR 11771) (VECTOR 85 13977 4439) (VECTOR 86 188 4440) (VECTOR 11771 11769 10633) (VECTOR 85 13980 4446) (VECTOR 86 192 4447) (VECTOR 54 10927 4536 4529) (VECTOR 4449) (VECTOR 85 13984 4449) (VECTOR 4498) (VECTOR 85 13986 4498) (VECTOR 86 189 4451) (VECTOR 4568) (VECTOR 85 13989 4568) (VECTOR 4821) (VECTOR 85 13991 4821) (VECTOR 86 190 4454) (VECTOR 4821 4498) (VECTOR 85 13994 10633) (VECTOR 86 191 4456) (VECTOR 11771 11769) (VECTOR 84 4463 13997 4461 192) (VECTOR 11771 11769) (VECTOR 85 13999 4464) (VECTOR 86 193 4465) (VECTOR 11771 11769 4821 4498) (VECTOR 85 14002 4468) (VECTOR 86 194 4469) (VECTOR 11771 11769 4821 4545 4533) (VECTOR 85 14005 4472) (VECTOR 86 199 4473) (VECTOR 11771 11769 4568) (VECTOR 84 4483 14008 4480 194) (VECTOR 11771 11769 4568) (VECTOR 85 14010 4475) (VECTOR 11771 11769 4821) (VECTOR 84 4483 14012 4480 194) (VECTOR 11771 11769 4821) (VECTOR 85 14014 4484) (VECTOR 86 195 4485) (VECTOR 4488) (VECTOR 84 10890 14017 10883 496) (VECTOR 78 4491 4490) (VECTOR 4493 4492 17365) (VECTOR 84 10902 14020 10893 497) (VECTOR 54 10927 4497 4489) (VECTOR 4545 4533) (VECTOR 85 14023 4498) (VECTOR 86 196 4499) (VECTOR 4536) (VECTOR 85 14026 4536) (VECTOR 4545) (VECTOR 85 14028 4545) (VECTOR 86 197 4502) (VECTOR 4529) (VECTOR 85 14031 4529) (VECTOR 4533) (VECTOR 85 14033 4533) (VECTOR 86 198 4505) (VECTOR 11771 11769 4834 4821 4545) (VECTOR 85 14036 4509) (VECTOR 86 203 4510) (VECTOR 11771 11769 4568 4536) (VECTOR 84 4525 14039 4519 199) (VECTOR 11771 11769 4568 4536) (VECTOR 85 14041 4512) (VECTOR 11771 11769 4821 4536) (VECTOR 84 4525 14043 4519 199) (VECTOR 11771 11769 4821 4536) (VECTOR 85 14045 4514) (VECTOR 11771 11769 4821 4545) (VECTOR 84 4525 14047 4519 199) (VECTOR 11771 11769 4821 4545) (VECTOR 85 14049 4526) (VECTOR 86 200 4527) (VECTOR 8701) (VECTOR 84 10890 14052 10883 496) (VECTOR 8701) (VECTOR 85 14054 4529) (VECTOR 4532) (VECTOR 84 10890 14056 10883 496) (VECTOR 4834) (VECTOR 85 14058 4533) (VECTOR 86 201 4534) (VECTOR 11781 11774 8701) (VECTOR 84 10902 14061 10893 497) (VECTOR 11781 11774 8701) (VECTOR 85 14063 4536) (VECTOR 78 4539 4538) (VECTOR 4541 4540 17365) (VECTOR 84 10902 14066 10893 497) (VECTOR 11781 11774 4834) (VECTOR 85 14068 4545) (VECTOR 86 202 4546) (VECTOR 11771 11769 8701 4568) (VECTOR 84 4561 14071 4555 203) (VECTOR 11771 11769 8701 4568) (VECTOR 85 14073 4548) (VECTOR 11771 11769 8701 4821) (VECTOR 84 4561 14075 4555 203) (VECTOR 11771 11769 8701 4821) (VECTOR 85 14077 4550) (VECTOR 11771 11769 4834 4821) (VECTOR 84 4561 14079 4555 203) (VECTOR 11771 11769 4834 4821) (VECTOR 85 14081 4562) (VECTOR 86 204 4563) (VECTOR 11781 11774 11771 11769 4834 4821) (VECTOR 85 14084 8701) (VECTOR 86 220 4565) (VECTOR 78 4567 11770) (VECTOR 4568) (VECTOR 85 14088 4568) (VECTOR 4653) (VECTOR 85 14090 4653) (VECTOR 86 207 4570) (VECTOR 54 0 4573 11748) (VECTOR 4574) (VECTOR 85 14094 4574) (VECTOR 54 0 4579 4576) (VECTOR 4580) (VECTOR 85 14097 4580) (VECTOR 54 0 4585 4584) (VECTOR 54 0 4588 4582) (VECTOR 4589) (VECTOR 85 14101 4589) (VECTOR 54 0 4595 4593) (VECTOR 54 0 17365 4598) (VECTOR 54 0 4602 4601) (VECTOR 54 0 4605 4603) (VECTOR 54 0 4608 4597) (VECTOR 54 0 4613 4610) (VECTOR 54 0 4617 4591) (VECTOR 54 0 4624 4622) (VECTOR 54 0 17365 4627) (VECTOR 54 0 4631 4630) (VECTOR 54 0 4634 4632) (VECTOR 54 0 4637 4626) (VECTOR 54 0 4642 4639) (VECTOR 54 0 4646 4620) (VECTOR 4648) (VECTOR 85 14117 4619) (VECTOR 86 205 4649) (VECTOR 78 4652 4651) (VECTOR 11749 4706) (VECTOR 85 14121 4653) (VECTOR 86 206 4654) (VECTOR 84 0 17587 4657 207) (VECTOR 85 17587 4658) (VECTOR 86 208 4659) (VECTOR 78 4662 4661) (VECTOR 11749 4706) (VECTOR 85 14128 4663) (VECTOR 86 211 4664) (VECTOR 11748) (VECTOR 85 14131 11748) (VECTOR 86 209 4666) (VECTOR 51 37) (VECTOR 54 0 4672 14134) (VECTOR 54 0 4674 17377) (VECTOR 54 0 4676 4670) (VECTOR 54 0 17365 4679) (VECTOR 54 0 4683 4682) (VECTOR 51 37) (VECTOR 54 0 4686 14140) (VECTOR 54 0 11770 4687) (VECTOR 54 0 4689 4684) (VECTOR 54 0 4692 4678) (VECTOR 54 0 4696 4695) (VECTOR 54 0 4698 4697) (VECTOR 54 0 4701 4694) (VECTOR 54 0 4705 4668) (VECTOR 11748 4733) (VECTOR 85 14149 4706) (VECTOR 86 210 4707) (VECTOR 11749) (VECTOR 84 4711 14152 4710 211) (VECTOR 11749) (VECTOR 85 14154 4712) (VECTOR 86 212 4713) (VECTOR 78 4716 4715) (VECTOR 11749 11748 4733) (VECTOR 85 14158 4717) (VECTOR 86 213 4718) (VECTOR 78 4721 4720) (VECTOR 11749 11748 11747 10726) (VECTOR 85 14162 4722) (VECTOR 86 218 4723) (VECTOR 11749 11748) (VECTOR 84 4728 14165 4726 213) (VECTOR 11749 11748) (VECTOR 85 14167 4729) (VECTOR 86 214 4730) (VECTOR 11747 10726) (VECTOR 85 14170 4733) (VECTOR 86 215 4734) (VECTOR 11747) (VECTOR 85 14173 11747) (VECTOR 86 216 4736) (VECTOR 4738) (VECTOR 85 14176 4738) (VECTOR 8598) (VECTOR 85 14178 8598) (VECTOR 4742) (VECTOR 85 14180 4742) (VECTOR 4746) (VECTOR 84 11674 14182 11673 555) (VECTOR 4749 4748 17365) (VECTOR 84 11162 14184 11679 521) (VECTOR 54 0 4752 4747) (VECTOR 54 0 4761 4756) (VECTOR 4767) (VECTOR 84 11674 14188 11673 555) (VECTOR 4770 4769 17365) (VECTOR 84 11162 14190 11679 521) (VECTOR 54 0 4773 4768) (VECTOR 54 0 4782 4777) (VECTOR 4785) (VECTOR 85 14194 4764) (VECTOR 86 217 4786) (VECTOR 78 4789 4788) (VECTOR 11749 11748 11747 11746 4834) (VECTOR 85 14198 4790) (VECTOR 86 570 4791) (VECTOR 11749 11748 11747) (VECTOR 84 4795 14201 66 218) (VECTOR 11749 11748 11747) (VECTOR 85 14203 4796) (VECTOR 86 219 4797) (VECTOR 11781 11774 11771 11769 11754 4874) (VECTOR 85 14206 8701) (VECTOR 86 569 4799) (VECTOR 11781 11774 11771 11769 9167) (VECTOR 84 4815 14209 4810 220) (VECTOR 11781 11774 11771 11769 9167) (VECTOR 85 14211 4801) (VECTOR 11781 11774 11771 11769 8701) (VECTOR 84 4815 14213 4810 220) (VECTOR 11781 11774 11771 11769 8701) (VECTOR 85 14215 4803) (VECTOR 11781 11774 11771 11769 4834) (VECTOR 84 4815 14217 4810 220) (VECTOR 11781 11774 11771 11769 4834) (VECTOR 85 14219 4805) (VECTOR 11781 11774 11771 11769 4874) (VECTOR 84 4815 14221 4810 220) (VECTOR 11781 11774 11771 11769 4874) (VECTOR 85 14223 4816) (VECTOR 86 221 4817) (VECTOR 78 4820 4819) (VECTOR 11754 4874) (VECTOR 85 14227 4821) (VECTOR 86 222 4822) (VECTOR 11754) (VECTOR 85 14230 11754) (VECTOR 86 223 4824) (VECTOR 9167) (VECTOR 85 14233 9167) (VECTOR 8701) (VECTOR 85 14235 8701) (VECTOR 4834) (VECTOR 85 14237 4834) (VECTOR 4874) (VECTOR 85 14239 4874) (VECTOR 86 224 4829) (VECTOR 9167) (VECTOR 85 14242 9167) (VECTOR 8701) (VECTOR 85 14244 8701) (VECTOR 4834) (VECTOR 85 14246 4834) (VECTOR 4874) (VECTOR 85 14248 4874) (VECTOR 86 225 4836) (VECTOR 11797) (VECTOR 85 14251 11797) (VECTOR 86 226 4838) (VECTOR 11797 4874) (VECTOR 85 14254 8701) (VECTOR 86 227 4840) (VECTOR 11812 11741 11735 11734 11003 11738 9167) (VECTOR 84 4856 14257 4849 228) (VECTOR 11812 11741 11735 11734 11003 11738 9167) (VECTOR 85 14259 4842) (VECTOR 11812 11741 11735 11734 11003 11738 4917) (VECTOR 84 4856 14261 4849 228) (VECTOR 11812 11741 11735 11734 11003 11738 4917) (VECTOR 85 14263 4844) (VECTOR 11812 11741 11735 11734 11003 11738 4921) (VECTOR 84 4856 14265 4849 228) (VECTOR 11812 11741 11735 11734 11003 11738 4921) (VECTOR 85 14267 4857) (VECTOR 86 229 4858) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4921 4874) (VECTOR 85 14270 0) (VECTOR 86 232 4860) (VECTOR 54 8691 11738 9167) (VECTOR 4862) (VECTOR 85 14274 4862) (VECTOR 54 8691 4866 4865) (VECTOR 4867) (VECTOR 85 14277 4867) (VECTOR 8692) (VECTOR 85 14279 8692) (VECTOR 86 230 4869) (VECTOR 11846 8692) (VECTOR 85 14282 4874) (VECTOR 86 231 4875) (VECTOR 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 84 4894 14285 4886 232) (VECTOR 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 85 14287 4877) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4917) (VECTOR 84 4894 14289 4886 232) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4917) (VECTOR 85 14291 4879) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4921) (VECTOR 84 4894 14293 4886 232) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4921) (VECTOR 85 14295 4881) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4953) (VECTOR 84 4894 14297 4886 232) (VECTOR 11812 11797 11741 11735 11734 11003 11738 4953) (VECTOR 85 14299 4895) (VECTOR 86 233 4896) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4953 8692) (VECTOR 85 14302 0) (VECTOR 86 236 4898) (VECTOR 9167) (VECTOR 85 14305 9167) (VECTOR 4917) (VECTOR 85 14307 4917) (VECTOR 4921) (VECTOR 85 14309 4921) (VECTOR 4953) (VECTOR 85 14311 4953) (VECTOR 86 234 4903) (VECTOR 54 8691 4909 4908) (VECTOR 11738 4953) (VECTOR 85 14315 4910) (VECTOR 86 235 4911) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 84 4939 14318 4926 236) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 85 14320 4913) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4917) (VECTOR 84 4939 14322 4926 236) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4917) (VECTOR 85 14324 4915) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4921) (VECTOR 84 4939 14326 4926 236) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4921) (VECTOR 85 14328 4919) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4953) (VECTOR 84 4939 14330 4926 236) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4953) (VECTOR 85 14332 4940) (VECTOR 86 237 4941) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4953) (VECTOR 85 14335 0) (VECTOR 86 240 4943) (VECTOR 8714) (VECTOR 85 14338 8714) (VECTOR 4980) (VECTOR 85 14340 4980) (VECTOR 86 238 4946) (VECTOR 78 4951 4950) (VECTOR 11846 4980) (VECTOR 85 14344 4953) (VECTOR 86 239 4954) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 4967 14347 4957 240) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 14349 4968) (VECTOR 86 241 4969) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 4980) (VECTOR 85 14352 0) (VECTOR 86 244 4971) (VECTOR 8712) (VECTOR 85 14355 8712) (VECTOR 6675) (VECTOR 85 14357 6675) (VECTOR 86 242 4974) (VECTOR 78 4977 4976) (VECTOR 54 8713 4979 4978) (VECTOR 11738 6675) (VECTOR 85 14362 4980) (VECTOR 86 243 4981) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 4996 14365 4986 244) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 14367 4997) (VECTOR 86 245 4998) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738 6675) (VECTOR 85 14370 0) (VECTOR 86 307 5000) (VECTOR 8712) (VECTOR 85 14373 8712) (VECTOR 5011) (VECTOR 85 14375 5011) (VECTOR 86 248 5003) (VECTOR 54 0 5759 9504) (VECTOR 5005) (VECTOR 85 14379 5005) (VECTOR 5028) (VECTOR 85 14381 5028) (VECTOR 86 246 5007) (VECTOR 78 5010 5009) (VECTOR 11819 5028) (VECTOR 85 14385 5011) (VECTOR 86 247 5012) (VECTOR 84 0 17587 5015 248) (VECTOR 85 17587 5016) (VECTOR 86 249 5017) (VECTOR 78 5020 5019) (VECTOR 11819 5028) (VECTOR 85 14392 5021) (VECTOR 86 252 5022) (VECTOR 9504) (VECTOR 85 14395 9504) (VECTOR 86 250 5024) (VECTOR 54 0 5027 5026) (VECTOR 5830 9504) (VECTOR 85 14399 5028) (VECTOR 86 251 5029) (VECTOR 11819) (VECTOR 84 5033 14402 5032 252) (VECTOR 11819) (VECTOR 85 14404 5034) (VECTOR 86 253 5035) (VECTOR 78 5038 5037) (VECTOR 11819 5830 9504) (VECTOR 85 14408 5039) (VECTOR 86 256 5040) (VECTOR 54 0 9151 8819) (VECTOR 5042) (VECTOR 85 14412 5042) (VECTOR 54 0 5045 5044) (VECTOR 5046) (VECTOR 85 14415 5046) (VECTOR 5054) (VECTOR 85 14417 5054) (VECTOR 5059 5058 14435) (VECTOR 84 11162 14419 11679 521) (VECTOR 78 5065 5062) (VECTOR 5069 5068 5067) (VECTOR 84 11341 14422 11307 538) (VECTOR 78 5075 5072) (VECTOR 78 5081 5078) (VECTOR 5087 5086 5085) (VECTOR 84 11538 14426 11419 543) (VECTOR 54 11653 5090 16354) (VECTOR 54 0 17387 14504) (VECTOR 16351) (VECTOR 84 11304 14430 11298 537) (VECTOR 51 37) (VECTOR 14432) (VECTOR 84 11156 14433 11673 520) (VECTOR 51 37) (VECTOR 5099 5098 14435) (VECTOR 84 11162 14436 11679 521) (VECTOR 78 5105 5102) (VECTOR 5109 5108 5107) (VECTOR 84 11341 14439 11307 538) (VECTOR 78 5115 5112) (VECTOR 78 5121 5118) (VECTOR 78 5124 5123) (VECTOR 5125) (VECTOR 84 11433 14444 11427 544) (VECTOR 78 5128 5127) (VECTOR 5135 5134 5133 5132 5131 5130) (FORWARD -) (VECTOR 5136 5129 17507) (VECTOR 84 11455 14449 11436 545) (VECTOR 78 5139 5138) (VECTOR 78 5142 5141) (VECTOR 5149 5148 5147 5146 5145 5144) (FORWARD -) (VECTOR 5150 5143 5140) (VECTOR 84 11482 14455 11460 547) (VECTOR 54 11484 5151 17513) (VECTOR 78 5154 5153) (VECTOR 78 5157 5156) (VECTOR 5164 5163 5162 5161 5160 5159) (FORWARD -) (VECTOR 5165 5158 5155) (VECTOR 84 11509 14462 11487 548) (VECTOR 78 5168 5167) (VECTOR 5169) (VECTOR 84 11516 14465 11458 546) (VECTOR 54 11518 17530 5170) (VECTOR 78 5173 5172) (VECTOR 5180 5179 5178 5177 5176 5175) (FORWARD -) (VECTOR 5181 5174 5171) (VECTOR 84 11538 14471 11419 543) (VECTOR 78 5187 5184) (VECTOR 78 5190 5189) (VECTOR 78 5193 5192) (VECTOR 5200 5199 5198 5197 5196 5195) (FORWARD -) (VECTOR 5201 5194 5191) (VECTOR 84 11571 14478 11549 550) (VECTOR 54 11573 5202 17538) (VECTOR 78 5205 5204) (VECTOR 78 5208 5207) (VECTOR 5215 5214 5213 5212 5211 5210) (FORWARD -) (VECTOR 5216 5209 5206) (VECTOR 84 11598 14485 11576 551) (VECTOR 78 5219 5218) (VECTOR 5220) (VECTOR 84 11605 14488 11547 549) (VECTOR 78 5224 5222) (VECTOR 78 5227 5226) (VECTOR 5228) (VECTOR 84 11618 14492 11612 552) (VECTOR 78 5232 5230) (VECTOR 54 11624 5233 5229) (VECTOR 78 5236 5235) (VECTOR 78 5239 5238) (VECTOR 5246 5245 5244 5243 5242 5241) (FORWARD -) (VECTOR 5247 5240 5237) (VECTOR 84 11649 14500 11627 553) (VECTOR 54 11651 5248 5221) (VECTOR 54 11653 5249 16354) (VECTOR 51 37) (VECTOR 54 0 17387 14504) (VECTOR 5254) (VECTOR 85 14506 5095) (VECTOR 86 254 5255) (VECTOR 11820 5362) (VECTOR 85 14509 9504) (VECTOR 86 255 5257) (VECTOR 11819 5759) (VECTOR 84 5264 14512 5262 256) (VECTOR 11819 5759) (VECTOR 85 14514 5259) (VECTOR 11819 5830) (VECTOR 84 5264 14516 5262 256) (VECTOR 11819 5830) (VECTOR 85 14518 5265) (VECTOR 86 257 5266) (VECTOR 78 5269 5268) (VECTOR 11820 11819 5830 5362) (VECTOR 85 14522 5270) (VECTOR 86 259 5271) (VECTOR 5276 5275 17374) (VECTOR 84 11162 14525 11679 521) (VECTOR 16351) (VECTOR 84 9092 14527 9089 399) (VECTOR 5282) (VECTOR 84 11674 14529 11673 555) (VECTOR 54 0 17387 5283) (VECTOR 5290 5289 17374) (VECTOR 84 11162 14532 11679 521) (VECTOR 78 5296 5293) (VECTOR 5300 5299 5298) (VECTOR 84 11341 14535 11307 538) (VECTOR 5304) (VECTOR 84 11674 14537 11673 555) (VECTOR 54 0 17387 5305) (VECTOR 5309) (VECTOR 84 11416 14540 11358 540) (VECTOR 78 5315 5312) (VECTOR 5319 5318 17507) (VECTOR 84 11455 14543 11436 545) (VECTOR 5323) (VECTOR 84 11516 14545 11458 546) (VECTOR 54 11518 17530 5324) (VECTOR 78 5327 5326) (VECTOR 5329 5328 5325) (VECTOR 84 11538 14549 11419 543) (VECTOR 78 5335 5332) (VECTOR 5339) (VECTOR 84 11605 14552 11547 549) (VECTOR 54 11651 5343 5340) (VECTOR 54 11653 5344 5310) (VECTOR 78 5350 5347) (VECTOR 54 0 5352 5286) (VECTOR 54 0 5358 5353) (VECTOR 54 0 5361 5360) (VECTOR 5497 5396) (VECTOR 85 14560 5362) (VECTOR 86 258 5363) (VECTOR 11820 11819 5759) (VECTOR 84 5371 14563 5368 259) (VECTOR 11820 11819 5759) (VECTOR 85 14565 5365) (VECTOR 11820 11819 5830) (VECTOR 84 5371 14567 5368 259) (VECTOR 11820 11819 5830) (VECTOR 85 14569 5372) (VECTOR 86 260 5373) (VECTOR 78 5376 5375) (VECTOR 11820 11819 5830 5497 5396) (VECTOR 85 14573 5377) (VECTOR 86 261 5378) (VECTOR 78 5381 5380) (VECTOR 11822 11820 11819 5830 5497 5439) (VECTOR 85 14577 5382) (VECTOR 86 264 5383) (VECTOR 11820 11819 5759 5497) (VECTOR 84 5392 14580 5388 261) (VECTOR 11820 11819 5759 5497) (VECTOR 85 14582 5385) (VECTOR 11820 11819 5830 5497) (VECTOR 84 5392 14584 5388 261) (VECTOR 11820 11819 5830 5497) (VECTOR 85 14586 5393) (VECTOR 86 262 5394) (VECTOR 11822 5439) (VECTOR 85 14589 5396) (VECTOR 86 263 5397) (VECTOR 78 5400 5399) (VECTOR 5471 5470 5469 5468 5455 5497) (VECTOR 85 14593 5401) (VECTOR 86 267 5402) (VECTOR 11822 11820 11819 5759 5405) (VECTOR 84 5415 14596 5410 264) (VECTOR 11822 11820 11819 5759 5405) (VECTOR 85 14598 5404) (VECTOR 11822 11820 11819 5759 5497) (VECTOR 84 5415 14600 5410 264) (VECTOR 11822 11820 11819 5759 5497) (VECTOR 85 14602 5407) (VECTOR 11822 11820 11819 5830 5497) (VECTOR 84 5415 14604 5410 264) (VECTOR 11822 11820 11819 5830 5497) (VECTOR 85 14606 5416) (VECTOR 86 265 5417) (VECTOR 5421 5420 17374) (VECTOR 84 11162 14609 11679 521) (VECTOR 5425) (VECTOR 84 11674 14611 11673 555) (VECTOR 54 0 17387 5426) (VECTOR 5431 5430 17374) (VECTOR 84 11162 14614 11679 521) (VECTOR 5435) (VECTOR 84 11674 14616 11673 555) (VECTOR 54 0 17387 5436) (VECTOR 54 0 5438 5428) (VECTOR 5468) (VECTOR 85 14620 5439) (VECTOR 86 266 5440) (VECTOR 78 5443 5442) (VECTOR 5525 5524 5523 5522 5521 5508 9313) (VECTOR 85 14624 5444) (VECTOR 86 270 5445) (VECTOR 11822 11820 11819 10352 5759) (VECTOR 84 5476 14627 5454 267) (VECTOR 11822 11820 11819 10352 5759) (VECTOR 85 14629 5447) (VECTOR 11822 11820 11819 9732 5759) (VECTOR 84 5476 14631 5454 267) (VECTOR 11822 11820 11819 9732 5759) (VECTOR 85 14633 5449) (VECTOR 11822 11820 11819 9732 5830) (VECTOR 84 5476 14635 5454 267) (VECTOR 11822 11820 11819 9732 5830) (VECTOR 85 14637 5451) (VECTOR 5458) (VECTOR 84 11674 14639 11673 555) (VECTOR 5461 5460 17365) (VECTOR 84 11162 14641 11679 521) (VECTOR 54 0 5464 5459) (VECTOR 5471 5470 5469 5468 5455) (VECTOR 84 5476 14644 5454 267) (VECTOR 5481) (VECTOR 84 11674 14646 11673 555) (VECTOR 5484 5483 17365) (VECTOR 84 11162 14648 11679 521) (VECTOR 54 0 5487 5482) (VECTOR 5494 5493 5492 5491 5478) (VECTOR 85 14651 5477) (VECTOR 86 268 5495) (VECTOR 5524 9313) (VECTOR 85 14654 5497) (VECTOR 86 269 5498) (VECTOR 11822 11821 11820 11819 10352 5759) (VECTOR 84 5531 14657 5507 270) (VECTOR 11822 11821 11820 11819 10352 5759) (VECTOR 85 14659 5500) (VECTOR 11822 11821 11820 11819 9732 5759) (VECTOR 84 5531 14661 5507 270) (VECTOR 11822 11821 11820 11819 9732 5759) (VECTOR 85 14663 5502) (VECTOR 11822 11821 11820 11819 9732 5830) (VECTOR 84 5531 14665 5507 270) (VECTOR 11822 11821 11820 11819 9732 5830) (VECTOR 85 14667 5504) (VECTOR 5511) (VECTOR 84 11674 14669 11673 555) (VECTOR 5514 5513 17365) (VECTOR 84 11162 14671 11679 521) (VECTOR 54 0 5517 5512) (VECTOR 5525 5524 5523 5522 5521 5508) (VECTOR 84 5531 14674 5507 270) (VECTOR 5536) (VECTOR 84 11674 14676 11673 555) (VECTOR 5539 5538 17365) (VECTOR 84 11162 14678 11679 521) (VECTOR 54 0 5542 5537) (VECTOR 5550 5549 5548 5547 5546 5533) (VECTOR 85 14681 5532) (VECTOR 86 271 5551) (VECTOR 78 5554 5553) (VECTOR 5584 5583 5582 5581 5580 5567 5566 9504) (VECTOR 85 14685 5555) (VECTOR 86 272 5556) (VECTOR 11822 11821 11820 11819 10352 5759 9504) (VECTOR 84 5591 14688 5565 272) (VECTOR 11822 11821 11820 11819 10352 5759 9504) (VECTOR 85 14690 5558) (VECTOR 11822 11821 11820 11819 9732 5759 9504) (VECTOR 84 5591 14692 5565 272) (VECTOR 11822 11821 11820 11819 9732 5759 9504) (VECTOR 85 14694 5560) (VECTOR 11822 11821 11820 11819 9732 5830 9504) (VECTOR 84 5591 14696 5565 272) (VECTOR 11822 11821 11820 11819 9732 5830 9504) (VECTOR 85 14698 5562) (VECTOR 5570) (VECTOR 84 11674 14700 11673 555) (VECTOR 5573 5572 17365) (VECTOR 84 11162 14702 11679 521) (VECTOR 54 0 5576 5571) (VECTOR 5584 5583 5582 5581 5580 5567 5566) (VECTOR 84 5591 14705 5565 272) (VECTOR 5597) (VECTOR 84 11674 14707 11673 555) (VECTOR 5600 5599 17365) (VECTOR 84 11162 14709 11679 521) (VECTOR 54 0 5603 5598) (VECTOR 5611 5610 5609 5608 5607 5594 5593) (VECTOR 85 14712 5592) (VECTOR 86 273 5612) (VECTOR 78 5615 5614) (VECTOR 5645 5644 5643 5642 5641 5628 5627 9478) (VECTOR 85 14716 5616) (VECTOR 86 274 5617) (VECTOR 11822 11821 11820 11819 10352 5759 9504) (VECTOR 84 5652 14719 5626 274) (VECTOR 11822 11821 11820 11819 10352 5759 9504) (VECTOR 85 14721 5619) (VECTOR 11822 11821 11820 11819 9732 5759 9504) (VECTOR 84 5652 14723 5626 274) (VECTOR 11822 11821 11820 11819 9732 5759 9504) (VECTOR 85 14725 5621) (VECTOR 11822 11821 11820 11819 9732 5830 9504) (VECTOR 84 5652 14727 5626 274) (VECTOR 11822 11821 11820 11819 9732 5830 9504) (VECTOR 85 14729 5623) (VECTOR 5631) (VECTOR 84 11674 14731 11673 555) (VECTOR 5634 5633 17365) (VECTOR 84 11162 14733 11679 521) (VECTOR 54 0 5637 5632) (VECTOR 5645 5644 5643 5642 5641 5628 5627) (VECTOR 84 5652 14736 5626 274) (VECTOR 5658) (VECTOR 84 11674 14738 11673 555) (VECTOR 5661 5660 17365) (VECTOR 84 11162 14740 11679 521) (VECTOR 54 0 5664 5659) (VECTOR 5672 5671 5670 5669 5668 5655 5654) (VECTOR 85 14743 5653) (VECTOR 86 275 5673) (VECTOR 78 5676 5675) (VECTOR 5712 5711 5710 5709 5708 5703 5690 9504 5689) (VECTOR 85 14747 5677) (VECTOR 86 276 5678) (VECTOR 11822 11821 11820 11819 10353 10352 5759 10292) (VECTOR 84 5720 14750 5687 276) (VECTOR 11822 11821 11820 11819 10353 10352 5759 10292) (VECTOR 85 14752 5680) (VECTOR 11822 11821 11820 11819 10353 10352 5759 9452) (VECTOR 84 5720 14754 5687 276) (VECTOR 11822 11821 11820 11819 10353 10352 5759 9452) (VECTOR 85 14756 5682) (VECTOR 11822 11821 11820 11819 10353 9732 5759 9452) (VECTOR 84 5720 14758 5687 276) (VECTOR 11822 11821 11820 11819 10353 9732 5759 9452) (VECTOR 85 14760 5684) (VECTOR 5693) (VECTOR 84 11674 14762 11673 555) (VECTOR 5696 5695 17365) (VECTOR 84 11162 14764 11679 521) (VECTOR 54 0 5699 5694) (VECTOR 5712 5711 5710 5709 5708 5703 5690 5689) (VECTOR 84 5720 14767 5687 276) (VECTOR 5727) (VECTOR 84 11674 14769 11673 555) (VECTOR 5730 5729 17365) (VECTOR 84 11162 14771 11679 521) (VECTOR 54 0 5733 5728) (VECTOR 5746 5745 5744 5743 5742 5737 5724 5723) (VECTOR 85 14774 5721) (VECTOR 86 277 5747) (VECTOR 78 5750 5749) (VECTOR 9505 5786 5785 5784 5783 5778 5765 9579 5764) (VECTOR 85 14778 5751) (VECTOR 86 278 5752) (VECTOR 11822 11821 11820 11819 10353 10352 5759 10292) (VECTOR 84 5794 14781 5762 278) (VECTOR 11822 11821 11820 11819 10353 10352 5759 10292) (VECTOR 85 14783 5754) (VECTOR 11822 11821 11820 11819 10353 10352 5759 9452) (VECTOR 84 5794 14785 5762 278) (VECTOR 11822 11821 11820 11819 10353 10352 5759 9452) (VECTOR 85 14787 5756) (VECTOR 11822 11821 11820 11819 10353 9732 5759 9452) (VECTOR 84 5794 14789 5762 278) (VECTOR 11822 11821 11820 11819 10353 9732 5759 9452) (VECTOR 85 14791 5758) (VECTOR 5768) (VECTOR 84 11674 14793 11673 555) (VECTOR 5771 5770 17365) (VECTOR 84 11162 14795 11679 521) (VECTOR 54 0 5774 5769) (VECTOR 9505 5786 5785 5784 5783 5778 5765 5764) (VECTOR 84 5794 14798 5762 278) (VECTOR 5801) (VECTOR 84 11674 14800 11673 555) (VECTOR 5804 5803 17365) (VECTOR 84 11162 14802 11679 521) (VECTOR 54 0 5807 5802) (VECTOR 5820 5819 5818 5817 5816 5811 5798 5797) (VECTOR 85 14805 5795) (VECTOR 86 279 5821) (VECTOR 78 5824 5823) (VECTOR 5851 5850 5849 5848 5847 9595 5830 9582 5842) (VECTOR 85 14809 5825) (VECTOR 86 282 5826) (VECTOR 11820) (VECTOR 85 14812 11820) (VECTOR 86 280 5828) (VECTOR 5927 9749) (VECTOR 85 14815 5830) (VECTOR 86 281 5831) (VECTOR 11822 11821 11820 11819 10353 10352 10293 10292) (VECTOR 84 5859 14818 5840 282) (VECTOR 11822 11821 11820 11819 10353 10352 10293 10292) (VECTOR 85 14820 5833) (VECTOR 11822 11821 11820 11819 10353 10352 10293 9452) (VECTOR 84 5859 14822 5840 282) (VECTOR 11822 11821 11820 11819 10353 10352 10293 9452) (VECTOR 85 14824 5835) (VECTOR 11822 11821 11820 11819 10353 9732 10293 9452) (VECTOR 84 5859 14826 5840 282) (VECTOR 11822 11821 11820 11819 10353 9732 10293 9452) (VECTOR 85 14828 5837) (VECTOR 5851 5850 5849 5848 5847 9595 9582 5842) (VECTOR 84 5859 14830 5840 282) (VECTOR 5868) (VECTOR 84 11674 14832 11673 555) (VECTOR 5871 5870 17365) (VECTOR 84 11162 14834 11679 521) (VECTOR 54 0 5874 5869) (VECTOR 5887 5886 5885 5884 5883 5878 5865 5862) (VECTOR 85 14837 5860) (VECTOR 86 283 5888) (VECTOR 78 5891 5890) (VECTOR 5929 5928 5927 5926 5925 5920 9749 5907 5904) (VECTOR 85 14841 5892) (VECTOR 86 284 5893) (VECTOR 11822 11821 11820 11819 10353 10352 10293 10292) (VECTOR 84 5937 14844 5902 284) (VECTOR 11822 11821 11820 11819 10353 10352 10293 10292) (VECTOR 85 14846 5895) (VECTOR 11822 11821 11820 11819 10353 10352 10293 9452) (VECTOR 84 5937 14848 5902 284) (VECTOR 11822 11821 11820 11819 10353 10352 10293 9452) (VECTOR 85 14850 5897) (VECTOR 11822 11821 11820 11819 10353 9732 10293 9452) (VECTOR 84 5937 14852 5902 284) (VECTOR 11822 11821 11820 11819 10353 9732 10293 9452) (VECTOR 85 14854 5899) (VECTOR 5910) (VECTOR 84 11674 14856 11673 555) (VECTOR 5913 5912 17365) (VECTOR 84 11162 14858 11679 521) (VECTOR 54 0 5916 5911) (VECTOR 5929 5928 5927 5926 5925 5920 5907 5904) (VECTOR 84 5937 14861 5902 284) (VECTOR 5946) (VECTOR 84 11674 14863 11673 555) (VECTOR 5949 5948 17365) (VECTOR 84 11162 14865 11679 521) (VECTOR 54 0 5952 5947) (VECTOR 5965 5964 5963 5962 5961 5956 5943 5940) (VECTOR 85 14868 5938) (VECTOR 86 285 5966) (VECTOR 78 5969 5968) (VECTOR 6003 6002 6001 6000 5999 5994 5981 9805) (VECTOR 85 14872 5970) (VECTOR 86 286 5971) (VECTOR 11822 11821 11820 11819 10353 10352 10293) (VECTOR 84 6010 14875 6473 286) (VECTOR 11822 11821 11820 11819 10353 10352 10293) (VECTOR 85 14877 5973) (VECTOR 11822 11821 11820 11819 10353 9732 10293) (VECTOR 84 6010 14879 6473 286) (VECTOR 11822 11821 11820 11819 10353 9732 10293) (VECTOR 85 14881 5975) (VECTOR 11822 11821 11820 11819 10353 9732 9526) (VECTOR 84 6010 14883 6473 286) (VECTOR 11822 11821 11820 11819 10353 9732 9526) (VECTOR 85 14885 5977) (VECTOR 5984) (VECTOR 84 11674 14887 11673 555) (VECTOR 5987 5986 17365) (VECTOR 84 11162 14889 11679 521) (VECTOR 54 0 5990 5985) (VECTOR 6003 6002 6001 6000 5999 5994 5981) (VECTOR 84 6010 14892 6473 286) (VECTOR 6017) (VECTOR 84 11674 14894 11673 555) (VECTOR 6020 6019 17365) (VECTOR 84 11162 14896 11679 521) (VECTOR 54 0 6023 6018) (VECTOR 6036 6035 6034 6033 6032 6027 6014) (VECTOR 85 14899 6011) (VECTOR 86 287 6037) (VECTOR 78 6040 6039) (VECTOR 6079 6078 6077 6076 6075 6074 6069 6056 9916) (VECTOR 85 14903 6041) (VECTOR 86 288 6042) (VECTOR 11822 11821 11820 11819 11817 10353 10352 10294) (VECTOR 84 6087 14906 6476 288) (VECTOR 11822 11821 11820 11819 11817 10353 10352 10294) (VECTOR 85 14908 6044) (VECTOR 11822 11821 11820 11819 11817 10353 10352 6051) (VECTOR 84 6087 14910 6476 288) (VECTOR 11822 11821 11820 11819 11817 10353 10352 6051) (VECTOR 85 14912 6046) (VECTOR 11822 11821 11820 11819 11817 10353 9732 6051) (VECTOR 84 6087 14914 6476 288) (VECTOR 54 0 6050 6049) (VECTOR 11822 11821 11820 11819 11817 10353 9732 6051) (VECTOR 85 14917 6048) (VECTOR 6059) (VECTOR 84 11674 14919 11673 555) (VECTOR 6062 6061 17365) (VECTOR 84 11162 14921 11679 521) (VECTOR 54 0 6065 6060) (VECTOR 6079 6078 6077 6076 6075 6074 6069 6056) (VECTOR 84 6087 14924 6476 288) (VECTOR 6095) (VECTOR 84 11674 14926 11673 555) (VECTOR 6098 6097 17365) (VECTOR 84 11162 14928 11679 521) (VECTOR 54 0 6101 6096) (VECTOR 6115 6114 6113 6112 6111 6110 6105 6092) (VECTOR 85 14931 6088) (VECTOR 86 289 6116) (VECTOR 78 6119 6118) (VECTOR 6161 6160 6159 6158 6157 6156 6155 6150 9968) (VECTOR 85 14935 6120) (VECTOR 86 290 6121) (VECTOR 11822 11821 11820 11819 11818 11817 10353 10352) (VECTOR 84 6169 14938 6137 290) (VECTOR 11822 11821 11820 11819 11818 11817 10353 10352) (VECTOR 85 14940 6123) (VECTOR 11822 11821 11820 11819 11818 11817 10353 9732) (VECTOR 84 6169 14942 6137 290) (VECTOR 11822 11821 11820 11819 11818 11817 10353 9732) (VECTOR 85 14944 6125) (VECTOR 6133 6132 6131 6130 6129 6128 8152 9732) (VECTOR 84 6169 14946 6137 290) (VECTOR 6133 6132 6131 6130 6129 6128 8152 9732) (VECTOR 85 14948 6127) (VECTOR 6140) (VECTOR 84 11674 14950 11673 555) (VECTOR 6143 6142 17365) (VECTOR 84 11162 14952 11679 521) (VECTOR 54 0 6146 6141) (VECTOR 6161 6160 6159 6158 6157 6156 6155 6150) (VECTOR 84 6169 14955 6137 290) (VECTOR 6173) (VECTOR 84 11674 14957 11673 555) (VECTOR 6176 6175 17365) (VECTOR 84 11162 14959 11679 521) (VECTOR 54 0 6179 6174) (VECTOR 6194 6193 6192 6191 6190 6189 6188 6183) (VECTOR 85 14962 6170) (VECTOR 86 291 6195) (VECTOR 78 6198 6197) (VECTOR 6217 6216 6215 6214 6213 10011 6212 10046 10010) (VECTOR 85 14966 6199) (VECTOR 86 292 6200) (VECTOR 11822 11821 11820 11819 11818 11817 10353 10160) (VECTOR 84 6225 14969 45 292) (VECTOR 11822 11821 11820 11819 11818 11817 10353 10160) (VECTOR 85 14971 6202) (VECTOR 11822 11821 11820 11819 11818 11817 10353 6348) (VECTOR 84 6225 14973 45 292) (VECTOR 11822 11821 11820 11819 11818 11817 10353 6348) (VECTOR 85 14975 6204) (VECTOR 11822 11821 11820 11819 11818 11817 10353 6357) (VECTOR 84 6225 14977 45 292) (VECTOR 11822 11821 11820 11819 11818 11817 10353 6357) (VECTOR 85 14979 6206) (VECTOR 6217 6216 6215 6214 6213 10011 6212 10010) (VECTOR 84 6225 14981 45 292) (VECTOR 54 0 6232 6231) (VECTOR 54 0 6234 6229) (VECTOR 54 0 6237 6228) (VECTOR 54 0 6242 6239) (VECTOR 6249) (VECTOR 84 11674 14987 11673 555) (VECTOR 6252 6251 17365) (VECTOR 84 11162 14989 11679 521) (VECTOR 54 0 6255 6250) (VECTOR 54 0 6264 6259) (VECTOR 54 0 6267 6246) (VECTOR 6279 6278 6277 6276 6275 6274 6273 6268) (VECTOR 85 14994 6226) (VECTOR 86 293 6280) (VECTOR 78 6283 6282) (VECTOR 6298 6297 6296 6295 6294 10068 10139 10067 6293) (VECTOR 85 14998 6284) (VECTOR 86 294 6285) (VECTOR 11822 11821 11820 11819 11818 11817 10354 10160) (VECTOR 84 6306 15001 46 294) (VECTOR 11822 11821 11820 11819 11818 11817 10354 10160) (VECTOR 85 15003 6287) (VECTOR 11822 11821 11820 11819 11818 11817 10354 6348) (VECTOR 84 6306 15005 46 294) (VECTOR 11822 11821 11820 11819 11818 11817 10354 6348) (VECTOR 85 15007 6289) (VECTOR 11822 11821 11820 11819 11818 11817 10354 6357) (VECTOR 84 6306 15009 46 294) (VECTOR 11822 11821 11820 11819 11818 11817 10354 6357) (VECTOR 85 15011 6291) (VECTOR 6298 6297 6296 6295 6294 10068 10067 6293) (VECTOR 84 6306 15013 46 294) (VECTOR 6311) (VECTOR 84 11674 15015 11673 555) (VECTOR 6314 6313 17365) (VECTOR 84 11162 15017 11679 521) (VECTOR 54 0 6317 6312) (VECTOR 54 0 6326 6321) (VECTOR 6335 6334 6333 6332 6331 6330 6329 6308) (VECTOR 85 15021 6307) (VECTOR 86 295 6336) (VECTOR 78 6339 6338) (VECTOR 6408 6407 6406 6405 10140 6404 10270 6403) (VECTOR 85 15025 6340) (VECTOR 86 296 6341) (VECTOR 11822 11821 11820 11819 11818 11817 10160) (VECTOR 84 6415 15028 6361 296) (VECTOR 11822 11821 11820 11819 11818 11817 10160) (VECTOR 85 15030 6343) (VECTOR 11822 11821 11820 11819 11818 11817 6348) (VECTOR 84 6415 15032 6361 296) (VECTOR 54 0 6347 6346) (VECTOR 11822 11821 11820 11819 11818 11817 6348) (VECTOR 85 15035 6345) (VECTOR 11822 11821 11820 11819 11818 11817 6357) (VECTOR 84 6415 15037 6361 296) (VECTOR 54 0 6352 6351) (VECTOR 54 0 6355 6354) (VECTOR 54 0 6356 6353) (VECTOR 11822 11821 11820 11819 11818 11817 6357) (VECTOR 85 15042 6350) (VECTOR 54 0 6367 6366) (VECTOR 54 0 6369 6364) (VECTOR 54 0 6372 6363) (VECTOR 54 0 6377 6374) (VECTOR 6384) (VECTOR 84 11674 15048 11673 555) (VECTOR 6387 6386 17365) (VECTOR 84 11162 15050 11679 521) (VECTOR 54 0 6390 6385) (VECTOR 54 0 6399 6394) (VECTOR 54 0 6402 6381) (VECTOR 6408 6407 6406 6405 10140 6404 6403) (VECTOR 84 6415 15055 6361 296) (VECTOR 54 0 6422 6421) (VECTOR 54 0 6424 6419) (VECTOR 54 0 6427 6418) (VECTOR 54 0 6432 6429) (VECTOR 6439) (VECTOR 84 11674 15061 11673 555) (VECTOR 6442 6441 17365) (VECTOR 84 11162 15063 11679 521) (VECTOR 54 0 6445 6440) (VECTOR 54 0 6454 6449) (VECTOR 54 0 6457 6436) (VECTOR 6464 6463 6462 6461 6460 6459 6458) (VECTOR 85 15068 6416) (VECTOR 86 297 6465) (VECTOR 78 6468 6467) (VECTOR 11822 11821 11820 11819 11818 11817 10472) (VECTOR 85 15072 6469) (VECTOR 86 298 6470) (VECTOR 11822 11821 11820 11819 11818 11817) (VECTOR 84 6490 15075 6484 298) (VECTOR 11822 11821 11820 11819 11818 11817) (VECTOR 85 15077 6491) (VECTOR 86 299 6492) (VECTOR 78 6495 6494) (VECTOR 6539 6538 6537 6536 6535 6534 6533 10564) (VECTOR 85 15081 6496) (VECTOR 86 300 6497) (VECTOR 11822 11821 11820 11819 11818 11817 10354) (VECTOR 84 6546 15084 6512 300) (VECTOR 11822 11821 11820 11819 11818 11817 10354) (VECTOR 85 15086 6499) (VECTOR 11822 11821 11820 11819 11818 11817 6504) (VECTOR 84 6546 15088 6512 300) (VECTOR 54 0 6503 6502) (VECTOR 11822 11821 11820 11819 11818 11817 6504) (VECTOR 85 15091 6501) (VECTOR 11822 11821 11820 11819 11818 11817 6509) (VECTOR 84 6546 15093 6512 300) (VECTOR 54 0 6508 6507) (VECTOR 11822 11821 11820 11819 11818 11817 6509) (VECTOR 85 15096 6506) (VECTOR 6515) (VECTOR 84 10772 15098 11673 484) (VECTOR 6518 6517 17365) (VECTOR 84 10778 15100 11679 485) (VECTOR 54 0 6521 6516) (VECTOR 54 0 6530 6525) (VECTOR 6539 6538 6537 6536 6535 6534 6533) (VECTOR 84 6546 15104 6512 300) (VECTOR 6550) (VECTOR 84 10772 15106 11673 484) (VECTOR 6553 6552 17365) (VECTOR 84 10778 15108 11679 485) (VECTOR 54 0 6556 6551) (VECTOR 54 0 6565 6560) (VECTOR 6574 6573 6572 6571 6570 6569 6568) (VECTOR 85 15112 6547) (VECTOR 86 301 6575) (VECTOR 78 6578 6577) (VECTOR 6585 6584 6583 6582 6581 6580 10574 10820 10573) (VECTOR 85 15116 6579) (VECTOR 86 302 6586) (VECTOR 78 6589 6588) (VECTOR 11822 11821 11820 11819 11818 11817 11816 11815 10833) (VECTOR 85 15120 6590) (VECTOR 86 573 6591) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6646) (VECTOR 84 6625 15123 6600 302) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6646) (VECTOR 85 15125 6593) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6651) (VECTOR 84 6625 15127 6600 302) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6651) (VECTOR 85 15129 6595) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6657) (VECTOR 84 6625 15131 6600 302) (VECTOR 11822 11821 11820 11819 11818 11817 11815 6657) (VECTOR 85 15133 6597) (VECTOR 54 10832 6609 6605) (VECTOR 6617 6616 6615 6614 6613 6612 6611 6610) (VECTOR 84 6625 15136 6600 302) (VECTOR 54 10832 6635 6631) (VECTOR 6643 6642 6641 6640 6639 6638 6637 6636) (VECTOR 85 15139 6626) (VECTOR 86 303 6644) (VECTOR 54 10832 9167 9169) (VECTOR 6646) (VECTOR 85 15143 6646) (VECTOR 54 10832 6650 6649) (VECTOR 6651) (VECTOR 85 15146 6651) (VECTOR 54 10832 6656 6654) (VECTOR 6657) (VECTOR 85 15149 6657) (VECTOR 54 10832 6667 6663) (VECTOR 6668) (VECTOR 85 15152 10833) (VECTOR 86 304 6669) (VECTOR 11831) (VECTOR 85 15155 11831) (VECTOR 86 305 6671) (VECTOR 78 6674 6673) (VECTOR 11831 6716) (VECTOR 85 15159 6675) (VECTOR 86 306 6676) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 6689 15162 6681 307) (VECTOR 11846 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 15164 6690) (VECTOR 86 308 6691) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 6716) (VECTOR 85 15167 0) (VECTOR 86 312 6693) (VECTOR 9169) (VECTOR 85 15170 9169) (VECTOR 6697) (VECTOR 85 15172 6697) (VECTOR 6700) (VECTOR 85 15174 6700) (VECTOR 7257) (VECTOR 85 15176 7257) (VECTOR 86 309 6702) (VECTOR 9167) (VECTOR 85 15179 9167) (VECTOR 7268) (VECTOR 85 15181 7268) (VECTOR 7272) (VECTOR 85 15183 7272) (VECTOR 86 310 6706) (VECTOR 54 10832 6715 6711) (VECTOR 7272 7257) (VECTOR 85 15187 6716) (VECTOR 86 311 6717) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 6731 15190 6722 312) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 15192 6732) (VECTOR 86 313 6733) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272 7257) (VECTOR 85 15195 0) (VECTOR 86 340 6735) (VECTOR 11854 7532) (VECTOR 85 15198 11079) (VECTOR 86 314 6737) (VECTOR 6739) (VECTOR 84 11416 15201 11358 540) (VECTOR 78 6745 6742) (VECTOR 6749 6748 17507) (VECTOR 84 11455 15204 11436 545) (VECTOR 6751) (VECTOR 84 11516 15206 11458 546) (VECTOR 54 11518 17530 6752) (VECTOR 78 6755 6754) (VECTOR 6757 6756 6753) (VECTOR 84 11538 15210 11419 543) (VECTOR 78 6760 6759) (VECTOR 6762) (VECTOR 84 11605 15213 11547 549) (VECTOR 54 11651 6764 6763) (VECTOR 54 11653 6765 6740) (VECTOR 78 6769 6768) (VECTOR 6773 6772 6771) (VECTOR 84 11341 15218 11307 538) (VECTOR 78 6776 6775) (VECTOR 11854 11853 9333 7532) (VECTOR 85 15221 6778) (VECTOR 86 315 6779) (VECTOR 11854 11853 9333) (VECTOR 84 6785 15224 6782 315) (VECTOR 11854 11853 9333) (VECTOR 85 15226 6786) (VECTOR 86 316 6787) (VECTOR 6789) (VECTOR 84 11416 15229 11358 540) (VECTOR 78 6795 6792) (VECTOR 6799 6798 17507) (VECTOR 84 11455 15232 11436 545) (VECTOR 6801) (VECTOR 84 11516 15234 11458 546) (VECTOR 54 11518 17530 6802) (VECTOR 78 6805 6804) (VECTOR 6807 6806 6803) (VECTOR 84 11538 15238 11419 543) (VECTOR 78 6810 6809) (VECTOR 6812) (VECTOR 84 11605 15241 11547 549) (VECTOR 54 11651 6814 6813) (VECTOR 54 11653 6815 6790) (VECTOR 78 6819 6818) (VECTOR 6823 6822 6821) (VECTOR 84 11341 15246 11307 538) (VECTOR 78 6826 6825) (VECTOR 11854 11853 9333 11736 11736) (VECTOR 85 15249 6828) (VECTOR 86 317 6829) (VECTOR 6831) (VECTOR 84 11416 15252 11358 540) (VECTOR 78 6837 6834) (VECTOR 6841 6840 17507) (VECTOR 84 11455 15255 11436 545) (VECTOR 6843) (VECTOR 84 11516 15257 11458 546) (VECTOR 54 11518 17530 6844) (VECTOR 78 6847 6846) (VECTOR 6849 6848 6845) (VECTOR 84 11538 15261 11419 543) (VECTOR 78 6852 6851) (VECTOR 6854) (VECTOR 84 11605 15264 11547 549) (VECTOR 54 11651 6856 6855) (VECTOR 54 11653 6857 6832) (VECTOR 78 6861 6860) (VECTOR 6865 6864 6863) (VECTOR 84 11341 15269 11307 538) (VECTOR 78 6868 6867) (VECTOR 11854 11853 9716 11736 11736) (VECTOR 85 15272 6870) (VECTOR 86 320 6871) (VECTOR 11854 11853 11736 11736) (VECTOR 84 6876 15275 7477 317) (VECTOR 11854 11853 11736 11736) (VECTOR 85 15277 6877) (VECTOR 86 318 6878) (VECTOR 11854 9716) (VECTOR 85 15280 9333) (VECTOR 86 319 6880) (VECTOR 6882) (VECTOR 84 11416 15283 11358 540) (VECTOR 78 6888 6885) (VECTOR 6892 6891 17507) (VECTOR 84 11455 15286 11436 545) (VECTOR 6894) (VECTOR 84 11516 15288 11458 546) (VECTOR 54 11518 17530 6895) (VECTOR 78 6898 6897) (VECTOR 6900 6899 6896) (VECTOR 84 11538 15292 11419 543) (VECTOR 78 6903 6902) (VECTOR 6905) (VECTOR 84 11605 15295 11547 549) (VECTOR 54 11651 6907 6906) (VECTOR 54 11653 6908 6883) (VECTOR 78 6912 6911) (VECTOR 6916 6915 6914) (VECTOR 84 11341 15300 11307 538) (VECTOR 78 6919 6918) (VECTOR 11854 11853 11737 11737 11736 11736) (VECTOR 85 15303 6921) (VECTOR 86 322 6922) (VECTOR 11854 11853 11736 11736) (VECTOR 84 6929 15306 6925 320) (VECTOR 11854 11853 11736 11736) (VECTOR 85 15308 6930) (VECTOR 86 321 6931) (VECTOR 6933) (VECTOR 84 11416 15311 11358 540) (VECTOR 78 6939 6936) (VECTOR 6943 6942 17507) (VECTOR 84 11455 15314 11436 545) (VECTOR 6945) (VECTOR 84 11516 15316 11458 546) (VECTOR 54 11518 17530 6946) (VECTOR 78 6949 6948) (VECTOR 6951 6950 6947) (VECTOR 84 11538 15320 11419 543) (VECTOR 78 6954 6953) (VECTOR 6956) (VECTOR 84 11605 15323 11547 549) (VECTOR 54 11651 6958 6957) (VECTOR 54 11653 6959 6934) (VECTOR 78 6963 6962) (VECTOR 6967 6966 6965) (VECTOR 84 11341 15328 11307 538) (VECTOR 78 6970 6969) (VECTOR 11854 11853 11851 11737 11737 10524 11736) (VECTOR 85 15331 6972) (VECTOR 86 324 6973) (VECTOR 11854 11853 11737 11737 11736) (VECTOR 84 6979 15334 7171 322) (VECTOR 11854 11853 11737 11737 11736) (VECTOR 85 15336 6980) (VECTOR 86 323 6981) (VECTOR 6983) (VECTOR 84 11416 15339 11358 540) (VECTOR 78 6989 6986) (VECTOR 6993 6992 17507) (VECTOR 84 11455 15342 11436 545) (VECTOR 6995) (VECTOR 84 11516 15344 11458 546) (VECTOR 54 11518 17530 6996) (VECTOR 78 6999 6998) (VECTOR 7001 7000 6997) (VECTOR 84 11538 15348 11419 543) (VECTOR 78 7004 7003) (VECTOR 7006) (VECTOR 84 11605 15351 11547 549) (VECTOR 54 11651 7008 7007) (VECTOR 54 11653 7009 6984) (VECTOR 78 7013 7012) (VECTOR 7017 7016 7015) (VECTOR 84 11341 15356 11307 538) (VECTOR 78 7020 7019) (VECTOR 11854 11853 11852 11851 11737 11737 10524) (VECTOR 85 15359 7022) (VECTOR 86 326 7023) (VECTOR 11854 11853 11851 11737 11737 10524) (VECTOR 84 7030 15362 7174 324) (VECTOR 11854 11853 11851 11737 11737 10524) (VECTOR 85 15364 7031) (VECTOR 86 325 7032) (VECTOR 78 7035 7034) (VECTOR 7037) (VECTOR 84 11416 15368 11358 540) (VECTOR 78 7041 7040) (VECTOR 7043 7042 7039) (VECTOR 84 11538 15371 11419 543) (VECTOR 54 11653 7046 7038) (VECTOR 11854 11853 11852 11851 11737 11737 10398) (VECTOR 85 15374 7050) (VECTOR 86 328 7051) (VECTOR 11854 11853 11852 11851 11737 11737) (VECTOR 84 7061 15377 7055 326) (VECTOR 11854 11853 11852 11851 11737 11737) (VECTOR 85 15379 7062) (VECTOR 86 327 7063) (VECTOR 78 7066 7065) (VECTOR 7068) (VECTOR 84 11416 15383 11358 540) (VECTOR 78 7072 7071) (VECTOR 7074 7073 7070) (VECTOR 84 11538 15386 11419 543) (VECTOR 54 11653 7077 7069) (VECTOR 11854 11853 11852 11851 11737 10669 10398) (VECTOR 85 15389 7081) (VECTOR 86 330 7082) (VECTOR 11854 11853 11852 11851 11737 10398) (VECTOR 84 7089 15392 45 328) (VECTOR 11854 11853 11852 11851 11737 10398) (VECTOR 85 15394 7090) (VECTOR 86 329 7091) (VECTOR 78 7094 7093) (VECTOR 7096) (VECTOR 84 11416 15398 11358 540) (VECTOR 78 7100 7099) (VECTOR 7102 7101 7098) (VECTOR 84 11538 15401 11419 543) (VECTOR 54 11653 7105 7097) (VECTOR 11854 11853 11852 11851 10669 10398) (VECTOR 85 15404 7109) (VECTOR 86 332 7110) (VECTOR 11854 11853 11852 11851 10669 10398) (VECTOR 84 7117 15407 46 330) (VECTOR 11854 11853 11852 11851 10669 10398) (VECTOR 85 15409 7118) (VECTOR 86 331 7119) (VECTOR 78 7122 7121) (VECTOR 7124) (VECTOR 84 11416 15413 11358 540) (VECTOR 78 7128 7127) (VECTOR 7130 7129 7126) (VECTOR 84 11538 15416 11419 543) (VECTOR 54 11653 7133 7125) (VECTOR 11854 11853 11852 11851 10398) (VECTOR 85 15419 7137) (VECTOR 86 334 7138) (VECTOR 11854 11853 11852 11851 10398) (VECTOR 84 7147 15422 7142 332) (VECTOR 11854 11853 11852 11851 10398) (VECTOR 85 15424 7148) (VECTOR 86 333 7149) (VECTOR 78 7152 7151) (VECTOR 7154) (VECTOR 84 11416 15428 11358 540) (VECTOR 78 7158 7157) (VECTOR 7160 7159 7156) (VECTOR 84 11538 15431 11419 543) (VECTOR 54 11653 7163 7155) (VECTOR 11854 11853 11852 11851 10669 10524) (VECTOR 85 15434 7167) (VECTOR 86 336 7168) (VECTOR 11854 11853 11852 11851) (VECTOR 84 7186 15437 7182 334) (VECTOR 11854 11853 11852 11851) (VECTOR 85 15439 7187) (VECTOR 86 335 7188) (VECTOR 78 7193 7192) (VECTOR 11854 11853 11852 11851 11849 10669 11025) (VECTOR 85 15443 7195) (VECTOR 86 338 7196) (VECTOR 11854 11853 11852 11851 10669) (VECTOR 84 7204 15446 7199 336) (VECTOR 11854 11853 11852 11851 10669) (VECTOR 85 15448 7205) (VECTOR 86 337 7206) (VECTOR 78 7211 7210) (VECTOR 11854 11853 11852 11851 11850 11849 11025) (VECTOR 85 15452 7213) (VECTOR 86 575 7214) (VECTOR 11854 11853 11852 11851 11849 11025) (VECTOR 84 7223 15455 7217 338) (VECTOR 11854 11853 11852 11851 11849 11025) (VECTOR 85 15457 7224) (VECTOR 86 339 7225) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765 11025) (VECTOR 85 15460 0) (VECTOR 86 345 7227) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 84 7248 15463 7238 340) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 85 15465 7229) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 7268) (VECTOR 84 7248 15467 7238 340) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 7268) (VECTOR 85 15469 7231) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272) (VECTOR 84 7248 15471 7238 340) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272) (VECTOR 85 15473 7233) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765) (VECTOR 84 7248 15475 7238 340) (VECTOR 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765) (VECTOR 85 15477 7249) (VECTOR 86 341 7250) (VECTOR 78 7255 7254) (VECTOR 11861 11025) (VECTOR 85 15481 7257) (VECTOR 86 342 7258) (VECTOR 11861) (VECTOR 85 15484 11861) (VECTOR 86 343 7260) (VECTOR 11025) (VECTOR 85 15487 11025) (VECTOR 86 344 7262) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 84 7292 15490 7277 345) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 9167) (VECTOR 85 15492 7264) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 7268) (VECTOR 84 7292 15494 7277 345) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 7268) (VECTOR 85 15496 7266) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272) (VECTOR 84 7292 15498 7277 345) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 7272) (VECTOR 85 15500 7270) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765) (VECTOR 84 7292 15502 7277 345) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765) (VECTOR 85 15504 7293) (VECTOR 86 346 7294) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 8765) (VECTOR 85 15507 0) (VECTOR 86 388 7296) (VECTOR 11838 9331) (VECTOR 85 15510 9167) (VECTOR 78 7305 7302) (VECTOR 7309 7308 17507) (VECTOR 84 11455 15513 11436 545) (VECTOR 7313) (VECTOR 84 11516 15515 11458 546) (VECTOR 54 11518 17530 7314) (VECTOR 7317 7316 7315) (VECTOR 84 11538 15518 11419 543) (VECTOR 78 7323 7320) (VECTOR 7327) (VECTOR 84 11605 15521 11547 549) (VECTOR 54 11651 7331 7328) (VECTOR 54 11653 7332 7300) (VECTOR 78 7339 7336) (VECTOR 7343 7342 7341) (VECTOR 84 11341 15526 11307 538) (VECTOR 7350 7349 17374) (VECTOR 84 11162 15528 11679 521) (VECTOR 7354) (VECTOR 84 11674 15530 11673 555) (VECTOR 54 0 17387 7355) (VECTOR 54 0 7357 7347) (VECTOR 7359 7358) (VECTOR 85 15534 7344) (VECTOR 86 347 7360) (VECTOR 84 0 17587 7363 348) (VECTOR 85 17587 7364) (VECTOR 86 349 7365) (VECTOR 11838 9331) (VECTOR 85 15540 9167) (VECTOR 7368) (VECTOR 84 11416 15542 11358 540) (VECTOR 78 7374 7371) (VECTOR 7378 7377 17507) (VECTOR 84 11455 15545 11436 545) (VECTOR 7380) (VECTOR 84 11516 15547 11458 546) (VECTOR 54 11518 17530 7381) (VECTOR 78 7384 7383) (VECTOR 7386 7385 7382) (VECTOR 84 11538 15551 11419 543) (VECTOR 78 7389 7388) (VECTOR 7391) (VECTOR 84 11605 15554 11547 549) (VECTOR 54 11651 7393 7392) (VECTOR 54 11653 7394 7369) (VECTOR 78 7398 7397) (VECTOR 7402 7401 7400) (VECTOR 84 11341 15559 11307 538) (VECTOR 78 7405 7404) (VECTOR 11838 7417) (VECTOR 85 15562 7407) (VECTOR 86 351 7408) (VECTOR 9330 11077) (VECTOR 85 15565 9331) (VECTOR 54 0 7412 7411) (VECTOR 9333 11079) (VECTOR 85 15568 7413) (VECTOR 54 0 7416 7415) (VECTOR 7617 7469) (VECTOR 85 15571 7417) (VECTOR 86 350 7418) (VECTOR 11838) (VECTOR 84 7422 15574 7421 351) (VECTOR 11838) (VECTOR 85 15576 7423) (VECTOR 86 352 7424) (VECTOR 11838 9330 11077) (VECTOR 85 15579 9167) (VECTOR 7427) (VECTOR 84 11416 15581 11358 540) (VECTOR 78 7433 7430) (VECTOR 7437 7436 17507) (VECTOR 84 11455 15584 11436 545) (VECTOR 7439) (VECTOR 84 11516 15586 11458 546) (VECTOR 54 11518 17530 7440) (VECTOR 78 7443 7442) (VECTOR 7445 7444 7441) (VECTOR 84 11538 15590 11419 543) (VECTOR 78 7448 7447) (VECTOR 7450) (VECTOR 84 11605 15593 11547 549) (VECTOR 54 11651 7452 7451) (VECTOR 54 11653 7453 7428) (VECTOR 78 7457 7456) (VECTOR 7461 7460 7459) (VECTOR 84 11341 15598 11307 538) (VECTOR 78 7464 7463) (VECTOR 11838 7617 7469) (VECTOR 85 15601 7466) (VECTOR 86 355 7467) (VECTOR 11839 7560) (VECTOR 85 15604 7469) (VECTOR 86 353 7470) (VECTOR 11838 9330) (VECTOR 84 7485 15607 7483 355) (VECTOR 11838 9330) (VECTOR 85 15609 7472) (VECTOR 11853 9333) (VECTOR 84 7479 15611 7475 354) (VECTOR 11853 9333) (VECTOR 85 15613 7480) (VECTOR 11838 7617) (VECTOR 84 7485 15615 7483 355) (VECTOR 11838 7617) (VECTOR 85 15617 7486) (VECTOR 86 356 7487) (VECTOR 7489) (VECTOR 84 11416 15620 11358 540) (VECTOR 78 7495 7492) (VECTOR 7499 7498 17507) (VECTOR 84 11455 15623 11436 545) (VECTOR 7501) (VECTOR 84 11516 15625 11458 546) (VECTOR 54 11518 17530 7502) (VECTOR 78 7505 7504) (VECTOR 7507 7506 7503) (VECTOR 84 11538 15629 11419 543) (VECTOR 78 7510 7509) (VECTOR 7512) (VECTOR 84 11605 15632 11547 549) (VECTOR 54 11651 7514 7513) (VECTOR 54 11653 7515 7490) (VECTOR 78 7519 7518) (VECTOR 7523 7522 7521) (VECTOR 84 11341 15637 11307 538) (VECTOR 78 7526 7525) (VECTOR 11839 11838 7617 7560) (VECTOR 85 15640 7528) (VECTOR 86 358 7529) (VECTOR 10840 11187) (VECTOR 85 15643 11097) (VECTOR 54 0 11736 11736) (VECTOR 11736 11736) (VECTOR 85 15646 7532) (VECTOR 54 0 17365 7534) (VECTOR 54 0 7539 7537) (VECTOR 54 0 17365 17367) (VECTOR 54 0 7546 7544) (VECTOR 54 0 7549 7541) (VECTOR 54 0 7554 7553) (VECTOR 54 0 7556 7555) (VECTOR 54 0 7559 7552) (VECTOR 7649 7646) (VECTOR 85 15656 7560) (VECTOR 86 357 7561) (VECTOR 11839 11838 9330) (VECTOR 84 7569 15659 7566 358) (VECTOR 11839 11838 9330) (VECTOR 85 15661 7563) (VECTOR 11839 11838 7617) (VECTOR 84 7569 15663 7566 358) (VECTOR 11839 11838 7617) (VECTOR 85 15665 7570) (VECTOR 86 359 7571) (VECTOR 7573) (VECTOR 84 11416 15668 11358 540) (VECTOR 78 7579 7576) (VECTOR 7583 7582 17507) (VECTOR 84 11455 15671 11436 545) (VECTOR 7585) (VECTOR 84 11516 15673 11458 546) (VECTOR 54 11518 17530 7586) (VECTOR 78 7589 7588) (VECTOR 7591 7590 7587) (VECTOR 84 11538 15677 11419 543) (VECTOR 78 7594 7593) (VECTOR 7596) (VECTOR 84 11605 15680 11547 549) (VECTOR 54 11651 7598 7597) (VECTOR 54 11653 7599 7574) (VECTOR 78 7603 7602) (VECTOR 7607 7606 7605) (VECTOR 84 11341 15685 11307 538) (VECTOR 78 7610 7609) (VECTOR 7651 7650 7617 7649 7646) (VECTOR 85 15688 7612) (VECTOR 86 362 7613) (VECTOR 11839) (VECTOR 85 15691 11839) (VECTOR 86 360 7615) (VECTOR 7762 9749) (VECTOR 85 15694 7617) (VECTOR 86 361 7618) (VECTOR 11839 11838 10840 11187) (VECTOR 84 7655 15697 7627 362) (VECTOR 11839 11838 10840 11187) (VECTOR 85 15699 7620) (VECTOR 11839 11838 9526 9452) (VECTOR 84 7655 15701 7627 362) (VECTOR 11839 11838 9526 9452) (VECTOR 85 15703 7622) (VECTOR 11839 11838 9526 7735) (VECTOR 84 7655 15705 7627 362) (VECTOR 11839 11838 9526 7735) (VECTOR 85 15707 7624) (VECTOR 54 0 7631 7629) (VECTOR 54 0 17365 7634) (VECTOR 54 0 7638 7637) (VECTOR 54 0 7641 7639) (VECTOR 54 0 7644 7633) (VECTOR 7651 7650 7649 7646) (VECTOR 84 7655 15714 7627 362) (VECTOR 54 0 7660 7658) (VECTOR 54 0 17365 7663) (VECTOR 54 0 7667 7666) (VECTOR 54 0 7670 7668) (VECTOR 54 0 7673 7662) (VECTOR 7680 7679 7678 7675) (VECTOR 85 15721 7656) (VECTOR 86 363 7681) (VECTOR 7683) (VECTOR 84 11416 15724 11358 540) (VECTOR 78 7689 7686) (VECTOR 7693 7692 17507) (VECTOR 84 11455 15727 11436 545) (VECTOR 7695) (VECTOR 84 11516 15729 11458 546) (VECTOR 54 11518 17530 7696) (VECTOR 78 7699 7698) (VECTOR 7701 7700 7697) (VECTOR 84 11538 15733 11419 543) (VECTOR 78 7704 7703) (VECTOR 7706) (VECTOR 84 11605 15736 11547 549) (VECTOR 54 11651 7708 7707) (VECTOR 54 11653 7709 7684) (VECTOR 78 7713 7712) (VECTOR 7717 7716 7715) (VECTOR 84 11341 15741 11307 538) (VECTOR 78 7720 7719) (VECTOR 7762 7761 9749 7760 7757) (VECTOR 85 15744 7722) (VECTOR 86 364 7723) (VECTOR 11839 11838 10840 11187) (VECTOR 84 7766 15747 7738 364) (VECTOR 11839 11838 10840 11187) (VECTOR 85 15749 7725) (VECTOR 11839 11838 9526 9452) (VECTOR 84 7766 15751 7738 364) (VECTOR 11839 11838 9526 9452) (VECTOR 85 15753 7727) (VECTOR 11839 11838 9526 7735) (VECTOR 84 7766 15755 7738 364) (VECTOR 54 0 10962 11770) (VECTOR 54 0 10962 11770) (VECTOR 54 0 11772 7731) (VECTOR 54 0 11770 7732) (VECTOR 54 0 7733 7730) (VECTOR 11839 11838 9526 7735) (VECTOR 85 15762 7729) (VECTOR 54 0 7742 7740) (VECTOR 54 0 17365 7745) (VECTOR 54 0 7749 7748) (VECTOR 54 0 7752 7750) (VECTOR 54 0 7755 7744) (VECTOR 7762 7761 7760 7757) (VECTOR 84 7766 15769 7738 364) (VECTOR 54 0 7771 7769) (VECTOR 54 0 17365 7774) (VECTOR 54 0 7778 7777) (VECTOR 54 0 7781 7779) (VECTOR 54 0 7784 7773) (VECTOR 7791 7790 7789 7786) (VECTOR 85 15776 7767) (VECTOR 86 365 7792) (VECTOR 7794) (VECTOR 84 11416 15779 11358 540) (VECTOR 78 7800 7797) (VECTOR 7804 7803 17507) (VECTOR 84 11455 15782 11436 545) (VECTOR 7806) (VECTOR 84 11516 15784 11458 546) (VECTOR 54 11518 17530 7807) (VECTOR 78 7810 7809) (VECTOR 7812 7811 7808) (VECTOR 84 11538 15788 11419 543) (VECTOR 78 7815 7814) (VECTOR 7817) (VECTOR 84 11605 15791 11547 549) (VECTOR 54 11651 7819 7818) (VECTOR 54 11653 7820 7795) (VECTOR 78 7824 7823) (VECTOR 7828 7827 7826) (VECTOR 84 11341 15796 11307 538) (VECTOR 78 7831 7830) (VECTOR 7870 7869 7868 7863 7850 9805) (VECTOR 85 15799 7833) (VECTOR 86 366 7834) (VECTOR 11839 11838 10841 11188 10840) (VECTOR 84 7875 15802 8513 366) (VECTOR 11839 11838 10841 11188 10840) (VECTOR 85 15804 7836) (VECTOR 11839 11838 8152 9732 9526) (VECTOR 84 7875 15806 8513 366) (VECTOR 11839 11838 8152 9732 9526) (VECTOR 85 15808 7838) (VECTOR 7846 7845 7844 7843 7842) (VECTOR 84 7875 15810 8513 366) (VECTOR 7846 7845 7844 7843 7842) (VECTOR 85 15812 7840) (VECTOR 7853) (VECTOR 84 11674 15814 11673 555) (VECTOR 7856 7855 17365) (VECTOR 84 11162 15816 11679 521) (VECTOR 54 0 7859 7854) (VECTOR 7870 7869 7868 7863 7850) (VECTOR 84 7875 15819 8513 366) (VECTOR 7882) (VECTOR 84 11674 15821 11673 555) (VECTOR 7885 7884 17365) (VECTOR 84 11162 15823 11679 521) (VECTOR 54 0 7888 7883) (VECTOR 7899 7898 7897 7892 7879) (VECTOR 85 15826 7876) (VECTOR 86 367 7900) (VECTOR 7902) (VECTOR 84 11416 15829 11358 540) (VECTOR 78 7908 7905) (VECTOR 7912 7911 17507) (VECTOR 84 11455 15832 11436 545) (VECTOR 7914) (VECTOR 84 11516 15834 11458 546) (VECTOR 54 11518 17530 7915) (VECTOR 78 7918 7917) (VECTOR 7920 7919 7916) (VECTOR 84 11538 15838 11419 543) (VECTOR 78 7923 7922) (VECTOR 7925) (VECTOR 84 11605 15841 11547 549) (VECTOR 54 11651 7927 7926) (VECTOR 54 11653 7928 7903) (VECTOR 78 7932 7931) (VECTOR 7936 7935 7934) (VECTOR 84 11341 15846 11307 538) (VECTOR 78 7939 7938) (VECTOR 7979 7978 7977 7976 7971 7958 9916) (VECTOR 85 15849 7941) (VECTOR 86 368 7942) (VECTOR 11839 11838 11836 10841 11188 10401) (VECTOR 84 7985 15852 8516 368) (VECTOR 11839 11838 11836 10841 11188 10401) (VECTOR 85 15854 7944) (VECTOR 11839 11838 11836 8152 9732 7947) (VECTOR 84 7985 15856 8516 368) (VECTOR 11839 11838 11836 8152 9732 7947) (VECTOR 85 15858 7946) (VECTOR 11839 11838 11836 8152 9732 7953) (VECTOR 84 7985 15860 8516 368) (VECTOR 54 0 7952 7951) (VECTOR 11839 11838 11836 8152 9732 7953) (VECTOR 85 15863 7949) (VECTOR 7961) (VECTOR 84 11674 15865 11673 555) (VECTOR 7964 7963 17365) (VECTOR 84 11162 15867 11679 521) (VECTOR 54 0 7967 7962) (VECTOR 7979 7978 7977 7976 7971 7958) (VECTOR 84 7985 15870 8516 368) (VECTOR 7993) (VECTOR 84 11674 15872 11673 555) (VECTOR 7996 7995 17365) (VECTOR 84 11162 15874 11679 521) (VECTOR 54 0 7999 7994) (VECTOR 8011 8010 8009 8008 8003 7990) (VECTOR 85 15877 7986) (VECTOR 86 369 8012) (VECTOR 8014) (VECTOR 84 11416 15880 11358 540) (VECTOR 78 8020 8017) (VECTOR 8024 8023 17507) (VECTOR 84 11455 15883 11436 545) (VECTOR 8026) (VECTOR 84 11516 15885 11458 546) (VECTOR 54 11518 17530 8027) (VECTOR 78 8030 8029) (VECTOR 8032 8031 8028) (VECTOR 84 11538 15889 11419 543) (VECTOR 78 8035 8034) (VECTOR 8037) (VECTOR 84 11605 15892 11547 549) (VECTOR 54 11651 8039 8038) (VECTOR 54 11653 8040 8015) (VECTOR 78 8044 8043) (VECTOR 8048 8047 8046) (VECTOR 84 11341 15897 11307 538) (VECTOR 78 8051 8050) (VECTOR 8096 8095 8094 8093 8092 8087 9968) (VECTOR 85 15900 8053) (VECTOR 86 370 8054) (VECTOR 11839 11838 11837 11836 10841 11188) (VECTOR 84 8102 15903 8074 370) (VECTOR 11839 11838 11837 11836 10841 11188) (VECTOR 85 15905 8056) (VECTOR 11839 11838 11837 11836 8152 9732) (VECTOR 84 8102 15907 8074 370) (VECTOR 11839 11838 11837 11836 8152 9732) (VECTOR 85 15909 8058) (VECTOR 8070 8069 8068 8067 8066 8065) (VECTOR 84 8102 15911 8074 370) (VECTOR 10963) (VECTOR 84 11674 15913 11673 555) (VECTOR 8062 11773 10963) (VECTOR 84 11162 15915 11679 521) (VECTOR 54 0 8063 8061) (VECTOR 8070 8069 8068 8067 8066 8065) (VECTOR 85 15918 8060) (VECTOR 8077) (VECTOR 84 11674 15920 11673 555) (VECTOR 8080 8079 17365) (VECTOR 84 11162 15922 11679 521) (VECTOR 54 0 8083 8078) (VECTOR 8096 8095 8094 8093 8092 8087) (VECTOR 84 8102 15925 8074 370) (VECTOR 8106) (VECTOR 84 11674 15927 11673 555) (VECTOR 8109 8108 17365) (VECTOR 84 11162 15929 11679 521) (VECTOR 54 0 8112 8107) (VECTOR 8125 8124 8123 8122 8121 8116) (VECTOR 85 15932 8103) (VECTOR 86 371 8126) (VECTOR 78 8129 8128) (VECTOR 8131) (VECTOR 84 11416 15936 11358 540) (VECTOR 78 8135 8134) (VECTOR 8137 8136 8133) (VECTOR 84 11538 15939 11419 543) (VECTOR 54 11653 8140 8132) (VECTOR 8204 8203 8202 8201 8200 10046 8195) (VECTOR 85 15942 8144) (VECTOR 86 372 8145) (VECTOR 11839 11838 11837 11836 10841 10400) (VECTOR 84 8210 15945 45 372) (VECTOR 11839 11838 11837 11836 10841 10400) (VECTOR 85 15947 8147) (VECTOR 11839 11838 11837 11836 8152 8378) (VECTOR 84 8210 15949 45 372) (VECTOR 11839 11838 11837 11836 8152 8378) (VECTOR 85 15951 8149) (VECTOR 11839 11838 11837 11836 8152 8388) (VECTOR 84 8210 15953 45 372) (VECTOR 11839 11838 11837 11836 8152 8388) (VECTOR 85 15955 8151) (VECTOR 54 0 8159 8158) (VECTOR 54 0 8161 8156) (VECTOR 54 0 8164 8155) (VECTOR 54 0 8169 8166) (VECTOR 8176) (VECTOR 84 11674 15961 11673 555) (VECTOR 8179 8178 17365) (VECTOR 84 11162 15963 11679 521) (VECTOR 54 0 8182 8177) (VECTOR 54 0 8191 8186) (VECTOR 54 0 8194 8173) (VECTOR 8204 8203 8202 8201 8200 8195) (VECTOR 84 8210 15968 45 372) (VECTOR 54 0 8217 8216) (VECTOR 54 0 8219 8214) (VECTOR 54 0 8222 8213) (VECTOR 54 0 8227 8224) (VECTOR 8234) (VECTOR 84 11674 15974 11673 555) (VECTOR 8237 8236 17365) (VECTOR 84 11162 15976 11679 521) (VECTOR 54 0 8240 8235) (VECTOR 54 0 8249 8244) (VECTOR 54 0 8252 8231) (VECTOR 8262 8261 8260 8259 8258 8253) (VECTOR 85 15981 8211) (VECTOR 86 373 8263) (VECTOR 78 8266 8265) (VECTOR 8268) (VECTOR 84 11416 15985 11358 540) (VECTOR 78 8272 8271) (VECTOR 8274 8273 8270) (VECTOR 84 11538 15988 11419 543) (VECTOR 54 11653 8277 8269) (VECTOR 8318 8317 8316 8315 10139 8314 8293) (VECTOR 85 15991 8281) (VECTOR 86 374 8282) (VECTOR 11839 11838 11837 11836 10402 10400) (VECTOR 84 8324 15994 46 374) (VECTOR 11839 11838 11837 11836 10402 10400) (VECTOR 85 15996 8284) (VECTOR 11839 11838 11837 11836 8291 8378) (VECTOR 84 8324 15998 46 374) (VECTOR 11839 11838 11837 11836 8291 8378) (VECTOR 85 16000 8286) (VECTOR 11839 11838 11837 11836 8291 8388) (VECTOR 84 8324 16002 46 374) (VECTOR 54 0 8290 8289) (VECTOR 11839 11838 11837 11836 8291 8388) (VECTOR 85 16005 8288) (VECTOR 8296) (VECTOR 84 11674 16007 11673 555) (VECTOR 8299 8298 17365) (VECTOR 84 11162 16009 11679 521) (VECTOR 54 0 8302 8297) (VECTOR 54 0 8311 8306) (VECTOR 8318 8317 8316 8315 8314 8293) (VECTOR 84 8324 16013 46 374) (VECTOR 8329) (VECTOR 84 11674 16015 11673 555) (VECTOR 8332 8331 17365) (VECTOR 84 11162 16017 11679 521) (VECTOR 54 0 8335 8330) (VECTOR 54 0 8344 8339) (VECTOR 8351 8350 8349 8348 8347 8326) (VECTOR 85 16021 8325) (VECTOR 86 375 8352) (VECTOR 78 8355 8354) (VECTOR 8357) (VECTOR 84 11416 16025 11358 540) (VECTOR 78 8361 8360) (VECTOR 8363 8362 8359) (VECTOR 84 11538 16028 11419 543) (VECTOR 54 11653 8366 8358) (VECTOR 8438 8437 8436 8435 10270 8434) (VECTOR 85 16031 8370) (VECTOR 86 376 8371) (VECTOR 11839 11838 11837 11836 10400) (VECTOR 84 8443 16034 8392 376) (VECTOR 11839 11838 11837 11836 10400) (VECTOR 85 16036 8373) (VECTOR 11839 11838 11837 11836 8378) (VECTOR 84 8443 16038 8392 376) (VECTOR 54 0 8377 8376) (VECTOR 11839 11838 11837 11836 8378) (VECTOR 85 16041 8375) (VECTOR 11839 11838 11837 11836 8388) (VECTOR 84 8443 16043 8392 376) (VECTOR 54 0 8383 8382) (VECTOR 54 0 8386 8385) (VECTOR 54 0 8387 8384) (VECTOR 11839 11838 11837 11836 8388) (VECTOR 85 16048 8380) (VECTOR 54 0 8398 8397) (VECTOR 54 0 8400 8395) (VECTOR 54 0 8403 8394) (VECTOR 54 0 8408 8405) (VECTOR 8415) (VECTOR 84 11674 16054 11673 555) (VECTOR 8418 8417 17365) (VECTOR 84 11162 16056 11679 521) (VECTOR 54 0 8421 8416) (VECTOR 54 0 8430 8425) (VECTOR 54 0 8433 8412) (VECTOR 8438 8437 8436 8435 8434) (VECTOR 84 8443 16061 8392 376) (VECTOR 54 0 8450 8449) (VECTOR 54 0 8452 8447) (VECTOR 54 0 8455 8446) (VECTOR 54 0 8460 8457) (VECTOR 8467) (VECTOR 84 11674 16067 11673 555) (VECTOR 8470 8469 17365) (VECTOR 84 11162 16069 11679 521) (VECTOR 54 0 8473 8468) (VECTOR 54 0 8482 8477) (VECTOR 54 0 8485 8464) (VECTOR 8490 8489 8488 8487 8486) (VECTOR 85 16074 8444) (VECTOR 86 377 8491) (VECTOR 78 8494 8493) (VECTOR 8496) (VECTOR 84 11416 16078 11358 540) (VECTOR 78 8500 8499) (VECTOR 8502 8501 8498) (VECTOR 84 11538 16081 11419 543) (VECTOR 54 11653 8505 8497) (VECTOR 11839 11838 11837 11836 10472) (VECTOR 85 16084 8509) (VECTOR 86 378 8510) (VECTOR 11839 11838 11837 11836) (VECTOR 84 8528 16087 8524 378) (VECTOR 11839 11838 11837 11836) (VECTOR 85 16089 8529) (VECTOR 86 379 8530) (VECTOR 78 8536 8533) (VECTOR 8538) (VECTOR 84 11416 16093 11358 540) (VECTOR 8541 8540 17507) (VECTOR 84 11455 16095 11436 545) (VECTOR 8543) (VECTOR 84 11516 16097 11458 546) (VECTOR 78 8548 8547) (VECTOR 78 8551 8550) (VECTOR 8558 8557 8556 8555 8554 8553) (FORWARD -) (VECTOR 8559 8552 8549) (VECTOR 84 8568 16103 8546 380) (VECTOR 54 11518 8569 8544) (VECTOR 78 8573 8572) (VECTOR 8575 8574 8571) (VECTOR 84 11538 16107 11419 543) (VECTOR 8577) (VECTOR 84 11605 16109 11547 549) (VECTOR 54 11651 8579 8578) (VECTOR 78 8582 8581) (VECTOR 54 11653 8583 8539) (VECTOR 8631 8630 8629 8628 8627 10564) (VECTOR 85 16114 8587) (VECTOR 86 381 8588) (VECTOR 11839 11838 11837 11836 10402) (VECTOR 84 8636 16117 8606 381) (VECTOR 11839 11838 11837 11836 10402) (VECTOR 85 16119 8590) (VECTOR 11839 11838 11837 11836 8593) (VECTOR 84 8636 16121 8606 381) (VECTOR 11839 11838 11837 11836 8593) (VECTOR 85 16123 8592) (VECTOR 54 0 8597 8596) (VECTOR 11839 11838 11837 11836 8598) (VECTOR 84 8636 16126 8606 381) (VECTOR 54 0 8602 8601) (VECTOR 11839 11838 11837 11836 8603) (VECTOR 85 16129 8599) (VECTOR 8609) (VECTOR 84 10772 16131 11673 484) (VECTOR 8612 8611 17365) (VECTOR 84 10778 16133 11679 485) (VECTOR 54 0 8615 8610) (VECTOR 54 0 8624 8619) (VECTOR 8631 8630 8629 8628 8627) (VECTOR 84 8636 16137 8606 381) (VECTOR 8640) (VECTOR 84 10772 16139 11673 484) (VECTOR 8643 8642 17365) (VECTOR 84 10778 16141 11679 485) (VECTOR 54 0 8646 8641) (VECTOR 54 0 8655 8650) (VECTOR 8662 8661 8660 8659 8658) (VECTOR 85 16145 8637) (VECTOR 86 382 8663) (VECTOR 8730 8729 8728 8727 8726 10820 8725) (VECTOR 85 16148 8668) (VECTOR 86 383 8669) (VECTOR 78 8674 8673) (VECTOR 11839 11838 11837 11836 11835 11834 8796) (VECTOR 85 16152 8676) (VECTOR 78 8681 8680) (VECTOR 78 8687 8686) (VECTOR 54 8691 8690 8689) (VECTOR 11839 11838 11837 11836 11835 11834 8692) (VECTOR 85 16157 8683) (VECTOR 78 8697 8696) (VECTOR 54 8745 10959 8701) (VECTOR 11839 11838 11837 11836 11835 11834 8702) (VECTOR 85 16161 8699) (VECTOR 86 574 8703) (VECTOR 11839 11838 11837 11836 11834 10844) (VECTOR 84 8736 16164 8717 383) (VECTOR 11839 11838 11837 11836 11834 10844) (VECTOR 85 16166 8705) (VECTOR 11839 11838 11837 11836 11834 8796) (VECTOR 84 8736 16168 8717 383) (VECTOR 11839 11838 11837 11836 11834 8796) (VECTOR 85 16170 8707) (VECTOR 11839 11838 11837 11836 11834 8714) (VECTOR 84 8736 16172 8717 383) (VECTOR 78 8711 8710) (VECTOR 54 8713 11738 8712) (VECTOR 11839 11838 11837 11836 11834 8714) (VECTOR 85 16176 8709) (VECTOR 78 8723 8722) (VECTOR 54 8745 8724 8721) (VECTOR 8730 8729 8728 8727 8726 8725) (VECTOR 84 8736 16180 8717 383) (VECTOR 78 8743 8742) (VECTOR 54 8745 8744 8741) (VECTOR 8751 8750 8749 8748 8747 8746) (VECTOR 85 16184 8737) (VECTOR 86 384 8752) (VECTOR 10844) (VECTOR 85 16187 10844) (VECTOR 8796) (VECTOR 85 16189 8796) (VECTOR 86 385 8755) (VECTOR 11846) (VECTOR 85 16192 11846) (VECTOR 86 386 8757) (VECTOR 78 8763 8762) (VECTOR 11846 8796) (VECTOR 85 16196 8765) (VECTOR 86 387 8766) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 8783 16199 8771 388) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 16201 8784) (VECTOR 86 389 8785) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738 8796) (VECTOR 85 16204 0) (VECTOR 86 392 8787) (VECTOR 10842) (VECTOR 85 16207 10842) (VECTOR 10974) (VECTOR 85 16209 10974) (VECTOR 86 390 8790) (VECTOR 78 8794 8793) (VECTOR 54 10843 8795 8792) (VECTOR 11189 10974) (VECTOR 85 16214 8796) (VECTOR 86 391 8797) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 84 8812 16217 8802 392) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11738) (VECTOR 85 16219 8813) (VECTOR 86 393 8814) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11189 11738 10974) (VECTOR 85 16222 0) (VECTOR 86 502 8816) (VECTOR 10842) (VECTOR 85 16225 10842) (VECTOR 8819) (VECTOR 85 16227 8819) (VECTOR 9038) (VECTOR 85 16229 9038) (VECTOR 54 0 8837 8829) (VECTOR 54 0 8843 8838) (VECTOR 8849 8848 17374) (VECTOR 84 11162 16233 11679 521) (VECTOR 16351) (VECTOR 84 9092 16235 9089 399) (VECTOR 8855) (VECTOR 84 11674 16237 11673 555) (VECTOR 54 0 17387 8856) (VECTOR 8863 8862 17374) (VECTOR 84 11162 16240 11679 521) (VECTOR 78 8869 8866) (VECTOR 8873 8872 8871) (VECTOR 84 11341 16243 11307 538) (VECTOR 8877) (VECTOR 84 11674 16245 11673 555) (VECTOR 54 0 17387 8878) (VECTOR 8882) (VECTOR 84 11416 16248 11358 540) (VECTOR 78 8888 8885) (VECTOR 8892 8891 17507) (VECTOR 84 11455 16251 11436 545) (VECTOR 8896) (VECTOR 84 11516 16253 11458 546) (VECTOR 54 11518 17530 8897) (VECTOR 78 8900 8899) (VECTOR 8902 8901 8898) (VECTOR 84 11538 16257 11419 543) (VECTOR 78 8908 8905) (VECTOR 8912) (VECTOR 84 11605 16260 11547 549) (VECTOR 54 11651 8916 8913) (VECTOR 54 11653 8917 8883) (VECTOR 78 8923 8920) (VECTOR 54 0 8925 8859) (VECTOR 54 0 8931 8926) (VECTOR 8933) (VECTOR 85 16267 8845) (VECTOR 86 396 8934) (VECTOR 54 0 9654 9051) (VECTOR 8936) (VECTOR 85 16271 8936) (VECTOR 54 0 10352 10352) (VECTOR 8938) (VECTOR 85 16274 8938) (VECTOR 9135) (VECTOR 85 16276 9135) (VECTOR 8943 8942 17374) (VECTOR 84 11162 16278 11679 521) (VECTOR 8949) (VECTOR 84 11674 16280 11673 555) (VECTOR 54 0 17387 8950) (VECTOR 8957 8956 17374) (VECTOR 84 11162 16283 11679 521) (VECTOR 8961) (VECTOR 84 11674 16285 11673 555) (VECTOR 54 0 17387 8962) (VECTOR 54 0 8968 8954) (VECTOR 8972 8971 17374) (VECTOR 84 11162 16289 11679 521) (VECTOR 16351) (VECTOR 84 9092 16291 9089 399) (VECTOR 8978) (VECTOR 84 11674 16293 11673 555) (VECTOR 54 0 17387 8979) (VECTOR 8986 8985 17374) (VECTOR 84 11162 16296 11679 521) (VECTOR 8990) (VECTOR 84 11674 16298 11673 555) (VECTOR 54 0 17387 8991) (VECTOR 78 8995 8994) (VECTOR 8999 8998 8997) (VECTOR 84 11341 16302 11307 538) (VECTOR 9001) (VECTOR 84 11416 16304 11358 540) (VECTOR 78 9007 9004) (VECTOR 9011 9010 17507) (VECTOR 84 11455 16307 11436 545) (VECTOR 9013) (VECTOR 84 11516 16309 11458 546) (VECTOR 54 11518 17530 9014) (VECTOR 78 9017 9016) (VECTOR 9019 9018 9015) (VECTOR 84 11538 16313 11419 543) (VECTOR 78 9022 9021) (VECTOR 9024) (VECTOR 84 11605 16316 11547 549) (VECTOR 54 11651 9026 9025) (VECTOR 54 11653 9027 9002) (VECTOR 78 9030 9029) (VECTOR 54 0 9032 8983) (VECTOR 9033) (VECTOR 85 16322 8969) (VECTOR 86 394 9034) (VECTOR 78 9037 9036) (VECTOR 11868 9135) (VECTOR 85 16326 9038) (VECTOR 86 395 9039) (VECTOR 84 0 17587 9042 396) (VECTOR 85 17587 9043) (VECTOR 86 397 9044) (VECTOR 78 9047 9046) (VECTOR 11868 9135) (VECTOR 85 16333 9048) (VECTOR 86 404 9049) (VECTOR 9051) (VECTOR 85 16336 9051) (VECTOR 9151) (VECTOR 85 16338 9151) (VECTOR 78 9055 9054) (VECTOR 9056) (VECTOR 84 9092 16341 9089 399) (VECTOR 9057) (VECTOR 85 16343 9057) (VECTOR 78 9066 9065) (VECTOR 78 9069 9068) (VECTOR 9076 9075 9074 9073 9072 9071) (FORWARD -) (VECTOR 9077 9070 9067) (VECTOR 84 9086 16349 9064 398) (VECTOR 51 37) (VECTOR 16351) (VECTOR 84 9092 16352 9089 399) (VECTOR 51 37) (VECTOR 78 9097 9096) (VECTOR 78 9100 9099) (VECTOR 9107 9106 9105 9104 9103 9102) (FORWARD -) (VECTOR 9108 9101 9098) (VECTOR 84 9117 16359 9095 400) (VECTOR 54 9119 9118 16354) (VECTOR 78 9122 9121) (VECTOR 9123) (VECTOR 85 16363 9062) (VECTOR 86 401 9124) (VECTOR 9654) (VECTOR 85 16366 9654) (VECTOR 9330) (VECTOR 85 16368 9330) (VECTOR 9333) (VECTOR 85 16370 9333) (VECTOR 9130) (VECTOR 85 16372 9129) (VECTOR 86 402 9131) (VECTOR 54 0 9134 9133) (VECTOR 9654 9151) (VECTOR 85 16376 9135) (VECTOR 86 403 9136) (VECTOR 11868) (VECTOR 84 9140 16379 9139 404) (VECTOR 11868) (VECTOR 85 16381 9141) (VECTOR 86 405 9142) (VECTOR 78 9145 9144) (VECTOR 11868 9654 9151) (VECTOR 85 16385 9146) (VECTOR 86 408 9147) (VECTOR 11869) (VECTOR 85 16388 11869) (VECTOR 86 406 9149) (VECTOR 11869 9313) (VECTOR 85 16391 9151) (VECTOR 86 407 9152) (VECTOR 11868 9654) (VECTOR 84 9157 16394 9155 408) (VECTOR 11868 9654) (VECTOR 85 16396 9158) (VECTOR 86 409 9159) (VECTOR 78 9162 9161) (VECTOR 11869 11868 9654 9313) (VECTOR 85 16400 9163) (VECTOR 86 412 9164) (VECTOR 11232) (VECTOR 85 16403 11232) (VECTOR 78 10353 10293) (VECTOR 9167) (VECTOR 85 16406 9167) (VECTOR 78 10352 10292) (VECTOR 9169) (VECTOR 85 16409 9169) (VECTOR 78 9176 9173) (VECTOR 9180 9179 17507) (VECTOR 84 11455 16412 11436 545) (VECTOR 9182) (VECTOR 84 11516 16414 11458 546) (VECTOR 54 11518 17530 9183) (VECTOR 9186 9185 9184) (VECTOR 84 11538 16417 11419 543) (VECTOR 78 9189 9188) (VECTOR 9191) (VECTOR 84 11605 16420 11547 549) (VECTOR 54 11651 9193 9192) (VECTOR 54 11653 9194 9171) (VECTOR 78 9198 9197) (VECTOR 9202 9201 9200) (VECTOR 84 11341 16425 11307 538) (VECTOR 9208) (VECTOR 84 11416 16427 11358 540) (VECTOR 78 9214 9211) (VECTOR 9218 9217 17507) (VECTOR 84 11455 16430 11436 545) (VECTOR 9222) (VECTOR 84 11516 16432 11458 546) (VECTOR 54 11518 17530 9223) (VECTOR 78 9226 9225) (VECTOR 9228 9227 9224) (VECTOR 84 11538 16436 11419 543) (VECTOR 78 9234 9231) (VECTOR 9238) (VECTOR 84 11605 16439 11547 549) (VECTOR 54 11651 9242 9239) (VECTOR 54 11653 9243 9209) (VECTOR 78 9250 9247) (VECTOR 9254 9253 9252) (VECTOR 84 11341 16444 11307 538) (VECTOR 78 9261 9258) (VECTOR 9262) (VECTOR 85 16447 9205) (VECTOR 86 410 9263) (VECTOR 78 9270 9267) (VECTOR 9274 9273 9272) (VECTOR 84 11341 16451 11307 538) (VECTOR 78 9281 9278) (VECTOR 9285 9284 17507) (VECTOR 84 11455 16454 11436 545) (VECTOR 9289) (VECTOR 84 11516 16456 11458 546) (VECTOR 54 11518 17530 9290) (VECTOR 9293 9292 9291) (VECTOR 84 11538 16459 11419 543) (VECTOR 78 9299 9296) (VECTOR 9303) (VECTOR 84 11605 16462 11547 549) (VECTOR 54 11651 9307 9304) (VECTOR 54 11653 9308 9276) (VECTOR 54 0 9312 9311) (VECTOR 9504 9504) (VECTOR 85 16467 9313) (VECTOR 86 411 9314) (VECTOR 11869 11868 9654) (VECTOR 84 9320 16470 9317 412) (VECTOR 11869 11868 9654) (VECTOR 85 16472 9321) (VECTOR 86 413 9322) (VECTOR 78 9325 9324) (VECTOR 11869 11868 9654 11233 11232) (VECTOR 85 16476 9326) (VECTOR 86 416 9327) (VECTOR 9447) (VECTOR 85 16479 9447) (VECTOR 54 0 9330 11077) (VECTOR 9331) (VECTOR 85 16482 9331) (VECTOR 54 0 9333 11233) (VECTOR 9334) (VECTOR 85 16485 9334) (VECTOR 9341 9340 17374) (VECTOR 84 11162 16487 11679 521) (VECTOR 9345) (VECTOR 84 11674 16489 11673 555) (VECTOR 54 0 17387 9346) (VECTOR 54 0 9350 9338) (VECTOR 54 0 17365 9352) (VECTOR 54 0 9357 9355) (VECTOR 54 0 17365 17367) (VECTOR 54 0 9364 9362) (VECTOR 54 0 9367 9359) (VECTOR 9373 9372 17374) (VECTOR 84 11162 16498 11679 521) (VECTOR 9377) (VECTOR 84 11674 16500 11673 555) (VECTOR 54 0 17387 9378) (VECTOR 54 0 9382 9370) (VECTOR 9383) (VECTOR 85 16504 9351) (VECTOR 86 414 9384) (VECTOR 11870 9447) (VECTOR 85 16507 11232) (VECTOR 9387 9478) (VECTOR 85 16509 9504) (VECTOR 86 415 9388) (VECTOR 11869 11868 9654 11233) (VECTOR 84 9395 16512 9391 416) (VECTOR 11869 11868 9654 11233) (VECTOR 85 16514 9396) (VECTOR 86 417 9397) (VECTOR 78 9400 9399) (VECTOR 11870 11869 11868 9654 11233 9447) (VECTOR 85 16518 9401) (VECTOR 86 420 9402) (VECTOR 11736) (VECTOR 85 16521 11736) (VECTOR 11187) (VECTOR 85 16523 11187) (VECTOR 9452) (VECTOR 85 16525 9452) (VECTOR 54 0 17365 9407) (VECTOR 54 0 9412 9410) (VECTOR 54 0 17365 17367) (VECTOR 54 0 9419 9417) (VECTOR 54 0 9422 9414) (VECTOR 54 0 17365 9426) (VECTOR 54 0 9431 9429) (VECTOR 54 0 17365 17367) (VECTOR 54 0 9438 9436) (VECTOR 54 0 9441 9433) (VECTOR 9444) (VECTOR 85 16537 9425) (VECTOR 86 418 9445) (VECTOR 54 0 11737 11736) (VECTOR 11737 11736) (VECTOR 85 16541 9447) (VECTOR 54 0 9450 9449) (VECTOR 10353 9452) (VECTOR 85 16544 9451) (VECTOR 54 0 17365 9454) (VECTOR 54 0 9459 9457) (VECTOR 54 0 17365 17367) (VECTOR 54 0 9466 9464) (VECTOR 54 0 9469 9461) (VECTOR 54 0 9477 9472) (VECTOR 9485 9480) (VECTOR 85 16552 9478) (VECTOR 86 419 9486) (VECTOR 11870 11869 11868 9654 11233) (VECTOR 84 9494 16555 9489 420) (VECTOR 11870 11869 11868 9654 11233) (VECTOR 85 16557 9495) (VECTOR 86 421 9496) (VECTOR 78 9499 9498) (VECTOR 11870 11869 11868 11737 9654 11233 11736) (VECTOR 85 16561 9500) (VECTOR 86 423 9501) (VECTOR 11870 11095) (VECTOR 85 16564 11233) (VECTOR 9505 9579) (VECTOR 85 16566 9504) (VECTOR 86 422 9506) (VECTOR 11870 11869 11868 11737 9654 11736) (VECTOR 84 9515 16569 9509 423) (VECTOR 11870 11869 11868 11737 9654 11736) (VECTOR 85 16571 9516) (VECTOR 86 424 9517) (VECTOR 78 9520 9519) (VECTOR 11870 11869 11868 11737 9654 11095 11736) (VECTOR 85 16575 9521) (VECTOR 86 427 9522) (VECTOR 11736) (VECTOR 85 16578 11736) (VECTOR 10293) (VECTOR 85 16580 10293) (VECTOR 9526) (VECTOR 85 16582 9526) (VECTOR 54 0 9529 9528) (VECTOR 54 0 9531 9530) (VECTOR 54 0 9537 9536) (VECTOR 54 0 9540 9538) (VECTOR 9543) (VECTOR 85 16588 9534) (VECTOR 86 425 9544) (VECTOR 11737 11736) (VECTOR 85 16591 11095) (VECTOR 9550 9549 17374) (VECTOR 84 11162 16593 11679 521) (VECTOR 9554) (VECTOR 84 11674 16595 11673 555) (VECTOR 54 0 17387 9555) (VECTOR 54 0 9557 9547) (VECTOR 9732 10293) (VECTOR 85 16599 9558) (VECTOR 54 0 9562 9561) (VECTOR 54 0 9565 9563) (VECTOR 9571 9570 17374) (VECTOR 84 11162 16603 11679 521) (VECTOR 9575) (VECTOR 84 11674 16605 11673 555) (VECTOR 54 0 17387 9576) (VECTOR 54 0 9578 9568) (VECTOR 9585) (VECTOR 84 11674 16609 11673 555) (VECTOR 9588 9587 17365) (VECTOR 84 11162 16611 11679 521) (VECTOR 54 0 9591 9586) (VECTOR 9595 9582) (VECTOR 85 16614 9579) (VECTOR 86 426 9596) (VECTOR 11870 11869 11868 11737 9654 11736) (VECTOR 84 9605 16617 9599 427) (VECTOR 11870 11869 11868 11737 9654 11736) (VECTOR 85 16619 9606) (VECTOR 86 428 9607) (VECTOR 78 9610 9609) (VECTOR 11870 11869 11868 11737 11737 9654 11736 11736) (VECTOR 85 16623 9611) (VECTOR 86 432 9612) (VECTOR 9716) (VECTOR 85 16626 9716) (VECTOR 9718) (VECTOR 85 16628 9718) (VECTOR 54 0 10353 10352) (VECTOR 9616) (VECTOR 85 16631 9616) (VECTOR 9620 9619 17374) (VECTOR 84 11162 16633 11679 521) (VECTOR 9624) (VECTOR 84 11674 16635 11673 555) (VECTOR 54 0 17387 9625) (VECTOR 54 0 9632 9627) (VECTOR 9636 9635 17374) (VECTOR 84 11162 16639 11679 521) (VECTOR 9640) (VECTOR 84 11674 16641 11673 555) (VECTOR 54 0 17387 9641) (VECTOR 54 0 9648 9643) (VECTOR 9649) (VECTOR 85 16645 9633) (VECTOR 86 429 9650) (VECTOR 11870) (VECTOR 85 16648 11870) (VECTOR 86 430 9652) (VECTOR 11870 9716) (VECTOR 85 16651 9654) (VECTOR 86 431 9655) (VECTOR 11870 11869 11868 11737 11737 11736 11736) (VECTOR 84 9665 16654 9658 432) (VECTOR 11870 11869 11868 11737 11737 11736 11736) (VECTOR 85 16656 9666) (VECTOR 86 433 9667) (VECTOR 78 9670 9669) (VECTOR 11870 11869 11868 11737 11737 9716 11736 11736) (VECTOR 85 16660 9671) (VECTOR 86 437 9672) (VECTOR 11737) (VECTOR 85 16663 11737) (VECTOR 11188) (VECTOR 85 16665 11188) (VECTOR 10352) (VECTOR 85 16667 10352) (VECTOR 9679 9678 17374) (VECTOR 84 11162 16669 11679 521) (VECTOR 9683) (VECTOR 84 10780 16671 11673 486) (VECTOR 54 0 17387 9684) (VECTOR 9689 9688 17374) (VECTOR 84 11162 16674 11679 521) (VECTOR 9693) (VECTOR 84 10780 16676 11673 486) (VECTOR 54 0 17387 9694) (VECTOR 9696) (VECTOR 85 16679 9686) (VECTOR 86 434 9697) (VECTOR 11737) (VECTOR 85 16682 11737) (VECTOR 10353) (VECTOR 85 16684 10353) (VECTOR 9702) (VECTOR 85 16686 9701) (VECTOR 9713) (VECTOR 85 16688 9708) (VECTOR 86 435 9714) (VECTOR 54 0 11737 11737) (VECTOR 11737 11737) (VECTOR 85 16692 9716) (VECTOR 54 0 11737 11188) (VECTOR 10841 11188) (VECTOR 85 16695 9718) (VECTOR 9722 9721 17374) (VECTOR 84 11162 16697 11679 521) (VECTOR 9726) (VECTOR 84 11674 16699 11673 555) (VECTOR 54 0 17387 9727) (VECTOR 54 0 9730 9729) (VECTOR 10353 9732) (VECTOR 85 16703 9731) (VECTOR 9736 9735 17374) (VECTOR 84 11162 16705 11679 521) (VECTOR 9740) (VECTOR 84 11674 16707 11673 555) (VECTOR 54 0 17387 9741) (VECTOR 54 0 9748 9743) (VECTOR 9752) (VECTOR 84 11674 16711 11673 555) (VECTOR 9755 9754 17365) (VECTOR 84 11162 16713 11679 521) (VECTOR 54 0 9758 9753) (VECTOR 9767 9762) (VECTOR 85 16716 9749) (VECTOR 86 436 9768) (VECTOR 11870 11869 11868 11737 11737 11736 11736) (VECTOR 84 9778 16719 9771 437) (VECTOR 11870 11869 11868 11737 11737 11736 11736) (VECTOR 85 16721 9779) (VECTOR 86 438 9780) (VECTOR 78 9783 9782) (VECTOR 11870 11869 11868 11737 11737 11736 11736) (VECTOR 85 16725 9784) (VECTOR 86 440 9785) (VECTOR 11866 10524) (VECTOR 85 16728 11736) (VECTOR 11836 10401) (VECTOR 85 16730 11187) (VECTOR 54 0 9791 9790) (VECTOR 54 0 17365 9794) (VECTOR 54 0 9798 9797) (VECTOR 54 0 9800 9799) (VECTOR 54 0 9803 9793) (VECTOR 54 0 9809 9807) (VECTOR 54 0 17365 9812) (VECTOR 54 0 9816 9815) (VECTOR 54 0 9819 9817) (VECTOR 54 0 9822 9811) (VECTOR 54 0 9827 9824) (VECTOR 9832 9831) (VECTOR 85 16743 9805) (VECTOR 86 439 9833) (VECTOR 11870 11869 11868 11737 11737 11736) (VECTOR 84 9840 16746 10497 440) (VECTOR 11870 11869 11868 11737 11737 11736) (VECTOR 85 16748 9841) (VECTOR 86 441 9842) (VECTOR 78 9845 9844) (VECTOR 11870 11869 11868 11866 11737 11737 10524 11736) (VECTOR 85 16752 9846) (VECTOR 86 444 9847) (VECTOR 10524) (VECTOR 85 16755 10524) (VECTOR 10401) (VECTOR 85 16757 10401) (VECTOR 10294) (VECTOR 85 16759 10294) (VECTOR 54 0 9855 9853) (VECTOR 54 0 17365 9858) (VECTOR 54 0 9862 9861) (VECTOR 54 0 9865 9863) (VECTOR 54 0 9868 9857) (VECTOR 54 0 9873 9870) (VECTOR 54 0 9881 9879) (VECTOR 54 0 17365 9884) (VECTOR 54 0 9888 9887) (VECTOR 54 0 9891 9889) (VECTOR 54 0 9894 9883) (VECTOR 54 0 9899 9896) (VECTOR 9903) (VECTOR 85 16773 9877) (VECTOR 86 442 9904) (VECTOR 11867 10524) (VECTOR 85 16776 11736) (VECTOR 11837 10401) (VECTOR 85 16778 10840) (VECTOR 54 0 9910 9909) (VECTOR 54 0 9913 9911) (VECTOR 9917 9968) (VECTOR 85 16782 9916) (VECTOR 86 443 9918) (VECTOR 11870 11869 11868 11866 11737 11737 10524) (VECTOR 84 9926 16785 10500 444) (VECTOR 11870 11869 11868 11866 11737 11737 10524) (VECTOR 85 16787 9927) (VECTOR 86 445 9928) (VECTOR 78 9931 9930) (VECTOR 11870 11869 11868 11867 11866 11737 11737 10524) (VECTOR 85 16791 9932) (VECTOR 86 447 9933) (VECTOR 11866 10398) (VECTOR 85 16794 10524) (VECTOR 11836 10400) (VECTOR 85 16796 10401) (VECTOR 54 0 9940 9938) (VECTOR 54 0 17365 9943) (VECTOR 54 0 9947 9946) (VECTOR 54 0 9950 9948) (VECTOR 54 0 9953 9942) (VECTOR 54 0 9958 9957) (VECTOR 54 0 9961 9959) (VECTOR 54 0 9964 9955) (VECTOR 54 0 9974 9973) (VECTOR 54 0 9976 9971) (VECTOR 54 0 9979 9970) (VECTOR 54 0 9984 9981) (VECTOR 9991) (VECTOR 84 11674 16810 11673 555) (VECTOR 9994 9993 17365) (VECTOR 84 11162 16812 11679 521) (VECTOR 54 0 9997 9992) (VECTOR 54 0 10006 10001) (VECTOR 54 0 10009 9988) (VECTOR 10011 10010) (VECTOR 85 16817 9968) (VECTOR 86 446 10012) (VECTOR 11870 11869 11868 11867 11866 11737 11737) (VECTOR 84 10023 16820 10016 447) (VECTOR 11870 11869 11868 11867 11866 11737 11737) (VECTOR 85 16822 10024) (VECTOR 86 448 10025) (VECTOR 78 10028 10027) (VECTOR 11870 11869 11868 11867 11866 11737 11737 10398) (VECTOR 85 16826 10029) (VECTOR 86 451 10030) (VECTOR 11866) (VECTOR 85 16829 11866) (VECTOR 86 449 10032) (VECTOR 11866 10669) (VECTOR 85 16832 11737) (VECTOR 11836 10402) (VECTOR 85 16834 11188) (VECTOR 10036) (VECTOR 84 11674 16836 11673 555) (VECTOR 10039 10038 17365) (VECTOR 84 11162 16838 11679 521) (VECTOR 54 0 10042 10037) (VECTOR 10049) (VECTOR 84 11674 16841 11673 555) (VECTOR 10052 10051 17365) (VECTOR 84 11162 16843 11679 521) (VECTOR 54 0 10055 10050) (VECTOR 54 0 10064 10059) (VECTOR 10068 10067) (VECTOR 85 16847 10046) (VECTOR 86 450 10069) (VECTOR 11870 11869 11868 11867 11866 11737 10398) (VECTOR 84 10077 16850 45 451) (VECTOR 11870 11869 11868 11867 11866 11737 10398) (VECTOR 85 16852 10078) (VECTOR 86 452 10079) (VECTOR 78 10082 10081) (VECTOR 11870 11869 11868 11867 11866 11737 10669 10398) (VECTOR 85 16856 10083) (VECTOR 86 455 10084) (VECTOR 10669) (VECTOR 85 16859 10669) (VECTOR 10402) (VECTOR 85 16861 10402) (VECTOR 10354) (VECTOR 85 16863 10354) (VECTOR 10091) (VECTOR 84 11674 16865 11673 555) (VECTOR 10094 10093 17365) (VECTOR 84 11162 16867 11679 521) (VECTOR 54 0 10097 10092) (VECTOR 54 0 10106 10101) (VECTOR 10112) (VECTOR 84 11674 16871 11673 555) (VECTOR 10115 10114 17365) (VECTOR 84 11162 16873 11679 521) (VECTOR 54 0 10118 10113) (VECTOR 54 0 10127 10122) (VECTOR 10130) (VECTOR 85 16877 10109) (VECTOR 86 453 10131) (VECTOR 11867 10669) (VECTOR 85 16880 11737) (VECTOR 11837 10402) (VECTOR 85 16882 10841) (VECTOR 10140 10270) (VECTOR 85 16884 10139) (VECTOR 86 454 10141) (VECTOR 11870 11869 11868 11867 11866 10669 10398) (VECTOR 84 10149 16887 46 455) (VECTOR 11870 11869 11868 11867 11866 10669 10398) (VECTOR 85 16889 10150) (VECTOR 86 456 10151) (VECTOR 78 10154 10153) (VECTOR 11870 11869 11868 11867 11866 10669 10398) (VECTOR 85 16893 10155) (VECTOR 86 460 10156) (VECTOR 10398) (VECTOR 85 16896 10398) (VECTOR 10400) (VECTOR 85 16898 10400) (VECTOR 54 0 10354 10294) (VECTOR 10160) (VECTOR 85 16901 10160) (VECTOR 54 0 10167 10166) (VECTOR 54 0 10169 10164) (VECTOR 54 0 10172 10163) (VECTOR 54 0 10177 10174) (VECTOR 10182) (VECTOR 84 11674 16907 11673 555) (VECTOR 10185 10184 17365) (VECTOR 84 11162 16909 11679 521) (VECTOR 54 0 10188 10183) (VECTOR 54 0 10197 10192) (VECTOR 54 0 10200 10181) (VECTOR 54 0 10207 10206) (VECTOR 54 0 10209 10204) (VECTOR 54 0 10212 10203) (VECTOR 54 0 10217 10214) (VECTOR 10224) (VECTOR 84 11674 16918 11673 555) (VECTOR 10227 10226 17365) (VECTOR 84 11162 16920 11679 521) (VECTOR 54 0 10230 10225) (VECTOR 54 0 10239 10234) (VECTOR 54 0 10242 10221) (VECTOR 10243) (VECTOR 85 16925 10201) (VECTOR 86 457 10244) (VECTOR 11867) (VECTOR 85 16928 11867) (VECTOR 86 458 10246) (VECTOR 11867 10398) (VECTOR 85 16931 10669) (VECTOR 11837 10400) (VECTOR 85 16933 10402) (VECTOR 10252) (VECTOR 84 11674 16935 11673 555) (VECTOR 10255 10254 17365) (VECTOR 84 11162 16937 11679 521) (VECTOR 54 0 10258 10253) (VECTOR 54 0 10267 10262) (VECTOR 11818 10472) (VECTOR 85 16941 10270) (VECTOR 86 459 10271) (VECTOR 11870 11869 11868 11867 11866 10398) (VECTOR 84 10281 16944 10275 460) (VECTOR 11870 11869 11868 11867 11866 10398) (VECTOR 85 16946 10282) (VECTOR 86 461 10283) (VECTOR 78 10286 10285) (VECTOR 11870 11869 11868 11867 11866 10398) (VECTOR 85 16950 10287) (VECTOR 86 467 10288) (VECTOR 10524) (VECTOR 85 16953 10524) (VECTOR 10401) (VECTOR 85 16955 10401) (VECTOR 54 0 10293 10292) (VECTOR 10294) (VECTOR 85 16958 10294) (VECTOR 54 0 10299 10297) (VECTOR 54 0 17365 10302) (VECTOR 54 0 10306 10305) (VECTOR 54 0 10309 10307) (VECTOR 54 0 10312 10301) (VECTOR 54 0 10317 10314) (VECTOR 54 0 10325 10323) (VECTOR 54 0 17365 10328) (VECTOR 54 0 10332 10331) (VECTOR 54 0 10335 10333) (VECTOR 54 0 10338 10327) (VECTOR 54 0 10343 10340) (VECTOR 10347) (VECTOR 85 16972 10321) (VECTOR 86 462 10348) (VECTOR 10669) (VECTOR 85 16975 10669) (VECTOR 10402) (VECTOR 85 16977 10402) (VECTOR 54 0 10353 10352) (VECTOR 10354) (VECTOR 85 16980 10354) (VECTOR 10356) (VECTOR 84 10772 16982 11673 484) (VECTOR 10359 10358 17365) (VECTOR 84 10778 16984 11679 485) (VECTOR 54 0 10362 10357) (VECTOR 54 0 10371 10366) (VECTOR 10377) (VECTOR 84 10772 16988 11673 484) (VECTOR 10380 10379 17365) (VECTOR 84 10778 16990 11679 485) (VECTOR 54 0 10383 10378) (VECTOR 54 0 10392 10387) (VECTOR 10395) (VECTOR 85 16994 10374) (VECTOR 86 463 10396) (VECTOR 54 0 10669 10524) (VECTOR 10669 10524) (VECTOR 85 16998 10398) (VECTOR 54 0 10402 10401) (VECTOR 54 0 10840 11187) (VECTOR 54 0 10841 11188) (VECTOR 10402 10401) (VECTOR 85 17003 10400) (VECTOR 54 0 10407 17482) (VECTOR 54 0 10409 17377) (VECTOR 54 0 10411 10405) (VECTOR 54 0 17365 10414) (VECTOR 54 0 10418 10417) (VECTOR 54 0 10420 17367) (VECTOR 54 0 10423 10422) (VECTOR 54 0 10425 10419) (VECTOR 54 0 10428 10413) (VECTOR 54 0 10433 10432) (VECTOR 54 0 10436 10434) (VECTOR 54 0 10439 10430) (VECTOR 10446) (VECTOR 84 11674 17017 11673 555) (VECTOR 10449 10448 17365) (VECTOR 84 11162 17019 11679 521) (VECTOR 54 0 10452 10447) (VECTOR 11412) (VECTOR 84 10457 17022 11673 464) (VECTOR 10459 11165 11164) (VECTOR 84 10462 17024 11679 465) (VECTOR 54 0 10463 10458) (VECTOR 54 0 10468 10456) (VECTOR 54 0 10471 10443) (VECTOR 10475) (VECTOR 84 10772 17029 11673 484) (VECTOR 10478 10477 17365) (VECTOR 84 10778 17031 11679 485) (VECTOR 54 0 10481 10476) (VECTOR 54 0 10490 10485) (VECTOR 10493 10614) (VECTOR 85 17035 10472) (VECTOR 86 466 10494) (VECTOR 11870 11869 11868 11867 11866) (VECTOR 84 10513 17038 10508 467) (VECTOR 11870 11869 11868 11867 11866) (VECTOR 85 17040 10514) (VECTOR 86 468 10515) (VECTOR 78 10518 10517) (VECTOR 11870 11869 11868 11867 11866 10669 10524) (VECTOR 85 17044 10519) (VECTOR 86 471 10520) (VECTOR 11864) (VECTOR 85 17047 11864) (VECTOR 86 469 10522) (VECTOR 54 0 11736 11736) (VECTOR 11864 11025) (VECTOR 85 17051 10524) (VECTOR 51 37) (VECTOR 54 0 10529 17053) (VECTOR 54 0 11770 10530) (VECTOR 54 0 10532 17377) (VECTOR 54 0 10534 10527) (VECTOR 54 0 17365 10538) (VECTOR 54 0 10541 10540) (VECTOR 54 0 10908 11770) (VECTOR 54 0 10911 10543) (VECTOR 54 0 11770 10544) (VECTOR 54 0 10546 10542) (VECTOR 54 0 10549 10536) (VECTOR 54 0 10554 10553) (VECTOR 54 0 11175 11770) (VECTOR 54 0 10950 10556) (VECTOR 54 0 11770 10557) (VECTOR 54 0 10559 10555) (VECTOR 54 0 10562 10551) (VECTOR 54 10832 10572 10568) (VECTOR 10574 10573) (VECTOR 85 17072 10564) (VECTOR 54 0 11345 11770) (VECTOR 51 37) (VECTOR 54 0 10579 17075) (VECTOR 54 0 11770 10580) (VECTOR 54 0 10582 17377) (VECTOR 54 0 10584 10577) (VECTOR 54 0 17365 10588) (VECTOR 54 0 10591 10590) (VECTOR 54 0 10908 11770) (VECTOR 54 0 10911 10593) (VECTOR 54 0 11770 10594) (VECTOR 54 0 10596 10592) (VECTOR 54 0 10599 10586) (VECTOR 54 0 11175 11770) (VECTOR 54 0 10604 10603) (VECTOR 54 0 11175 11770) (VECTOR 54 0 10950 10606) (VECTOR 54 0 11770 10607) (VECTOR 54 0 10609 10605) (VECTOR 54 0 10612 10601) (VECTOR 10618) (VECTOR 84 10890 17094 10883 496) (VECTOR 78 10621 10620) (VECTOR 10623 10622 17365) (VECTOR 84 10902 17097 10893 497) (VECTOR 54 10927 10627 10619) (VECTOR 78 10631 10629) (VECTOR 54 10956 10632 10628) (VECTOR 11757 10633) (VECTOR 85 17102 10614) (VECTOR 86 470 10634) (VECTOR 11870 11869 11868 11867 11866 10669) (VECTOR 84 10643 17105 10637 471) (VECTOR 11870 11869 11868 11867 11866 10669) (VECTOR 85 17107 10644) (VECTOR 86 472 10645) (VECTOR 78 10648 10647) (VECTOR 11870 11869 11868 11867 11866 11864 10669 11025) (VECTOR 85 17111 10649) (VECTOR 86 473 10650) (VECTOR 78 10653 10652) (VECTOR 11870 11869 11868 11867 11866 11865 11864 11025) (VECTOR 85 17115 10654) (VECTOR 86 576 10655) (VECTOR 11870 11869 11868 11867 11866 11864 11025) (VECTOR 84 10665 17118 10658 473) (VECTOR 11870 11869 11868 11867 11866 11864 11025) (VECTOR 85 17120 10666) (VECTOR 86 474 10667) (VECTOR 54 0 11737 11737) (VECTOR 11865 11025) (VECTOR 85 17124 10669) (VECTOR 10671 11165 11164) (VECTOR 84 10674 17126 11679 475) (VECTOR 54 0 10675 17377) (VECTOR 10677 11324 11169) (VECTOR 84 10680 17129 11679 476) (VECTOR 10682) (VECTOR 84 11674 17131 11673 555) (VECTOR 10685 10684 17365) (VECTOR 84 11162 17133 11679 521) (VECTOR 10905) (VECTOR 84 10687 17135 11673 477) (VECTOR 10689 10912 10909) (VECTOR 84 10692 17137 11679 478) (VECTOR 54 0 10693 10688) (VECTOR 54 0 10695 10683) (VECTOR 10697 11324 11169) (VECTOR 84 10700 17141 11679 479) (VECTOR 11412) (VECTOR 84 10704 17143 11673 480) (VECTOR 10706 11165 11164) (VECTOR 84 10709 17145 11679 481) (VECTOR 54 0 10710 10705) (VECTOR 10712 11165 11164) (VECTOR 84 10715 17148 11679 482) (VECTOR 54 0 10719 10703) (VECTOR 10721 11324 11169) (VECTOR 84 10724 17151 11679 483) (VECTOR 78 10732 10731) (VECTOR 54 10832 10735 10730) (VECTOR 10740 10739) (VECTOR 85 17155 10726) (VECTOR 10745) (VECTOR 84 10890 17157 10883 496) (VECTOR 78 10748 10747) (VECTOR 10750 10749 17365) (VECTOR 84 10902 17160 10893 497) (VECTOR 54 10927 10754 10746) (VECTOR 78 10761 10759) (VECTOR 54 10956 10765 10758) (VECTOR 10767 10766) (VECTOR 85 17165 10820) (VECTOR 10771) (VECTOR 84 10772 17167 11673 484) (VECTOR 10775 10774 17365) (VECTOR 84 10778 17169 11679 485) (VECTOR 10905) (VECTOR 84 10780 17171 11673 486) (VECTOR 10782 10912 10909) (VECTOR 84 10785 17173 11679 487) (VECTOR 54 0 10786 10781) (VECTOR 54 0 10788 10773) (VECTOR 10790 11324 11169) (VECTOR 84 10793 17177 11679 488) (VECTOR 11412) (VECTOR 84 10795 17179 11673 489) (VECTOR 11412) (VECTOR 84 10798 17181 11673 490) (VECTOR 10800 11165 11164) (VECTOR 84 10803 17183 11679 491) (VECTOR 54 0 10804 10799) (VECTOR 10806 11165 11164) (VECTOR 84 10809 17186 11679 492) (VECTOR 54 0 10813 10797) (VECTOR 10815 11324 11169) (VECTOR 84 10818 17189 11679 493) (VECTOR 78 10829 10828) (VECTOR 54 10832 10831 10825) (VECTOR 11816 10833) (VECTOR 85 17193 10820) (VECTOR 86 494 10834) (VECTOR 11865) (VECTOR 85 17196 11865) (VECTOR 86 495 10836) (VECTOR 11025) (VECTOR 85 17199 11025) (VECTOR 11189) (VECTOR 85 17201 11189) (VECTOR 78 10841 10840) (VECTOR 54 10843 10842 11189) (VECTOR 10844) (VECTOR 85 17205 10844) (VECTOR 10849) (VECTOR 84 10890 17207 10883 496) (VECTOR 78 10852 10851) (VECTOR 10854 10853 17365) (VECTOR 84 10902 17210 10893 497) (VECTOR 54 10927 10858 10850) (VECTOR 78 10868 10865) (VECTOR 78 10872 10871) (VECTOR 10874 10873 10870) (VECTOR 84 11341 17215 11307 538) (VECTOR 54 10956 10877 10863) (VECTOR 54 11653 10953 17377) (VECTOR 10887) (VECTOR 84 10890 17219 10883 496) (VECTOR 78 10895 10894) (VECTOR 10897 10896 17365) (VECTOR 84 10902 17222 10893 497) (VECTOR 78 10905 10904) (VECTOR 10906) (VECTOR 84 11416 17225 11358 540) (VECTOR 78 10909 10908) (VECTOR 78 10912 10911) (VECTOR 10919 10918 10917 10916 10915 10914) (FORWARD -) (VECTOR 10920 10913 10910) (VECTOR 84 11538 17231 11419 543) (VECTOR 54 11653 10921 10907) (VECTOR 78 10924 10923) (VECTOR 54 10927 10926 10891) (VECTOR 78 10932 10931) (VECTOR 78 10939 10936) (VECTOR 78 10943 10942) (VECTOR 10945 10944 10941) (VECTOR 84 11341 17239 11307 538) (VECTOR 10947) (VECTOR 84 11416 17241 11358 540) (VECTOR 78 11164 11175) (VECTOR 78 11165 10950) (VECTOR 10952 10951 10949) (VECTOR 84 11538 17245 11419 543) (VECTOR 54 11653 10953 10948) (VECTOR 54 10956 10955 10934) (VECTOR 78 11169 11345) (VECTOR 10960 10959 10958) (VECTOR 84 11341 17250 11307 538) (VECTOR 78 10963 10962) (VECTOR 10965) (VECTOR 85 17253 10881) (VECTOR 86 498 10966) (VECTOR 11025) (VECTOR 85 17256 11025) (VECTOR 86 499 10968) (VECTOR 11878) (VECTOR 85 17259 11878) (VECTOR 86 500 10970) (VECTOR 78 10973 10972) (VECTOR 11878 11025) (VECTOR 85 17263 10974) (VECTOR 86 501 10975) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11189 11738) (VECTOR 84 10991 17266 10980 502) (VECTOR 11861 11846 11831 11812 11797 11741 11735 11734 11003 11189 11738) (VECTOR 85 17268 10992) (VECTOR 86 503 10993) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11003 11189 11738 11025) (VECTOR 85 17271 0) (VECTOR 86 504 10995) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11021 11189 11738) (VECTOR 85 17274 0) (VECTOR 86 512 10997) (VECTOR 50 11052 17306 17305 17304 17303 37) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11003 11189 11738) (VECTOR 84 11019 17278 11002 504) (VECTOR 50 11052 17306 17305 17304 17303 37) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11021 11189 11738) (VECTOR 85 17281 11020) (VECTOR 86 505 11022) (VECTOR 54 11024 11738 11738) (VECTOR 11738) (VECTOR 85 17285 11025) (VECTOR 86 506 11026) (VECTOR 11738) (VECTOR 85 17288 11738) (VECTOR 86 507 11028) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11738 11735 11734 11189) (VECTOR 85 17291 0) (VECTOR 86 568 11030) (VECTOR 11738 11070) (VECTOR 85 17294 0) (VECTOR 86 508 11032) (VECTOR 84 0 17587 11037 509) (VECTOR 85 17587 11038) (VECTOR 86 510 11039) (VECTOR 11738 11070) (VECTOR 85 17300 0) (VECTOR 86 511 11041) (VECTOR 512) (VECTOR 11055) (VECTOR 11057) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11189) (VECTOR 50 11052 17306 17305 17304 17303 37) (VECTOR 512) (VECTOR 11055) (VECTOR 11057) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11735 11734 11189) (VECTOR 50 11069 17311 17310 17309 17308 37) (VECTOR 11070) (VECTOR 85 17313 11053) (VECTOR 86 513 11071) (VECTOR 11738) (VECTOR 85 17316 11738) (VECTOR 86 514 11073) (VECTOR 11189) (VECTOR 85 17319 11189) (VECTOR 11233) (VECTOR 85 17321 11233) (VECTOR 11077) (VECTOR 85 17323 11077) (VECTOR 11079) (VECTOR 85 17325 11079) (VECTOR 86 515 11080) (VECTOR 11909) (VECTOR 85 17328 11909) (VECTOR 86 516 11082) (VECTOR 11909 11189) (VECTOR 85 17331 0) (VECTOR 86 517 11084) (VECTOR 11991) (VECTOR 84 11088 17334 11087 518) (VECTOR 11991) (VECTOR 85 17336 11089) (VECTOR 86 519 11090) (VECTOR 11909 11991 11189) (VECTOR 85 17339 0) (VECTOR 86 525 11092) (VECTOR 11211) (VECTOR 85 17342 11211) (VECTOR 54 0 11737 11736) (VECTOR 11095) (VECTOR 85 17345 11095) (VECTOR 54 0 11736 11187) (VECTOR 11097) (VECTOR 85 17348 11097) (VECTOR 54 0 17365 11099) (VECTOR 54 0 11104 11102) (VECTOR 54 0 17365 17367) (VECTOR 54 0 11111 11109) (VECTOR 54 0 11114 11106) (VECTOR 11120 11119 17374) (VECTOR 84 11162 17355 11679 521) (VECTOR 11124) (VECTOR 84 11674 17357 11673 555) (VECTOR 54 0 11128 11127) (VECTOR 54 0 17387 11129) (VECTOR 54 0 11132 11117) (VECTOR 54 0 17365 11134) (VECTOR 54 0 11353 17377) (VECTOR 54 0 11139 11137) (VECTOR 51 37) (VECTOR 54 0 17365 17367) (VECTOR 51 37) (VECTOR 54 0 11146 17367) (VECTOR 54 0 11770 11147) (VECTOR 54 0 11149 11144) (VECTOR 54 0 11152 11141) (VECTOR 11412) (VECTOR 84 11156 17372 11673 520) (VECTOR 51 37) (VECTOR 11159 11158 17374) (VECTOR 84 11162 17375 11679 521) (VECTOR 51 38) (VECTOR 11166 11165 11164) (VECTOR 84 11685 17378 11679 556) (VECTOR 54 0 11167 17377) (VECTOR 11170 11324 11169) (VECTOR 84 11668 17381 11679 554) (VECTOR 11172) (VECTOR 84 11674 17383 11673 555) (VECTOR 54 0 11175 11770) (VECTOR 54 0 11177 11176) (VECTOR 51 37) (VECTOR 54 0 17387 11178) (VECTOR 54 0 11181 11155) (VECTOR 11182) (VECTOR 85 17390 11133) (VECTOR 86 522 11183) (VECTOR 12000) (VECTOR 85 17393 12000) (VECTOR 86 523 11185) (VECTOR 78 11188 11187) (VECTOR 12000 11211) (VECTOR 85 17397 11189) (VECTOR 86 524 11190) (VECTOR 11909 11991) (VECTOR 84 11195 17400 11193 525) (VECTOR 11909 11991) (VECTOR 85 17402 11196) (VECTOR 86 526 11197) (VECTOR 12000 11909 11991 11211) (VECTOR 85 17405 0) (VECTOR 86 527 11199) (VECTOR 12000 11909 11997 11991 11999) (VECTOR 85 17408 0) (VECTOR 86 567 11201) (VECTOR 12000 11909 11991) (VECTOR 84 11207 17411 11204 527) (VECTOR 12000 11909 11991) (VECTOR 85 17413 11208) (VECTOR 86 528 11209) (VECTOR 54 0 11999 11997) (VECTOR 11997 11999) (VECTOR 85 17417 11211) (VECTOR 86 529 11212) (VECTOR 11999) (VECTOR 85 17420 11999) (VECTOR 86 530 11214) (VECTOR 11997) (VECTOR 85 17423 11997) (VECTOR 86 531 11216) (VECTOR 11999) (VECTOR 85 17426 11999) (VECTOR 86 532 11218) (VECTOR 11914) (VECTOR 85 17429 11914) (VECTOR 86 533 11220) (VECTOR 11999 11914) (VECTOR 85 17432 0) (VECTOR 86 534 11222) (VECTOR 84 0 17587 11225 535) (VECTOR 85 17587 11226) (VECTOR 86 536 11227) (VECTOR 11999 11914) (VECTOR 85 17438 0) (VECTOR 86 565 11229) (VECTOR 11914) (VECTOR 85 17441 11914) (VECTOR 54 0 11233 11232) (VECTOR 11234) (VECTOR 85 17444 11234) (VECTOR 78 11237 11236) (VECTOR 54 0 11240 11239) (VECTOR 11241) (VECTOR 85 17448 11241) (VECTOR 78 11248 11245) (VECTOR 11252 11251 11250) (VECTOR 84 11341 17451 11307 538) (VECTOR 78 11260 11257) (VECTOR 11264 11263 17507) (VECTOR 84 11455 17454 11436 545) (VECTOR 11268) (VECTOR 84 11516 17456 11458 546) (VECTOR 54 11518 17530 11269) (VECTOR 11272 11271 11270) (VECTOR 84 11538 17459 11419 543) (VECTOR 78 11278 11275) (VECTOR 11282) (VECTOR 84 11605 17462 11547 549) (VECTOR 54 11651 11286 11283) (VECTOR 54 11653 11287 11255) (VECTOR 54 0 11295 11291) (VECTOR 78 11300 11299) (VECTOR 11301) (VECTOR 84 11304 17468 11298 537) (VECTOR 78 11312 11309) (VECTOR 78 11317 11316) (VECTOR 11318) (VECTOR 84 11321 17472 11315 539) (VECTOR 78 11324 11323) (VECTOR 11331 11330 11329 11328 11327 11326) (FORWARD -) (VECTOR 11332 11325 11322) (VECTOR 84 11341 17477 11307 538) (VECTOR 54 0 11345 11770) (VECTOR 51 38) (VECTOR 54 0 17480 11347) (VECTOR 51 37) (VECTOR 54 0 11351 17482) (VECTOR 54 0 11353 11349) (VECTOR 54 0 11355 11344) (VECTOR 51 38) (VECTOR 78 11362 11361) (VECTOR 78 11365 11364) (VECTOR 11372 11371 11370 11369 11368 11367) (FORWARD -) (VECTOR 11373 11366 11363) (VECTOR 84 11382 17491 11360 541) (VECTOR 54 11384 11383 17486) (VECTOR 78 11389 11388) (VECTOR 78 11392 11391) (VECTOR 11399 11398 11397 11396 11395 11394) (FORWARD -) (VECTOR 11400 11393 11390) (VECTOR 84 11409 17498 11387 542) (VECTOR 78 11412 11411) (VECTOR 11413) (VECTOR 84 11416 17501 11358 540) (VECTOR 78 11424 11421) (VECTOR 78 11429 11428) (VECTOR 11430) (VECTOR 84 11433 17505 11427 544) (VECTOR 51 37) (VECTOR 78 11438 11437) (VECTOR 11445 11444 11443 11442 11441 11440) (FORWARD -) (VECTOR 11446 11439 17507) (VECTOR 84 11455 17511 11436 545) (VECTOR 51 38) (VECTOR 78 11462 11461) (VECTOR 78 11465 11464) (VECTOR 11472 11471 11470 11469 11468 11467) (FORWARD -) (VECTOR 11473 11466 11463) (VECTOR 84 11482 17518 11460 547) (VECTOR 54 11484 11483 17513) (VECTOR 78 11489 11488) (VECTOR 78 11492 11491) (VECTOR 11499 11498 11497 11496 11495 11494) (FORWARD -) (VECTOR 11500 11493 11490) (VECTOR 84 11509 17525 11487 548) (VECTOR 78 11512 11511) (VECTOR 11513) (VECTOR 84 11516 17528 11458 546) (VECTOR 51 37) (VECTOR 54 11518 17530 11517) (VECTOR 78 11521 11520) (VECTOR 11528 11527 11526 11525 11524 11523) (FORWARD -) (VECTOR 11529 11522 11519) (VECTOR 84 11538 17535 11419 543) (VECTOR 78 11544 11541) (VECTOR 51 38) (VECTOR 78 11551 11550) (VECTOR 78 11554 11553) (VECTOR 11561 11560 11559 11558 11557 11556) (FORWARD -) (VECTOR 11562 11555 11552) (VECTOR 84 11571 17543 11549 550) (VECTOR 54 11573 11572 17538) (VECTOR 78 11578 11577) (VECTOR 78 11581 11580) (VECTOR 11588 11587 11586 11585 11584 11583) (FORWARD -) (VECTOR 11589 11582 11579) (VECTOR 84 11598 17550 11576 551) (VECTOR 78 11601 11600) (VECTOR 11602) (VECTOR 84 11605 17553 11547 549) (VECTOR 78 11609 11607) (VECTOR 78 11614 11613) (VECTOR 11615) (VECTOR 84 11618 17557 11612 552) (VECTOR 78 11622 11620) (VECTOR 54 11624 11623 11619) (VECTOR 78 11629 11628) (VECTOR 78 11632 11631) (VECTOR 11639 11638 11637 11636 11635 11634) (FORWARD -) (VECTOR 11640 11633 11630) (VECTOR 84 11649 17565 11627 553) (VECTOR 54 11651 11650 11606) (VECTOR 54 11653 11652 11417) (VECTOR 78 11660 11657) (VECTOR 11665 11664 11663) (VECTOR 84 11668 17570 11679 554) (VECTOR 51 37) (VECTOR 17572) (VECTOR 84 11674 17573 11673 555) (VECTOR 51 37) (VECTOR 11682 11681 11680) (VECTOR 84 11685 17576 11679 556) (VECTOR 54 0 11686 17575) (VECTOR 54 0 11688 11662) (VECTOR 11689) (VECTOR 85 17580 11296) (VECTOR 86 558 11690) (VECTOR 12000 11909 11997 11991) (VECTOR 85 17583 11914) (VECTOR 86 557 11692) (VECTOR 84 0 17587 11695 558) (VECTOR) (VECTOR 85 17587 11696) (VECTOR 86 559 11697) (VECTOR 12000 11909 11997 11991) (VECTOR 85 17590 11914) (VECTOR 86 560 11699) (VECTOR 12000 11938 11997 11993 11991) (VECTOR 85 17593 11914) (VECTOR 86 586 11701) (VECTOR 12000 11997 11991) (VECTOR 84 11705 17596 62 560) (VECTOR 12000 11997 11991) (VECTOR 85 17598 11706) (VECTOR 86 561 11707) (VECTOR 11938 11993) (VECTOR 85 17601 11909) (VECTOR 86 562 11709) (VECTOR 11993) (VECTOR 85 17604 11993) (VECTOR 86 563 11711) (VECTOR 11938) (VECTOR 85 17607 11938) (VECTOR 86 564 11713) (VECTOR 11961 11999 11938) (VECTOR 85 17610 0) (VECTOR 86 580 11715) (VECTOR 11999) (VECTOR 84 11719 17613 11718 565) (VECTOR 11999) (VECTOR 85 17615 11720) (VECTOR 86 566 11721) (VECTOR 11733 11732 11731 11730 11729 11728) (FORWARD IF-PROCEDURE) (VECTOR 78 11770 11770) (VECTOR 78 11737 11736) (VECTOR 78 11740 11739) (VECTOR 11749 11748 11747 11746) (FORWARD NEGATIVE?) (VECTOR 11762 11761 11760 11759 11758 11757) (FORWARD IF-PROCEDURE) (VECTOR 78 11770 11770) (VECTOR 78 11773 11772) (VECTOR 11780 11779 11778 11777 11776 11775) (FORWARD -) (VECTOR 11781 11774 11771 11769 11754) (VECTOR 84 11796 17631 11743 569) (VECTOR 11805 11804 11803 11802 11801 11800) (FORWARD <=) (VECTOR 11822 11821 11820 11819 11818 11817 11816 11815) (FORWARD /) (VECTOR 11839 11838 11837 11836 11835 11834) (FORWARD -) (VECTOR 11854 11853 11852 11851 11850 11849) (FORWARD +) (VECTOR 11870 11869 11868 11867 11866 11865 11864) (FORWARD *) (VECTOR 11878 11861 11846 11831 11812 11797 11741 11738 11735 11734) (VECTOR 84 11908 17643 11727 568) (VECTOR 12000 11909 11997 11991) (VECTOR 84 11913 17645 11725 567) (VECTOR 11961 11938) (VECTOR 85 17647 11914) (VECTOR 86 577 11915) (VECTOR 11961) (VECTOR 85 17650 11961) (VECTOR 86 578 11917) (VECTOR 11938) (VECTOR 85 17653 11938) (VECTOR 86 579 11919) (VECTOR 12005 12004 12003 12002 12001 11972 11961 11999 11998 11997 11995 11994) (VECTOR 85 17656 0) (VECTOR 86 584 11921) (VECTOR 11961 11999) (VECTOR 84 11924 17659 63 580) (VECTOR 11961 11999) (VECTOR 85 17661 11925) (VECTOR 86 581 11926) (VECTOR 12005 12004 12003 12002 12001 11972 11998 11997 11995 11994) (VECTOR 84 11937 17664 66 582) (VECTOR 12005 12004 12003 12002 12001 11972 11998 11997 11995 11994) (VECTOR 85 17666 11938) (VECTOR 86 583 11939) (VECTOR 12005 12004 12003 12002 12001 11972 12000 11999 11998 11997 11995 11994 11993 11991) (VECTOR 85 17669 0) (VECTOR 86 590 11941) (VECTOR 12005 12004 12003 12002 12001 11972 11999 11998 11997 11995 11994) (VECTOR 84 11953 17672 64 584) (VECTOR 12005 12004 12003 12002 12001 11972 11999 11998 11997 11995 11994) (VECTOR 85 17674 11954) (VECTOR 86 585 11955) (VECTOR 12000 11997 11993 11991) (VECTOR 84 11960 17677 65 586) (VECTOR 12000 11997 11993 11991) (VECTOR 85 17679 11961) (VECTOR 86 587 11962) (VECTOR 84 11971 17683 11966 588) (VECTOR 12003 11996 11995 11994 11992) (VECTOR 85 17683 11972) (VECTOR 86 589 11973) (VECTOR 84 11987 17687 70 590) (VECTOR 12005 12004 12003 12002 12001 12000 11999 11998 11997 11995 11994 11993 11991) (VECTOR 85 17687 11988) (VECTOR 86 591 11989) (VECTOR 12005 12004 12003 12002 12001 12000 11999 11998 11997 11996 11995 11994 11993 11992 11991) (VECTOR 85 17690 0) (VECTOR 86 592 12006) (PAIR 12007 1587)))
