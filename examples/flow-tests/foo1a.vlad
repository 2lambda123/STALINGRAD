;;; Mapping and reduction

(define (map2-* l1 l2)
 (if (null? l1) '() (cons (* (car l1) (car l2)) (map2-* (cdr l1) (cdr l2)))))

(define ((reduce f i) l) (if (null? l) i (f (car l) ((reduce f i) (cdr l)))))

;;; Vectors

(define (dot u v) ((reduce + 0) (map2-* u v)))

(dot (list 4 2) (list 3 3))
