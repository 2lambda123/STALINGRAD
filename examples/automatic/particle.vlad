(include "math")

(define (distance-squared u v) (magnitude-squared (v- v u)))

(define (distance u v) (sqrt (distance-squared u v)))

(define (multivariate-argmin gradient f x)
 (let ((g (gradient f)))
  (letrec ((loop
	    (lambda (x fx gx eta i)
	     (cond ((<= (magnitude gx) (real 1e-5)) x)
		   ((= i (real 10)) (loop x fx gx (* (real 2) eta) (real 0)))
		   (else
		    (let ((x-prime (v- x (k*v eta gx))))
		     (if (<= (distance x x-prime) (real 1e-5))
			 x
			 (let ((fx-prime (f x-prime)))
			  (if (< fx-prime fx)
			      (loop x-prime fx-prime (g x-prime) eta (+ i 1))
			      (loop x fx gx (/ eta (real 2)) (real 0)))))))))))
   (loop x (f x) (g x) (real 1e-5) (real 0)))))

(define (multivariate-argmax f x)
 (multivariate-argmin (lambda (x) (- (real 0) (f x))) x))

(define (multivariate-max f x) (f (multivariate-argmax f x)))

(define (naive-euler gradient w)
 (let* ((charges
	 (list (list (real 10) (- (real 10) w)) (list (real 10) (real 0))))
	(x-initial (list (real 0) (real 8)))
	(xdot-initial (list (real 0.75) (real 0)))
	(delta-t (real 1e-1))
	(p (lambda (x)
	    ((reduce + (real 0))
	     (map (lambda (c) (/ (real 1) (distance x c))) charges)))))
  (letrec ((loop (lambda (x xdot)
		   (let* ((xddot (k*v (real -1) ((gradient p) x)))
			  (x-new (v+ x (k*v delta-t xdot))))
		     (if (positive? (list-ref x-new 1))
			 (loop x-new (v+ xdot (k*v delta-t xddot)))
			 (let* ((delta-t-f (/ (- (real 0) (list-ref x 1))
					      (list-ref xdot 1)))
				(x-t-f (v+ x (k*v delta-t-f xdot))))
			   (sqr (list-ref x-t-f 0))))))))
   (loop x-initial xdot-initial))))

(define (particle outer-gradient inner-gradient)
 (let* ((w0 (real 0))
	((list w*)
	 (multivariate-argmin outer-gradient
          (lambda ((list w)) (naive-euler inner-gradient w)) (list w0))))
   w*))

(particle gradient-F gradient-F)
 ===> (or 0.2020094843175354    ;; TODO Is this the right answer?
	  0.21063091077779036   ;; SLAD used to get this
	  0.20719187464861197)  ;; Now Stalingrad and SLAD both get this

(particle gradient-F gradient-R)
 ===> 0.2020094843175354

(particle gradient-R gradient-F)
 ===> 0.2020094843175354

(particle gradient-R gradient-R)
 ===> 0.2020094843175354
